SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for sys_cluster_info
-- ----------------------------
DROP TABLE IF EXISTS `sys_cluster_info`;
CREATE TABLE `sys_cluster_info`  (
  `cfg_key` varchar(64) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `cfg_type` char(1) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `cfg_value` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `memo` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  PRIMARY KEY (`cfg_key`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Compact;

-- ----------------------------
-- Table structure for bdos_dockerfile_template
-- ----------------------------
DROP TABLE IF EXISTS `bdos_dockerfile_template`;
CREATE TABLE `bdos_dockerfile_template` (
  `id` varchar(255) COLLATE utf8_bin NOT NULL,
  `create_time` datetime DEFAULT NULL,
  `dockerfile_content` longtext COLLATE utf8_bin,
  `dockerfile_name` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `tenant_name` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `created_by` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `project_id` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
SET FOREIGN_KEY_CHECKS=1;
-- ----------------------------
-- Records of bdos_dockerfile_template
-- ----------------------------

-- bdos_dockerfile_template
INSERT INTO `bdos_dockerfile_template` (`id`, `create_time`, `dockerfile_content`, `dockerfile_name`, `tenant_name`, `created_by`, `project_id`) VALUES ('123456', '2019-04-03 15:09:59', 'FROM ${baseImageUrl}/tomcat:8.5.38\r\nARG  warname=${fileName}\r\nWORKDIR  /usr/local/tomcat/webapps/\r\nCOPY ${warname} /tmp\r\nRUN warpath=$(echo $warname | cut -d \".\" -f 1) && mkdir -p ${warpath} && cp /tmp/$warname ${warpath} && cd ${warpath}/ && jar -xvf ${warname} && rm -f ${warname}\r\nCMD [\"catalina.sh\", \"run\"]', 'TOMCAT-8.5.38（自动解压war包）', 'imagetenant', '1111', '111');
INSERT INTO `bdos_dockerfile_template` (`id`, `create_time`, `dockerfile_content`, `dockerfile_name`, `tenant_name`, `created_by`, `project_id`) VALUES ('2c90839f69992bd201699933096e0003', '2019-05-20 11:44:12', 'FROM ${baseImageUrl}/tomcat:8.5.38\r\nCOPY ${fileName} /usr/local/tomcat/webapps/\r\nCMD [\"catalina.sh\", \"run\"]', 'TOMCAT-8.5.38（标准）', 'imagetenant', '1111', '111');

-- ----------------------------
-- Table structure for bdos_image
-- ----------------------------
DROP TABLE IF EXISTS `bdos_image`;
CREATE TABLE `bdos_image` (
  `id` varchar(255) NOT NULL,
  `ci_type` tinyint(4) DEFAULT NULL,
  `create_time` datetime DEFAULT NULL,
  `created_by` varchar(255) DEFAULT NULL,
  `description` varchar(6000) DEFAULT NULL,
  `image_name` varchar(255) DEFAULT NULL,
  `image_size` double DEFAULT NULL,
  `image_type` tinyint(4) DEFAULT NULL,
  `image_version` varchar(255) DEFAULT NULL,
  `ports` varchar(255) DEFAULT NULL,
  `project_id` varchar(255) DEFAULT NULL,
  `tenant_name` varchar(255) DEFAULT NULL,
  `version_num` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
SET FOREIGN_KEY_CHECKS=1;
-- ----------------------------
-- Records of bdos_image
-- ----------------------------

-- bdos_image
INSERT INTO `bdos_image` (`id`, `ci_type`, `create_time`, `created_by`, `description`, `image_name`, `image_size`, `image_type`, `image_version`, `ports`, `project_id`, `tenant_name`, `version_num`) VALUES ('1', '0', '2019-03-21 17:56:37', 'bdos-admin', 'JDK是 Java 语言的软件开发工具包，主要用于移动设备、嵌入式设备上的java应用程序。JDK是整个java开发的核心，它包含了JAVA的运行环境（JVM+Java系统类库）和JAVA工具', 'jdk', NULL, '1', '8', NULL, NULL, NULL, '2');
INSERT INTO `bdos_image` (`id`, `ci_type`, `create_time`, `created_by`, `description`, `image_name`, `image_size`, `image_type`, `image_version`, `ports`, `project_id`, `tenant_name`, `version_num`) VALUES ('16', '0', '2019-03-21 17:59:13', 'bdos-admin', 'Tomcat是Apache 软件基金会（Apache Software Foundation）的Jakarta 项目中的一个核心项目，由Apache、Sun 和其他一些公司及个人共同开发而成。由于有了Sun 的参与和支持，最新的Servlet 和JSP 规范总是能在Tomcat 中得到体现，Tomcat 5支持最新的Servlet 2.4 和JSP 2.0 规范。因为Tomcat 技术先进、性能稳定，而且免费，因而深受Java 爱好者的喜爱并得到了部分软件开发商的认可，成为目前比较流行的Web 应用服务器', 'tomcat', NULL, '1', '8-jre8-ths', NULL, NULL, NULL, '9');
INSERT INTO `bdos_image` (`id`, `ci_type`, `create_time`, `created_by`, `description`, `image_name`, `image_size`, `image_type`, `image_version`, `ports`, `project_id`, `tenant_name`, `version_num`) VALUES ('18', '0', '2019-03-21 17:59:20', 'bdos-admin', 'CentOS 是一个基于Red Hat Linux 提供的可自由使用源代码的企业级Linux发行版本。', 'centos', NULL, '1', '7.2.1511', NULL, NULL, NULL, '1');

-- ----------------------------
-- Table structure for bdos_image_version
-- ----------------------------
DROP TABLE IF EXISTS `bdos_image_version`;
CREATE TABLE `bdos_image_version` (
  `id` varchar(255) NOT NULL,
  `ci_type` tinyint(4) DEFAULT NULL,
  `create_time` datetime DEFAULT NULL,
  `created_by` varchar(255) DEFAULT NULL,
  `image_id` varchar(255) DEFAULT NULL,
  `image_size` double DEFAULT NULL,
  `image_type` tinyint(4) DEFAULT NULL,
  `image_version` varchar(255) DEFAULT NULL,
  `ports` varchar(255) DEFAULT NULL,
  `project_id` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
SET FOREIGN_KEY_CHECKS=1;
-- ----------------------------
-- Records of bdos_image_version
-- ----------------------------

-- bdos_image_version
INSERT INTO `bdos_image_version` (`id`, `ci_type`, `create_time`, `created_by`, `image_id`, `image_size`, `image_type`, `image_version`, `ports`, `project_id`) VALUES ('1', '0', '2019-03-21 17:56:37', 'bdos-admin', '1', NULL, '1', '8', NULL, NULL);
INSERT INTO `bdos_image_version` (`id`, `ci_type`, `create_time`, `created_by`, `image_id`, `image_size`, `image_type`, `image_version`, `ports`, `project_id`) VALUES ('12', '0', '2019-03-21 17:59:03', 'bdos-admin', '16', NULL, '1', '8.5.38', NULL, NULL);
INSERT INTO `bdos_image_version` (`id`, `ci_type`, `create_time`, `created_by`, `image_id`, `image_size`, `image_type`, `image_version`, `ports`, `project_id`) VALUES ('18', '0', '2019-03-21 17:59:20', 'bdos-admin', '18', NULL, '1', '7.2.1511', NULL, NULL);

-- ----------------------------
-- Table structure for bdos_ingress_domain
-- ----------------------------
DROP TABLE IF EXISTS `bdos_ingress_domain`;
CREATE TABLE `bdos_ingress_domain` (
  `id` varchar(255) NOT NULL,
  `add_base_url` varchar(255) DEFAULT NULL,
  `base_url_scheme` varchar(255) DEFAULT NULL,
  `config_status` tinyint(4) DEFAULT '0',
  `create_time` datetime DEFAULT NULL,
  `domain` varchar(255) DEFAULT NULL,
  `https_secret_name` varchar(255) DEFAULT NULL,
  `https_status` tinyint(4) DEFAULT '0',
  `https_tls_crt` longtext,
  `https_tls_key` longtext,
  `ingress_domain_name` varchar(255) DEFAULT NULL,
  `ip` varchar(255) DEFAULT NULL,
  `limit_rate` varchar(255) DEFAULT NULL,
  `limit_rate_after` varchar(255) DEFAULT NULL,
  `project_code` varchar(255) DEFAULT NULL,
  `proxy_pass_params` varchar(255) DEFAULT NULL,
  `server_alias` varchar(255) DEFAULT NULL,
  `tenant_name` varchar(255) DEFAULT NULL,
  `type` varchar(255) DEFAULT NULL,
  `update_time` datetime DEFAULT NULL,
  `x_forwarded_prefix` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
SET FOREIGN_KEY_CHECKS=1;
-- ----------------------------
-- Records of bdos_ingress_domain
-- ----------------------------

-- bdos_ingress_domain
INSERT INTO `bdos_ingress_domain` (`id`, `add_base_url`, `base_url_scheme`, `config_status`, `create_time`, `domain`, `https_secret_name`, `https_status`, `https_tls_crt`, `https_tls_key`, `ingress_domain_name`, `ip`, `limit_rate`, `limit_rate_after`, `project_code`, `proxy_pass_params`, `server_alias`, `tenant_name`, `type`, `update_time`, `x_forwarded_prefix`) VALUES ('1', '', '', '0', '2019-03-13 16:32:05', '{{root_domain}}', '', '0', '', '', '', '', '', '', '', '', '', 'admin', 'TLD', '2019-03-25 14:38:35', '');

-- bdos服务所需参数
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('BDOS_ADDRESS', '1', 'http://bdos.{{namespace}}.svc:8080/bdos', 'BDOS路径');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('BDOS_NAME', '1', 'BDOS', 'BDOS名称');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('CEPH_CONF', '1', 'ceph.conf', 'ceph配置名称');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('CEPH_ENABLE', '1', 'false', '是否启用ceph');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('CEPH_KEY', '1', '{{ceph.mon.admin_key}}', 'ceph密钥');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('CEPH_MONITOR', '1', '{{ceph.mon.ip}}:{{ceph.mon.port}}', 'ceph监听地址');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('CEPH_NAME', '1', 'admin', 'ceph名称');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('CEPH_RGW_ADMIN_ACCESSKEY', '1', '{{ceph.rgw.access_key}}', 'ceph对象访问密钥');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('CEPH_RGW_ADMIN_SECRETKEY', '1', '{{ceph.rgw.secret_key}}', 'ceph对象密钥');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('CEPH_RGW_ENDPOINT', '1', '{{ceph.rgw.ip}}:{{ceph.rgw.port}}', 'ceph对象访问地址');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('CEPH_SSH_CEPHDIR', '1', '{{ceph.ceph_dir}}', 'ceph配置地址');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('CEPH_SSH_MOUNTEXEC', '1', 'mount -t ceph {{ceph.mon.ip}}:{{ceph.mon.port}}:/ {{ceph.mds.mount_point}} -o name=admin,secretfile=/etc/ceph/admin.secret', 'ceph挂载命令');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('CEPH_SSH_MOUNTPOINT', '1', '{{ceph.mds.mount_point}}/', 'ceph挂载路径');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('CI_IMAGE_TEMP_PATH', '1', '../ciImageTemp/', '构建镜像缓存存放地址');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('CI_THREAD_POOL_CORE_SIZE', '1', '20', '构建线程池核心线程数');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('CI_THREAD_POOL_MAX_SIZE', '1', '100', '构建线程池最大线程数');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('COMPONENT_LABELS_ORDERID', '1', 'true', '组件是否启用订购ID');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('COMPONENT_LABELS_PROJECTID', '1', 'true', '组件是否启用项目ID');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('COMPONENT_SCHEDULER_LVM', '1', 'false', 'lvm调度是否开启');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('DEVOPS_ADMIN', '1', 'admin', 'DEVOPS管理员');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('DEVOPS_GLOBAL_CONFIGURE_ANT', '1', 'ant1.10.5', 'DEVOPS ANT配置');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('DEVOPS_GLOBAL_CONFIGURE_GO', '1', 'Go1.8', 'DEVOPS GO配置');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('DEVOPS_GLOBAL_CONFIGURE_JDK', '1', 'jdk1.8.0_111, jdk1.8.0_201', 'DEVOPS JDK配置');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('DEVOPS_GLOBAL_CONFIGURE_MAVEN', '1', 'maven-3.6.0, maven3.3.9', 'DEVOPS MAVEN配置');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('DEVOPS_GO_SHELL_CMD_PRE', '1', 'export GOPATH=${JENKINS_HOME}/workspace/', 'DEVOPS GOPATH');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('DEVOPS_PARAM', '1', 'image', 'DEVOPS参数');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('DEVOPS_PLUGIN_ANT', '1', 'ant@1.9', 'DEVOPS ANT插件版本');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('DEVOPS_PLUGIN_DOCKER', '1', 'docker-plugin@1.1.6', 'DEVOPS DOCKER插件版本');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('DEVOPS_PLUGIN_DOCKER_COMMONS', '1', 'docker-commons@1.13', 'DEVOPS DOCKER COMMONS插件版本');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('DEVOPS_PLUGIN_GIT', '1', 'git@3.9.3', 'DEVOPS GIT插件版本');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('DEVOPS_PLUGIN_GITLAB', '1', 'gitlab-plugin@1.5.11', 'DEVOPS GITLAB插件版本');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('DEVOPS_PLUGIN_GO', '1', 'golang@1.2', 'DEVOPS GO插件版本');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('DEVOPS_PLUGIN_PHING', '1', 'phing@0.13.3', 'DEVOPS PHING插件版本');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('DEVOPS_PLUGIN_PYTHON', '1', 'shiningpanda@0.24', 'DEVOPS PYTHON插件版本');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('DEVOPS_PLUGIN_SONAR', '1', 'sonar@2.8.1', 'DEVOPS SONAR插件版本');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('DEVOPS_PLUGIN_SSH_CREDENTIAL', '1', 'ssh-credentials@1.14', 'DEVOPS SSH插件版本');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('DEVOPS_PLUGIN_SVN', '1', 'subversion@2.12.1', 'DEVOPS SVN插件版本');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('DEVOPS_TOKEN', '1', 'admin', 'DEVOPS TOKEN');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('DEVOPS_URL', '1', 'http://{{devops.ip}}:{{devops.jenkins_port}}/jenkins', 'DEVOPS地址');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('DOCKER_API_VERSION', '1', '1.21', 'DOCKER API版本');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('DOCKER_DAEMON_APIVERSION', '1', 'v1.17.12', 'DOCKER终端版本');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('DOCKER_DAEMON_PORT', '1', '28015', 'DOCKER端口');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('DOCKER_URL', '1', 'tcp://{{devops.ip}}:{{devops.docker_port}}', 'DOCKER地址');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('DOCKER_WEBSOCKET_INTERCEPTURL', '1', '/ws/container/exec', 'DOCKER终端URL');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('ETCD_API_ADDRESS', '1', 'http://{{etcd.ip}}:{{etcd.client_port}}', 'ETCD API服务地址');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('FTP_HOST', '1', '{{ftp.ip}}', 'FTP IP地址');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('FTP_PASSWORD', '1', '{{ftp.password}}', 'FTP密码');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('FTP_PATH', '1', 'bdos', 'FTP主路径');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('FTP_PORT', '1', '{{ftp.port}}', 'FTP端口');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('FTP_USERNAME', '1', '{{ftp.username}}', 'FTP用户名称');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('GITHUB_API_URL', '1', 'https://api.github.com', 'GITHUB API地址');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('GITHUB_CODE_URL', '1', 'https://github.com', 'GITHUB地址');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('HARBOR_CRT_PATH', '1', '{{harbor.crt_path}}', 'HARBOR证书地址');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('HARBOR_EMAIL', '1', '{{harbor.email}}', 'HARBOR email地址');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('HARBOR_PASSWORD', '1', '{{harbor.password}}', 'HARBOR密码');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('HARBOR_PUBLIC_PROJECT_NAME', '1', 'library', 'HARBOR公共镜像仓库名称');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('HARBOR_REGISTRY_ADDRESS', '1', '{{harbor.dns}}:{{harbor.port}}', 'HARBOR访问地址');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('HARBOR_USERNAME', '1', '{{harbor.username}}', 'HARBOR管理员');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('KUBENETES_MASTER_URL', '1', 'http://{{master.vip}}:{{master.insecure_port}}', 'k8s主节点URL');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('LVM_VGNAME', '1', '{{operator.vgname}}', 'LVM名称');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('NODESELECTOR_COMPONENT', '1', 'false', '节点筛选是否开启');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('NODESELECTOR_PERFORMANCE', '1', 'false', '节点高低性能筛选是否开启');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('PINPOINT_SERVER_IP', '1', '{{pinpoint.server_ip}}', 'pinpoint服务IP');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('PINPOINT_SPAN_PORT', '1', '{{pinpoint.span_port}}', 'pinpoint节点明细数据上报端口');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('PINPOINT_STAT_PORT', '1', '{{pinpoint.stat_port}}', 'pinpoint节点汇总数据上报端口');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('PINPOINT_TCP_PORT', '1', '{{pinpoint.tcp_port}}', 'pinpoint节点元数据上报端口');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('RATIO_LIMITTOREQUESTCPU', '1', '4', 'CPU最小和需求比例');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('RATIO_LIMITTOREQUESTMEMORY', '1', '2', '内存最小和需求比例');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('SHERA_CI_CHECK_RESULT_INTERVAL_TIME', '1', '5000', 'SHERA结果校验间隔');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('SHERA_CI_CHECK_RESULT_TIMEOUT_COUNT', '1', '720', 'SHERA超时次数');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('SHERA_URL', '1', 'http://172.16.3.25:8788/she-ra', 'SHERA地址');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('SONAR_TOKEN', '1', 'admin', 'SONAR TOKEN');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('SONAR_URL', '1', 'http://{{devops.ip}}:{{devops.sonar_port}}/api', 'SONAR地址');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('SONAR_QUALITYFILE_NAME_SYSTEM', '1', 'Sonar way', '系统规则集');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('SONAR_USER_NAME', '1', 'admin', 'SONAR 的用户名');
INSERT INTO `sys_cluster_info` (`cfg_key`, `cfg_type`, `cfg_value`, `memo`) VALUES ('SONAR_USER_PWD', '1', 'admin', 'SONAR 的密码');

-- ----------------------------
-- Table structure for bdos_stateful_service_unit_version
-- ----------------------------
DROP TABLE IF EXISTS `bdos_stateful_service_unit_version`;
CREATE TABLE `bdos_stateful_service_unit_version` (
  `id` int(11) NOT NULL,
  `app_type` varchar(255) DEFAULT NULL,
  `extended_field` varchar(255) DEFAULT NULL,
  `remark` varchar(3000) DEFAULT NULL,
  `sort` int(11) DEFAULT NULL,
  `version` varchar(255) DEFAULT NULL,
  `version_path` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `idx_app` (`app_type`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
SET FOREIGN_KEY_CHECKS=1;
-- ----------------------------
-- Records of bdos_stateful_service_unit_version
-- ----------------------------

-- bdos_stateful_service_unit_version
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('1', 'codis', null, null, '1', '3.2.0', '{{harbor.dns}}:{{harbor.port}}/library/codis-image:latest');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('2', 'codis', 'exporter', null, '2', '3.2.0', '{{harbor.dns}}:{{harbor.port}}/library/redis-exporter:latest');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('3', 'es', null, null, '3', '2.4.5', '{{harbor.dns}}:{{harbor.port}}/library/elasticsearch:v2.4.5');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('4', 'es', 'exporter', null, '4', '2.4.5', '{{harbor.dns}}:{{harbor.port}}/library/elasticsearch_exporter:1.0.4');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('5', 'es', null, null, '5', '5.5.2', '{{harbor.dns}}:{{harbor.port}}/library/elasticsearch:v5.5.2_no_xpack');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('6', 'es', 'exporter', null, '6', '5.5.2', '{{harbor.dns}}:{{harbor.port}}/library/elasticsearch_exporter:1.0.4');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('7', 'es', 'kibana', null, '7', '5.5.2', '{{harbor.dns}}:{{harbor.port}}/library/kibana:v5.5.2_no_xpack');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('8', 'ftp', null, null, '8', '1.1.0', '{{harbor.dns}}:{{harbor.port}}/library/ftp-2.4:latest');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('9', 'kafka', null, null, '9', '2.11-0.9.0.0', '{{harbor.dns}}:{{harbor.port}}/library/kafka-alp-0.9.0:latest');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('10', 'kafka', null, null, '10', '2.11-0.10.0.0', '{{harbor.dns}}:{{harbor.port}}/library/kafka-alp-0.10.0:latest');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('11', 'kafka', null, null, '11', '2.11-0.10.1.1', '{{harbor.dns}}:{{harbor.port}}/library/kafka-alp-0.10.1:latest');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('12', 'kafka', null, null, '12', '2.11-1.0.0', '{{harbor.dns}}:{{harbor.port}}/library/kafka-alp-1.0.0:latest');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('13', 'memcached', 'single', null, '13', '1.5.9', '{{harbor.dns}}:{{harbor.port}}/library/memcached:1.5.9');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('14', 'memcached', 'exporter', null, '14', '1.5.9', '{{harbor.dns}}:{{harbor.port}}/library/memcached-exporter:v0.4.1');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('15', 'memcached', 'mm', null, '15', '1.4.13', '{{harbor.dns}}:{{harbor.port}}/library/repcached:1.4.13');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('16', 'memcached', 'exporter', null, '16', '1.4.13', '{{harbor.dns}}:{{harbor.port}}/library/memcached-exporter:v0.4.1');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('17', 'mysql', null, null, '17', '5.6', '{{harbor.dns}}:{{harbor.port}}/library/bonc-mysql56:latest');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('18', 'mysql', 'exporter', null, '18', '5.6', '{{harbor.dns}}:{{harbor.port}}/library/mysqld-exporter:latest');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('19', 'mysql', 'backup', null, '19', '5.6', '{{harbor.dns}}:{{harbor.port}}/library/bdos_mysql_backup:1.0.5_v24');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('20', 'mysql', null, null, '20', '5.7', '{{harbor.dns}}:{{harbor.port}}/library/bonc-mysql57:latest');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('21', 'mysql', 'exporter', null, '21', '5.7', '{{harbor.dns}}:{{harbor.port}}/library/mysqld-exporter:latest');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('22', 'mysql', 'backup', null, '22', '5.7', '{{harbor.dns}}:{{harbor.port}}/library/bdos_mysql_backup:1.0.5_v24');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('23', 'mysql', null, null, '23', '8.0', '{{harbor.dns}}:{{harbor.port}}/library/bonc-mysql80:latest');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('24', 'mysql', 'exporter', null, '24', '8.0', '{{harbor.dns}}:{{harbor.port}}/library/mysqld-exporter:latest');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('25', 'mysql', 'backup', null, '25', '8.0', '{{harbor.dns}}:{{harbor.port}}/library/bdos_mysql_backup:1.0.5_v80');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('26', 'prometheus', null, null, '26', '2.5.0', '{{harbor.dns}}:{{harbor.port}}/library/prometheus:v02');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('27', 'redis', null, null, '27', '3.2.11', '{{harbor.dns}}:{{harbor.port}}/library/bonc-redis:3.2.11');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('28', 'redis', 'exporter', null, '28', '3.2.11', '{{harbor.dns}}:{{harbor.port}}/library/redis-exporter:latest');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('29', 'storm', null, null, '29', '0.10.0', '{{harbor.dns}}:{{harbor.port}}/library/storm-alp-0.10.0:latest');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('30', 'storm', 'exporter', null, '30', '0.10.0', '{{harbor.dns}}:{{harbor.port}}/library/storm-exporter:latest');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('31', 'storm', null, null, '31', '1.0.2', '{{harbor.dns}}:{{harbor.port}}/library/storm-alp-1.0.2:latest');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('32', 'storm', 'exporter', null, '32', '1.0.2', '{{harbor.dns}}:{{harbor.port}}/library/storm-exporter:latest');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('33', 'storm', null, null, '33', '1.2.2', '{{harbor.dns}}:{{harbor.port}}/library/storm-alp-1.2.2:latest');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('34', 'storm', 'exporter', null, '34', '1.2.2', '{{harbor.dns}}:{{harbor.port}}/library/storm-exporter:latest');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('35', 'zookeeper', null, null, '35', '3.4.12', '{{harbor.dns}}:{{harbor.port}}/library/bonc-zookeeper:3.4.12');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('36', 'zookeeper', 'exporter', null, '36', '3.4.12', '{{harbor.dns}}:{{harbor.port}}/library/zookeeper_exporter:latest');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('37', 'mysql', 'phpmyadmin', null, '37', '5.6', '{{harbor.dns}}:{{harbor.port}}/library/phpmyadmin:latest');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('38', 'mysql', 'phpmyadmin', null, '38', '5.7', '{{harbor.dns}}:{{harbor.port}}/library/phpmyadmin:latest');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('39', 'mysql', 'phpmyadmin', null, '39', '8.0', '{{harbor.dns}}:{{harbor.port}}/library/phpmyadmin:latest');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('40', 'eureka', null, null, '40', 'Edgware.SR4', '{{harbor.dns}}:{{harbor.port}}/library/eureka:latest');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('41', 'configbus', null, null, '41', 'Edgware.SR4', '{{harbor.dns}}:{{harbor.port}}/library/configserver:latest');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('42', 'configbus', 'mq', null, '42', 'Edgware.SR4', '{{harbor.dns}}:{{harbor.port}}/library/rabbitmq:latest');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('43', 'postgresql', null, null, '43', '10.5.1', '{{harbor.dns}}:{{harbor.port}}/library/postgresql:10.5.1');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('44', 'postgresql', 'exporter', null, '44', '10.5.1', '{{harbor.dns}}:{{harbor.port}}/library/prometheus-postgres-exporter:latest');
INSERT INTO `bdos_stateful_service_unit_version` (`id`, `app_type`, `extended_field`, `remark`, `sort`, `version`, `version_path`) VALUES ('45', 'zuul', null, null, '45', 'Edgware.SR4', '{{harbor.dns}}:{{harbor.port}}/library/zuul:latest');

-- ----------------------------
-- Table structure for bdos_stateful_service_component_default_config
-- ----------------------------
DROP TABLE IF EXISTS `bdos_stateful_service_component_default_config`;
CREATE TABLE `bdos_stateful_service_component_default_config` (
  `id` varchar(255) NOT NULL,
  `app_type` varchar(50) DEFAULT NULL,
  `cnf_file` varchar(255) DEFAULT NULL,
  `def_value` varchar(255) DEFAULT NULL,
  `group` varchar(255) DEFAULT NULL,
  `input_type` varchar(255) DEFAULT NULL,
  `key` varchar(255) DEFAULT NULL,
  `name` varchar(255) DEFAULT NULL,
  `optional` varchar(2000) DEFAULT NULL,
  `product` int(11) DEFAULT '1',
  `regx` varchar(2000) DEFAULT NULL,
  `regx_remark` varchar(255) DEFAULT NULL,
  `remark` varchar(2000) DEFAULT NULL,
  `show_level` int(11) DEFAULT NULL,
  `sort` int(11) DEFAULT NULL,
  `unit` varchar(255) DEFAULT NULL,
  `unit_remark` varchar(2000) DEFAULT NULL,
  `update_enable` int(11) DEFAULT NULL,
  `value_type` varchar(255) DEFAULT NULL,
  `version` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `app_version` (`app_type`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
SET FOREIGN_KEY_CHECKS=1;
-- ----------------------------
-- Records of bdos_stateful_service_component_default_config
-- ----------------------------

-- bdos_stateful_service_component_default_config
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('0', 'kafka', 'server.properties', '', 'proxy', 'input', 'zookeeper.connect', '', '', '0', '', '', 'Zookeeper host string', '0', '13', null, '', '0', 'String', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'advertised.host.name', '', '', '0', '', '', 'Hostname to publish to ZooKeeper for clients to use. In IaaS environments, this may need to be different from the interface to which the broker binds. If this is not set, it will use the value for \"host.name\" if configured. Otherwise it will use the value returned from java.net.InetAddress.getCanonicalHostName().', '0', '14', null, '', '0', 'String', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('10', 'kafka', 'server.properties', '10', 'proxy', 'input', 'leader.imbalance.per.broker.percentage', '', '', '0', '^(([1-9]\\d?)|100)$', '输入必须在1到100之间', '设置每个broker自动平衡百分比。', '2', '15', null, '', '1', 'int', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('100', 'kafka', 'server.properties', '6', 'proxy', 'input', 'zookeeper.session.timeout.ms', '', '', '1000', '', '', '', '0', '16', null, '秒', '0', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1000', 'redis', 'redis.conf', '5', '从节点', null, 'repl-diskless-sync-delay', null, null, '0', null, null, null, '0', '26', null, null, '0', 'int', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1001', 'redis', 'redis.conf', '10', '从节点', null, 'repl-ping-slave-period', null, null, '0', null, null, null, '0', '27', null, null, '0', 'int', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1002', 'redis', 'redis.conf', '60', '从节点', null, 'repl-timeout', null, null, '0', null, null, null, '0', '28', null, null, '0', 'int', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1003', 'redis', 'redis.conf', 'no', '从节点', null, 'repl-disable-tcp-nodelay', null, null, '0', null, null, null, '0', '29', null, null, '0', 'String', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1004', 'redis', 'redis.conf', '1mb', '从节点', null, 'repl-backlog-size', null, null, '0', null, null, null, '0', '30', null, null, '0', 'String', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1005', 'redis', 'redis.conf', '3600', '从节点', null, 'repl-backlog-ttl', null, null, '0', null, null, null, '0', '31', null, null, '0', 'int', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1006', 'redis', 'redis.conf', '100', '从节点', null, 'slave-priority', null, null, '0', null, null, null, '0', '32', null, null, '0', 'int', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1007', 'redis', 'redis.conf', '3', '从节点', null, 'min-slaves-to-write', null, null, '0', null, null, null, '0', '33', null, null, '0', 'int', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1008', 'redis', 'redis.conf', '10', '从节点', null, 'min-slaves-max-lag', null, null, '0', null, null, null, '0', '34', null, null, '0', 'int', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1009', 'redis', 'redis.conf', 'foobared', '安全设置', null, 'requirepass', '密码', null, '0', null, null, null, '0', '35', null, null, '0', 'String', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('101', 'kafka', 'server.properties', 'false', 'proxy', 'radio', 'zookeeper.set.acl', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', '', '', '', '0', '17', null, '', '0', 'boolean', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1010', 'redis', 'redis.conf', null, '安全设置', 'input', 'rename-command', '重命名命令', null, '0', null, '命令请参考redis官网', '请输入要屏蔽的命令，用空格分隔，示例:command1|command2', '1', '38', null, null, '1', 'String', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1011', 'redis', 'redis.conf', '10000', 'LIMITS', 'input', 'maxclients', '最大连接数', null, '0', '^([1-9]|[1-9]\\d+)$', '请输入大于0的整数', '限制同时连接的客户数量。当连接数超过这个值时，redis 将不再接收其他连接请求，客户端尝试连接时将收到error 信息。默认为10000，要考虑系统文件描述符限制，不宜过大，浪费文件描述符，具体多少根据具体情况而定。', '1', '37', null, null, '1', 'int', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1012', 'redis', 'redis.conf', '<bytes>', 'LIMITS', null, 'maxmemory', '最大内存限制', null, '0', null, null, null, '0', '38', null, null, '0', 'String', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1013', 'redis', 'redis.conf', 'volatile-lru', 'LIMITS', 'radio', 'maxmemory-policy', '清理规则', '{\"noeviction\":\"noeviction\",\"allkeys-lru\":\"allkeys-lru\",\"volatile-lru\":\"volatile-lru\",\"allkeys-random\":\"allkeys-random\",\"volatile-random\":\"volatile-random\",\"volatile-ttl\":\"volatile-ttl\"}', '0', '^\\S*$', '请选择，不能为空', 'volatile-lru -> 使用 LRU 算法移除包含过期设置的 key 。\nnoeviction -> 不让任何 key 过期，只是给写入操作返回一个错误。\nallkeys-lru -> 根据 LRU 算法移除所有的 key 。\nvolatile-random -> 对”过期集合”中的数据采取”随即选取”算法,并移除选中的K-V,直到”内存足够”为止. 如果如果”过期集合”中全部移除全部移除仍不能满足,将OOM\nallkeys-random -> 对所有的数据,采取”随机选取”算法,并移除选中的K-V,直到”内存足够”为止\nvolatile-ttl ->对”过期集合”中的数据采取TTL算法(最小存活时间),移除即将过期的数据.', '2', '39', null, null, '1', 'String', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1014', 'redis', 'redis.conf', '3', 'LIMITS', 'input', 'maxmemory-samples', 'LRU算法取样数', null, '0', '^[1-9]|10$', '请输入1到10的整数', 'LRU算法取样', '2', '40', null, null, '1', 'int', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1015', 'redis', 'redis.conf', 'no', 'AOF设置', 'radio', 'appendonly', '开启aof', '{\"是\":\"yes\",\"否\":\"no\"}', '0', 'yes|no', '请输入yes或者no', '开启aof', '1', '41', null, null, '1', 'String', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1016', 'redis', 'redis.conf', 'appendonly.aof', 'AOF设置', null, 'appendfilename', 'aof文件名', null, '0', null, null, null, '2', '42', null, null, '1', 'String', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1017', 'redis', 'redis.conf', 'everysec', 'AOF设置', 'radio', 'appendfsync', '备份规则', '{\"always\":\"always\",\"everysec\":\"everysec\",\"no\":\"no\"}', '0', '^\\S*$', '请选择，不能为空', '设置对appendonly.aof 文件进行同步的频率。always 表示每次有写操作都进行同步，everysec 表示对写操作进行累积，每秒同步一次。no不主动fsync，由OS自己来完成。这个需要根据实际业务场景进行配置。', '2', '43', null, null, '1', 'String', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1018', 'redis', 'redis.conf', 'no', 'AOF设置', 'radio', 'no-appendfsync-on-rewrite', '持续同步', '{\"是\":\"yes\",\"否\":\"no\"}', '0', 'yes|no', '请输入yes或者no', '在aof rewrite期间,是否对aof新记录的append暂缓使用文件同步策略,主要考虑磁盘IO开支和请求阻塞时间。默认为no,表示”不暂缓”,新的aof记录仍然会被立即同步。', '2', '44', null, null, '1', 'String', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1019', 'redis', 'redis.conf', '100', 'AOF设置', 'input', 'auto-aof-rewrite-percentage', '触发重写aof文件比例', null, '0', '^[1-9]\\d[0]?$', '请输入10到100的整数', '当Aof log增长超过指定比例时，重写log file， 设置为0表示不自动重写Aof 日志，重写是为了使aof体积保持最小，而确保保存最完整的数据。', '2', '45', null, null, '1', 'int', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('102', 'kafka', 'server.properties', 'class org.apache.kafka.common.security.auth.DefaultPrincipalBuilde', 'proxy', 'input', 'principal.builder.class', '', '', '0', '', '', '', '0', '18', null, '', '0', 'String', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1020', 'redis', 'redis.conf', '64', 'AOF设置', 'input', 'auto-aof-rewrite-min-size', '出发重写aof的最小尺寸', null, '1047576', '^[1-9]|([1-10]\\d+)$', '请输入大于0的整数', '触发aof rewrite的最小文件尺寸。', '2', '46', 'mb', 'mb', '1', 'String', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1021', 'redis', 'redis.conf', 'yes', 'AOF设置', 'radio', 'aof-load-truncated', '启动加载被截断的aof文件', '{\"是\":\"yes\",\"否\":\"no\"}', '0', 'yes|no', '请输入yes或者no', 'redis在启动的时候可以加载被截断的AOF文件，默认启用。', '2', '47', null, null, '1', 'String', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1022', 'redis', 'redis.conf', '5000', 'LUA脚本', 'input', 'lua-time-limit', 'lua脚本运行最大时间', null, '0', '^[1-9]|0|([1-9]\\d+)$', '请输入0或大于0的整数', 'lua脚本运行的最大时间', '2', '48', null, '毫秒', '1', 'int', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1023', 'redis', 'redis.conf', '10000', '慢日志记录', 'input', 'slowlog-log-slower-than', '慢日志时间', null, '0', '^[1-9]|0|([1-9]\\d+)$', '请输入大于0的整数', '“慢操作日志”记录,单位:微秒(百万分之一秒,1000 * 1000),如果操作时间超过此值,将会把command信息”记录”起来.(内存,非文件)。其中”操作时间”不包括网络IO开支,只包括请求达到server后进行”内存实施”的时间.”0”表示记录全部操作。', '2', '49', null, '微秒', '1', 'int', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1024', 'redis', 'redis.conf', '128', '慢日志记录', 'input', 'slowlog-max-len', '记录条数', null, '0', '^[1-9]|([1-9]\\d+)$', '请输入大于1的整数', '“慢操作日志”保留的最大条数,”记录”将会被队列化,如果超过了此长度,旧记录将会被移除。可以通过”SLOWLOG args”查看慢记录的信息(SLOWLOG get 10,SLOWLOG reset)。', '2', '50', null, null, '1', 'int', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1025', 'redis', 'redis.conf', '0', '延迟监控', 'input', 'latency-monitor-threshold', '延迟监控', null, '0', '^[1-9]|([1-10]\\d+)$', '请输入0或大于0的整数', '延迟监控，用于记录等于或超过了指定时间的操作，默认是关闭状态，即值为0。', '2', '51', null, null, '1', 'int', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1026', 'redis', 'redis.conf', null, '事件通知', 'input', 'notify-keyspace-events', '键空间通知', null, '0', '^[1-9]|0|([1-9]\\d+)$', '请参考redis官网了解配置格式', '客户端可以通过订阅/发布(Pub/Sub)机制，接收那些以某种方式改变了Redis数据空间的事件通知。', '2', '52', null, null, '1', 'String', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1027', 'redis', 'redis.conf', '512', '数据结构', 'input', 'hash-max-ziplist-entries', null, null, '0', '^[1-9]|([1-10]\\d+)$', '请输入大于0的整数', 'ziplist中允许存储的最大条目个数，默认为512', '2', '53', null, null, '1', 'int', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1028', 'redis', 'redis.conf', '64', '数据结构', 'input', 'hash-max-ziplist-value', null, null, '0', '^[1-9]|([1-10]\\d+)$', '请输入大于0的整数', 'ziplist中允许条目value值最大字节数，默认为64', '2', '54', null, null, '1', 'int', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1029', 'redis', 'redis.conf', '512', '数据结构', 'input', 'list-max-ziplist-entries', null, null, '0', '^[1-9]|([1-10]\\d+)$', '请输入大于0的整数', 'ziplist中允许存储的最大条目个数，默认为512', '2', '55', null, null, '1', 'int', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('103', 'kafka', 'server.properties', '/usr/bin/kinit', 'proxy', 'input', 'sasl.kerberos.kinit.cmd', '', '', '0', '', '', '', '0', '19', null, '', '0', 'String', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1030', 'redis', 'redis.conf', '64', '数据结构', 'input', 'list-max-ziplist-value', null, null, '0', '^[1-9]|([1-10]\\d+)$', '请输入大于0的整数', 'ziplist中允许条目value值最大字节数，默认为64', '2', '56', null, null, '1', 'int', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1031', 'redis', 'redis.conf', '512', '数据结构', 'input', 'set-max-intset-entries', null, null, '0', '^[1-9]|([1-10]\\d+)$', '请输入大于0的整数', 'intset中允许保存的最大条目个数,如果达到阀值,intset将会被重构为hashtable', '2', '57', null, null, '1', 'int', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1032', 'redis', 'redis.conf', '128', '数据结构', 'input', 'zset-max-ziplist-entries', null, null, '0', '^[1-9]|([1-10]\\d+)$', '请输入大于0的整数', 'ziplist中允许存储的最大条目个数，默认为128', '2', '58', null, null, '1', 'int', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1033', 'redis', 'redis.conf', '64', '数据结构', 'input', 'zset-max-ziplist-value', null, null, '0', '^[1-9]|([1-10]\\d+)$', '请输入大于0的整数', 'ziplist中允许条目value值最大字节数，默认为64', '2', '59', null, null, '1', 'int', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1034', 'redis', 'redis.conf', '3000', '数据结构', null, 'hll-sparse-max-bytes', null, null, '0', null, null, null, '2', '60', null, null, '1', 'int', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1035', 'redis', 'redis.conf', 'yes', '数据结构', null, 'activerehashing', null, null, '0', null, null, null, '2', '61', null, null, '1', 'String', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1036', 'redis', 'redis.conf', 'normal 0 0 0', '数据结构', 'input', 'client-output-buffer-limit', null, null, '0', '^\\S*$', '请参考redis官网了解配置格式', '客户端buffer控制。', '2', '62', null, null, '1', 'String', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1037', 'redis', 'redis.conf', 'slave 256m 64m 60', '数据结构', 'input', 'client-output-buffer-limit', null, null, '0', '^\\S*$', '请参考redis官网了解配置格式', '客户端buffer控制。', '2', '63', null, null, '1', 'String', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1038', 'redis', 'redis.conf', 'pubsub 32mb 8mb 60', '数据结构', 'input', 'client-output-buffer-limit', null, null, '0', '^\\S*$', '请参考redis官网了解配置格式', '客户端buffer控制。', '2', '64', null, null, '1', 'String', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1039', 'redis', 'redis.conf', '10', '数据结构', 'input', 'hz', null, null, '0', '^[1-9]|([1-10]\\d+)$', '请输入大于0的整数', 'hz默认设为10，提高它的值将会占用更多的cpu，当然相应的redis将会更快的处理同时到期的许多key，以及更精确的去处理超时。hz的取值范围是1~500，通常不建议超过100，只有在请求延时非常低的情况下可以将值提升到100。', '2', '65', null, null, '1', 'int', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('104', 'kafka', 'server.properties', '60000', 'proxy', 'input', 'sasl.kerberos.min.time.before.relogin', '', '', '0', '', '', '', '0', '20', null, '', '0', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1046', 'mysql', 'my.cnf', '32', 'mysqld', 'text', 'binlog_cache_size', '开启log-bin时，为每个客户端分配的二进制日志缓存大小', 'NULL', '1', '^([1-9]\\d{0,12}|1[0-6]\\d{0,12}|17[0-4]\\d{0,11}|175[0-8]\\d{0,10}|1759[0-1]\\d{0,9}|17592000000000)$', '请输入1到17592000000000之间的整数', '请输入1到17592000000000之间的整数', '1', '9', 'K', 'K', '1', 'int', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1047', 'mysql', 'my.cnf', '16', 'mysqld', 'text', 'innodb_log_buffer_size', '缓冲日志数据的缓冲区的大小', 'NULL', '1', '^([1-9]|[1-9]\\d{1,2}|[1-3]\\d{3}|40[0-8]\\d|409[0-6])$', '请输入1到4096之间的整数', '请输入1到4096之间的整数', '2', '36', 'M', 'M', '1', 'int', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1048', 'mysql', 'my.cnf', '48', 'mysqld', 'text', 'innodb_log_file_size', '日志组中每个日志文件的大小', 'NULL', '1', '^([4-9]|[1-9]\\d+)$', '请输入4到262144之间的整数', '请输入4到262144之间的整数', '2', '35', 'M', 'M', '1', 'int', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1049', 'mysql', 'my.cnf', '2', 'mysqld', 'text', 'innodb_log_files_in_group', '日志组文件个数', 'NULL', '0', '^[2-9]$|^[1-9]\\d$|^100$', '请输入2到100之间的整数', '请输入2到100之间的整数', '1', '11', 'NULL', 'NULL', '1', 'int', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('105', 'kafka', 'server.properties', '[DEFAULT]', 'proxy', 'input', 'sasl.kerberos.principal.to.local.rules', '', '', '0', '', '', '', '0', '21', null, '', '0', 'String', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1050', 'mysql', 'my.cnf', '50', 'mysqld', 'text', 'innodb_lock_wait_timeout', 'innodb行锁锁定等待超时', 'NULL', '1', '^([1-9]\\d{0,8}|10[0-6]\\d{0,7}|107[0-2]\\d{0,6}|1073[0-6]\\d{0,5}|1073700000)$', '请输入1到1073700000之间的整数', '请输入1到1073700000之间的整数', '2', '29', 'NULL', '秒', '1', 'int', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1051', 'mysql', 'my.cnf', '100', 'mysqld', 'text', 'max_connect_errors', '每个客户端连接最大的错误允许数量', 'NULL', '1', '^([1-9]\\d{0,12}|1[0-6]\\d{0,12}|17[0-4]\\d{0,11}|175[0-8]\\d{0,10}|1759[0-1]\\d{0,9}|17592000000000)$', '请输入1到17592000000000之间的整数', '请输入1到17592000000000之间的整数', '2', '30', 'NULL', 'B', '1', 'int', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1052', 'mysql', 'my.cnf', 'InnoDB', 'mysqld', 'radio', 'default_tmp_storage_engine', '临时表的默认存储引擎', '{\"InnoDB\":\"InnoDB\",\"MyISAM\":\"MyISAM\",\"MRG_MYISAM\":\"MRG_MYISAM\",\"MEMORY\":\"MEMORY\",\"BLACKHOLE\":\"BLACKHOLE\",\"CSV\":\"CSV\",\"ARCHIVE\":\"ARCHIVE\",\"PERFORMANCE_SCHEMA\":\"PERFORMANCE_SCHEMA\"}', '0', 'NULL', 'NULL', 'NULL', '2', '15', 'NULL', 'NULL', '1', 'String', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1053', 'mysql', 'my.cnf', 'InnoDB', 'mysqld', 'radio', 'default_storage_engine', '永久表的默认存储引擎', '{\"InnoDB\":\"InnoDB\",\"MyISAM\":\"MyISAM\",\"MRG_MYISAM\":\"MRG_MYISAM\",\"MEMORY\":\"MEMORY\",\"BLACKHOLE\":\"BLACKHOLE\",\"CSV\":\"CSV\",\"ARCHIVE\":\"ARCHIVE\",\"PERFORMANCE_SCHEMA\":\"PERFORMANCE_SCHEMA\"}', '0', 'NULL', 'NULL', 'NULL', '2', '16', 'NULL', 'NULL', '1', 'String', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1054', 'mysql', 'my.cnf', 'binary', 'mysqld', 'text', 'character_set_filesystem', '数据库文件系统字符集', 'NULL', '0', '[^\\0]+', '可在MySQL官网查看支持哪些字符集', '可在MySQL官网查看支持哪些字符集', '0', '32', 'NULL', 'NULL', '1', 'String', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1055', 'mysql', 'my.cnf', 'ROW', 'mysqld', 'radio', 'binlog_format', 'MySQL的复制方式', '{\"ROW\":\"ROW\",\"STATEMENT\":\"STATEMENT\",\"MIXED\":\"MIXED\"}', '0', 'NULL', 'NULL', 'NULL', '1', '4', 'NULL', 'NULL', '1', 'String', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1056', 'mysql', 'my.cnf', 'utf8mb4_unicode_ci', 'mysqld', 'text', 'collation-server', '服务器默认排序规则', 'NULL', '0', '[^\\0]+', '可在MySQL官网查看支持哪些字符集', '可在MySQL官网查看支持哪些字符集', '0', '13', 'NULL', 'NULL', '1', 'String', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1057', 'mysql', 'my.cnf', 'utf8mb4', 'client', 'text', 'default-character-set', 'MySQL数据库默认字符集', 'NULL', '0', '[^\\0]+', '可在MySQL官网查看支持哪些字符集', '可在MySQL官网查看支持哪些字符集', '0', '14', 'NULL', 'NULL', '1', 'String', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('106', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'sasl.kerberos.service.name', '', '', '0', '', '', '', '0', '22', null, '', '0', 'String', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1062', 'es', 'elasticsearch.yml', '5', 'proxy', 'input', 'index.number_of_shards', '', '', '0', '^[0-9]+$', '请输入非负整数', '默认索引分片个数', '1', '1', '', '', '1', 'int', '2.4.5');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1063', 'es', 'elasticsearch.yml', '1', 'proxy', 'input', 'index.number_of_replicas', '', '', '0', '^[0-9]+$', '请输入非负整数', '默认索引副本个数', '1', '2', '', '', '1', 'int', '2.4.5');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1064', 'es', 'elasticsearch.yml', '100', 'proxy', 'input', 'http.max_content_length', '', '', '0', '^[0-9]+$', '请输入非负整数', '设置内容的最大容量', '2', '4', 'mb', 'MB', '1', 'String', '2.4.5');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1065', 'es', 'elasticsearch.yml', '1', 'proxy', 'input', 'gateway.recover_after_nodes', '', '', '0', '^[0-9]+$', '请输入非负整数', '设置集群中N个节点启动时进行数据恢复', '2', '5', '', '', '1', 'int', '2.4.5');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1066', 'es', 'elasticsearch.yml', '5', 'proxy', 'input', 'gateway.recover_after_time', '', '', '0', '^[0-9]+$', '请输入非负整数', '设置初始化数据恢复进程的超时时间', '2', '6', 'm', '分', '1', 'String', '2.4.5');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1067', 'es', 'elasticsearch.yml', '2', 'proxy', 'input', 'gateway.expected_nodes', '', '', '0', '^[0-9]+$', '请输入非负整数', '设置这个集群中节点的数量，默认为2，一旦这N个节点启动，就会立即进行数据恢复', '2', '7', '', '', '1', 'int', '2.4.5');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1068', 'es', 'elasticsearch.yml', '4', 'proxy', 'input', 'cluster.routing.allocation.node_initial_primaries_recoveries', '', '', '0', '^[0-9]+$', '请输入非负整数', '初始化数据恢复时，并发恢复线程的个数', '2', '8', '', '', '1', 'int', '2.4.5');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1069', 'es', 'elasticsearch.yml', '4', 'proxy', 'input', 'cluster.routing.allocation.node_concurrent_recoveries', '', '', '0', '^[0-9]+$', '请输入非负整数', '添加删除节点或负载均衡时并发恢复线程的个数', '2', '9', '', '', '1', 'int', '2.4.5');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('107', 'kafka', 'server.properties', '0.05', 'proxy', 'input', 'sasl.kerberos.ticket.renew.jitter', '', '', '0', '', '', '', '0', '23', null, '', '0', 'String', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1070', 'es', 'elasticsearch.yml', '0', 'proxy', 'input', 'indices.recovery.max_size_per_sec', '', '', '0', '^[0-9]+$', '请输入非负整数', '设置数据恢复时限制的带宽，如入100mb，默认为0，即无限制', '2', '10', '', '', '1', 'String', '2.4.5');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1071', 'es', 'elasticsearch.yml', '5', 'proxy', 'input', 'indices.recovery.concurrent_streams', '', '', '0', '^[0-9]+$', '请输入非负整数', '设置这个参数来限制从其它分片恢复数据时最大同时打开并发流的个数，默认为5', '2', '11', '', '', '1', 'int', '2.4.5');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1072', 'es', 'elasticsearch.yml', '1', 'proxy', 'input', 'discovery.zen.minimum_master_nodes', '', '', '0', '^[0-9]+$', '请输入非负整数', '设置这个参数来保证集群中的节点可以知道其它N个有master资格的节点。默认为1，对于大的集群来说，可以设置大一点的值（2-4）', '2', '12', '', '', '1', 'int', '2.4.5');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1073', 'es', 'elasticsearch.yml', '3', 'proxy', 'input', 'discovery.zen.ping.timeout', '', '', '0', '^[0-9]+$', '请输入非负整数', '设置集群中自动发现其它节点时ping连接超时时间，默认为3秒，对于比较差的网络环境可以高点的值来防止自动发现时出错', '2', '13', 's', '秒', '1', 'String', '2.4.5');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1074', 'es', 'elasticsearch.yml', 'true', 'proxy', 'select', 'discovery.zen.ping.multicast.enabled', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', '', '', '设置是否打开多播发现节点，默认是true', '2', '14', '', '', '1', 'boolean', '2.4.5');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1075', 'es', 'elasticsearch.yml', 'true', 'proxy', 'select', 'bootstrap.memory_lock', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', '', '', '设置为true来锁住内存', '2', '15', '', '', '1', 'boolean', '2.4.5');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1076', 'es', 'elasticsearch.yml', '1', 'proxy', 'input', 'index.merge.scheduler.max_thread_count', '', '', '0', '^[0-9]+$', '请输入非负整数', '索引合并调度器的最大线程数', '2', '3', '', '', '1', 'int', '2.4.5');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1078', 'es', 'elasticsearch.yml', '100', 'proxy', 'input', 'http.max_content_length', '', '', '0', '^[0-9]+$', '请输入非负整数', '设置内容的最大容量', '2', '4', 'mb', 'MB', '1', 'String', '5.5.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1079', 'es', 'elasticsearch.yml', '1', 'proxy', 'input', 'gateway.recover_after_nodes', '', '', '0', '^[0-9]+$', '请输入非负整数', '设置集群中N个节点启动时进行数据恢复', '2', '5', '', '', '1', 'int', '5.5.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('108', 'kafka', 'server.properties', '0.8', 'proxy', 'input', 'sasl.kerberos.ticket.renew.window.factor', '', '', '0', '', '', '', '0', '24', null, '', '0', 'String', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1080', 'es', 'elasticsearch.yml', '5', 'proxy', 'input', 'gateway.recover_after_time', '', '', '0', '^[0-9]+$', '请输入非负整数', '设置初始化数据恢复进程的超时时间', '2', '6', 'm', '分', '1', 'String', '5.5.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1081', 'es', 'elasticsearch.yml', '2', 'proxy', 'input', 'gateway.expected_nodes', '', '', '0', '^[0-9]+$', '请输入非负整数', '设置这个集群中节点的数量，默认为2，一旦这N个节点启动，就会立即进行数据恢复', '2', '7', '', '', '1', 'int', '5.5.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1082', 'es', 'elasticsearch.yml', '4', 'proxy', 'input', 'cluster.routing.allocation.node_initial_primaries_recoveries', '', '', '0', '^[0-9]+$', '请输入非负整数', '初始化数据恢复时，并发恢复线程的个数', '2', '8', '', '', '1', 'int', '5.5.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1083', 'es', 'elasticsearch.yml', '4', 'proxy', 'input', 'cluster.routing.allocation.node_concurrent_recoveries', '', '', '0', '^[0-9]+$', '请输入非负整数', '添加删除节点或负载均衡时并发恢复线程的个数', '2', '9', '', '', '1', 'int', '5.5.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1084', 'es', 'elasticsearch.yml', '0', 'proxy', 'input', 'indices.recovery.max_bytes_per_sec', '', '', '0', '^[0-9]+$', '请输入非负整数', '设置数据恢复时限制的带宽，如入100mb，默认为0，即无限制', '2', '10', '', '', '1', 'String', '5.5.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1085', 'es', 'elasticsearch.yml', '1', 'proxy', 'input', 'discovery.zen.minimum_master_nodes', '', '', '0', '^[0-9]+$', '请输入非负整数', '设置这个参数来保证集群中的节点可以知道其它N个有master资格的节点。默认为1，对于大的集群来说，可以设置大一点的值（2-4）', '2', '12', '', '', '1', 'int', '5.5.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('1086', 'es', 'elasticsearch.yml', 'true', 'proxy', 'select', 'bootstrap.memory_lock', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', '', '', '设置为true来锁住内存', '2', '15', '', '', '1', 'boolean', '5.5.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('109', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'ssl.cipher.suites', '', '', '0', '', '', '', '0', '25', null, '', '0', 'String', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('11', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'listeners', '', '', '0', '', '', 'Listener List - Comma-separated list of URIs we will listen on and their protocols. Specify hostname as 0.0.0.0 to bind to all interfaces. Leave hostname empty to bind to default interface. Examples of legal listener lists: PLAINTEXT://myhost:9092,TRACE://:9091 PLAINTEXT://0.0.0.0:9092, TRACE://localhost:9093\n', '0', '26', null, '', '0', 'String', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('110', 'kafka', 'server.properties', 'none', 'proxy', 'input', 'ssl.client.auth', '', '', '0', '', '', '', '0', '27', null, '', '0', 'String', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('111', 'kafka', 'server.properties', '[TLSv1.2, TLSv1.1, TLSv1]', 'proxy', 'input', 'ssl.enabled.protocols', '', '', '0', '', '', '', '0', '28', null, '', '0', 'String', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('112', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'ssl.key.password', '', '', '0', '', '', '', '0', '29', null, '', '0', 'String', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('113', 'kafka', 'server.properties', 'SunX509', 'proxy', 'input', 'ssl.keymanager.algorithm', '', '', '0', '', '', '', '0', '30', null, '', '0', 'String', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('114', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'ssl.keystore.location', '', '', '0', '', '', '', '0', '31', null, '', '0', 'String', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('115', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'ssl.keystore.password', '', '', '0', '', '', '', '0', '32', null, '', '0', 'String', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('116', 'kafka', 'server.properties', 'JKS', 'proxy', 'input', 'ssl.keystore.type', '', '', '0', '', '', '', '0', '33', null, '', '0', 'String', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('117', 'kafka', 'server.properties', 'TLS', 'proxy', 'input', 'ssl.protocol', '', '', '0', '', '', '', '0', '34', null, '', '0', 'String', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('118', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'ssl.provider', '', '', '0', '', '', '', '0', '35', null, '', '0', 'String', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('119', 'kafka', 'server.properties', 'PKIX', 'proxy', 'input', 'ssl.trustmanager.algorithm', '', '', '0', '', '', '', '0', '36', null, '', '0', 'String', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('12', 'kafka', 'server.properties', '9223372036854775807', 'proxy', 'input', 'log.flush.interval.messages', '', '', '0', '^[1-9]|([1-9]d+)$', '输入必须大于0的整数', '设置日志进行持久化操作的消息记录数间隔。', '1', '8', null, '', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('120', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'ssl.truststore.location', '', '', '0', '', '', '', '0', '37', null, '', '0', 'String', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('121', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'ssl.truststore.password', '', '', '0', '', '', '', '0', '38', null, '', '0', 'String', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('122', 'kafka', 'server.properties', 'JKS', 'proxy', 'input', 'ssl.truststore.type', '', '', '0', '', '', '', '0', '39', null, '', '0', 'String', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('123', 'kafka', 'server.properties', '\"\"', 'proxy', 'input', 'authorizer.class.name', '', '', '0', '', '', '', '0', '40', null, '', '0', 'String', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('124', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'ssl.endpoint.identification.algorithm', '', '', '0', '', '', '', '0', '41', null, '', '0', 'String', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('125', 'kafka', 'server.properties', '2', 'proxy', 'input', 'zookeeper.sync.time.ms', '', '', '1000', '', '', '', '0', '42', null, '秒', '0', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('126', 'zookeeper', 'zoo.cfg', '2000', 'proxy', 'input', 'ZOO_TICK_TIME', '', null, '1', '^[0-9]*[1-9][0-9]*$', '请输入大于0的整数', '时间单元', '1', '0', '', '毫秒', '1', 'String', '3.4.5-cdh5.7.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('127', 'zookeeper', 'zoo.cfg', '5', 'proxy', 'input', 'ZOO_INIT_LIMIT', '', null, '1', '^[0-9]*[1-9][0-9]*$', '请输入大于0的整数', 'Leader-Follower初始通信时限', '1', '0', '', 'tickTime', '1', 'String', '3.4.5-cdh5.7.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('128', 'zookeeper', 'zoo.cfg', '2', 'proxy', 'input', 'ZOO_SYNC_LIMIT', '', null, '1', '^[0-9]*[1-9][0-9]*$', '请输入大于0的整数', 'Leader-Follower同步通信时限', '1', '0', '', 'tickTime', '1', 'String', '3.4.5-cdh5.7.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('129', 'zookeeper', 'zoo.cfg', '60', 'proxy', 'input', 'ZOO_MAX_CLIENT_CNXNS', '', null, '1', '^([1-9]\\d*|[0]{1,1})$', '请输入大于等于0的整数', '	\r\n单个客户端与单台服务器之间的连接数的限制', '1', '0', '', '个', '1', 'String', '3.4.5-cdh5.7.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('13', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'log.flush.interval.ms', '', '', '1000', '^null|([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志进行持久化操作的时间间隔。', '1', '9', null, '秒', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('130', 'zookeeper', 'zoo.cfg', '0', 'proxy', 'input', 'AUTOPURGE_PURGE_INTERVAL', '', null, '1', '^([1-9]\\d*|[0]{1,1})$', '请输入大于等于0的整数', '日志、快照清理频率', '1', '0', '', '小时', '1', 'String', '3.4.5-cdh5.7.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('131', 'zookeeper', 'zoo.cfg', '3', 'proxy', 'input', 'AUTOPURGE_SNAP_RETAIN_COUNT', '', null, '1', '^([1-9]\\d*|[0]{1,1})$', '请输入大于等于0的整数', '日志、快照最多保留文件个数', '1', '0', '', '个', '1', 'String', '3.4.5-cdh5.7.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('136', 'mysql', 'my.cnf', '0', 'mysqld', 'text', 'max_user_connections', '每个账户的最大连接数', 'NULL', '0', '^([1-9]\\d{0,8}|[1-3]\\d{0,9}|4[0-1]\\d{0,8}|42[0-8]\\d{0,7}|429[0-3]\\d{0,6}|4294[0-8]\\d{0,5}|4294900000|0)$', '请输入0到4294900000之间的整数', '请输入0到4294900000之间的整数', '2', '19', 'NULL', 'NULL', '1', 'int', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('14', 'kafka', 'server.properties', '60', 'proxy', 'input', 'log.flush.offset.checkpoint.interval.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志刷新检测点的时间间隔。', '2', '43', null, '秒', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('141', 'mysql', 'my.cnf', '32', 'mysqld', 'text', 'binlog_cache_size', '开启log-bin时，为每个客户端分配的二进制日志缓存大小', 'NULL', '1', '^([1-9]\\d{0,12}|1[0-6]\\d{0,12}|17[0-4]\\d{0,11}|175[0-8]\\d{0,10}|1759[0-1]\\d{0,9}|17592000000000)$', '请输入1到17592000000000之间的整数', '请输入1到17592000000000之间的整数', '1', '9', 'K', 'K', '1', 'int', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('142', 'mysql', 'my.cnf', '16', 'mysqld', 'text', 'innodb_log_buffer_size', '缓冲日志数据的缓冲区的大小', 'NULL', '1', '^([1-9]|[1-9]\\d{1,2}|[1-3]\\d{3}|40[0-8]\\d|409[0-6])$', '请输入1到4096之间的整数', '请输入1到4096之间的整数', '2', '36', 'M', 'M', '1', 'int', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('143', 'mysql', 'my.cnf', '48', 'mysqld', 'text', 'innodb_log_file_size', '日志组中每个日志文件的大小', 'NULL', '1', '^([4-9]|[1-9]\\d+)$', '请输入4到262144之间的整数', '请输入4到262144之间的整数', '2', '35', 'M', 'M', '1', 'int', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('144', 'mysql', 'my.cnf', '2', 'mysqld', 'text', 'innodb_log_files_in_group', '日志组文件个数', 'NULL', '0', '^[2-9]$|^[1-9]\\d$|^100$', '请输入2到100之间的整数', '请输入2到100之间的整数', '1', '11', 'NULL', 'NULL', '1', 'int', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('145', 'mysql', 'my.cnf', '50', 'mysqld', 'text', 'innodb_lock_wait_timeout', 'innodb行锁锁定等待超时', 'NULL', '1', '^([1-9]\\d{0,8}|10[0-6]\\d{0,7}|107[0-2]\\d{0,6}|1073[0-6]\\d{0,5}|1073700000)$', '请输入1到1073700000之间的整数', '请输入1到1073700000之间的整数', '2', '29', 'NULL', '秒', '1', 'int', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('146', 'mysql', 'my.cnf', '100', 'mysqld', 'text', 'max_connect_errors', '每个客户端连接最大的错误允许数量', 'NULL', '1', '^([1-9]\\d{0,12}|1[0-6]\\d{0,12}|17[0-4]\\d{0,11}|175[0-8]\\d{0,10}|1759[0-1]\\d{0,9}|17592000000000)$', '请输入1到17592000000000之间的整数', '请输入1到17592000000000之间的整数', '2', '30', 'NULL', 'B', '1', 'int', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('147', 'mysql', 'my.cnf', 'InnoDB', 'mysqld', 'radio', 'default_tmp_storage_engine', '临时表的默认存储引擎', '{\"InnoDB\":\"InnoDB\",\"MyISAM\":\"MyISAM\",\"MRG_MYISAM\":\"MRG_MYISAM\",\"MEMORY\":\"MEMORY\",\"BLACKHOLE\":\"BLACKHOLE\",\"CSV\":\"CSV\",\"ARCHIVE\":\"ARCHIVE\",\"PERFORMANCE_SCHEMA\":\"PERFORMANCE_SCHEMA\"}', '0', 'NULL', 'NULL', 'NULL', '2', '15', 'NULL', 'NULL', '1', 'String', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('148', 'mysql', 'my.cnf', 'InnoDB', 'mysqld', 'radio', 'default_storage_engine', '永久表的默认存储引擎', '{\"InnoDB\":\"InnoDB\",\"MyISAM\":\"MyISAM\",\"MRG_MYISAM\":\"MRG_MYISAM\",\"MEMORY\":\"MEMORY\",\"BLACKHOLE\":\"BLACKHOLE\",\"CSV\":\"CSV\",\"ARCHIVE\":\"ARCHIVE\",\"PERFORMANCE_SCHEMA\":\"PERFORMANCE_SCHEMA\"}', '0', 'NULL', 'NULL', 'NULL', '2', '16', 'NULL', 'NULL', '1', 'String', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('149', 'mysql', 'my.cnf', 'binary', 'mysqld', 'text', 'character_set_filesystem', '数据库文件系统字符集', 'NULL', '0', '[^\\0]+', '可在MySQL官网查看支持哪些字符集', '可在MySQL官网查看支持哪些字符集', '0', '32', 'NULL', 'NULL', '1', 'String', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('15', 'kafka', 'server.properties', '9.223372036854776e15', 'proxy', 'input', 'log.flush.scheduler.interval.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置周期性持久操作的时间间隔。', '0', '44', null, '秒', '0', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('150', 'mysql', 'my.cnf', 'ROW', 'mysqld', 'radio', 'binlog_format', 'MySQL的复制方式', '{\"ROW\":\"ROW\",\"STATEMENT\":\"STATEMENT\",\"MIXED\":\"MIXED\"}', '0', 'NULL', 'NULL', 'NULL', '1', '4', 'NULL', 'NULL', '1', 'String', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('151', 'mysql', 'my.cnf', 'utf8mb4_unicode_ci', 'mysqld', 'text', 'collation-server', '服务器默认排序规则', 'NULL', '0', '[^\\0]+', '可在MySQL官网查看支持哪些字符集', '可在MySQL官网查看支持哪些字符集', '0', '13', 'NULL', 'NULL', '1', 'String', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('152', 'mysql', 'my.cnf', 'utf8mb4', 'client', 'text', 'default-character-set', 'MySQL数据库默认字符集', 'NULL', '0', '[^\\0]+', '可在MySQL官网查看支持哪些字符集', '可在MySQL官网查看支持哪些字符集', '0', '14', 'NULL', 'NULL', '1', 'String', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('153', 'mysql', 'my.cnf', '-1', 'mysqld', 'text', 'thread_cache_size', '线程缓存区大小', 'NULL', '1', '^(-1|0|[1-9]\\d{0,3}|1[0-5]\\d{1,3}|16[0-2]\\d{0,2}|163[0-7]\\d|1638[0-4])$', '请输入-1到16384的整数', '请输入-1到16384的整数', '1', '7', 'NULL', 'B', '1', 'int', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('154', 'mysql', 'my.cnf', '1', 'mysqld', 'text', 'query_cache_size', '查询缓存区大小', 'NULL', '1', '^([1-9]\\d{0,}|0)$', '请输入0到17592186044415的整数', '请输入0到17592186044415的整数', '1', '8', 'M', 'M', '1', 'int', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('155', 'mysql', 'my.cnf', '16', 'mysqld', 'text', 'tmp_table_size', '临时表使用缓冲区大小', 'NULL', '1', '^([1-9]\\d{0,12}|1[0-6]\\d{0,12}|17[0-4]\\d{0,11}|175[0-8]\\d{0,10}|1759[0-1]\\d{0,9}|17592000000000)$', '请输入1到17592000000000之间的整数', '请输入1到17592000000000之间的整数', '2', '24', 'M', 'M', '1', 'int', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('156', 'mysql', 'my.cnf', '1', 'mysqld', 'text', 'sort_buffer_size', '排序使用的缓冲区大小', 'NULL', '1', '^([1-9]\\d{0,12}|1[0-6]\\d{0,12}|17[0-4]\\d{0,11}|175[0-8]\\d{0,10}|1759[0-1]\\d{0,9}|17592000000000)$', '请输入1到17592000000000之间的整数', '请输入1到17592000000000之间的整数', '2', '22', 'M', 'M', '1', 'int', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('157', 'mysql', 'my.cnf', '1', 'mysqld', 'text', 'read_buffer_size', '读入缓冲区', 'NULL', '1', '^([1-9]|[1-9]\\d{1,2}|1\\d{3}|20[0-3]\\d|204[0-7])$', '请输入1到2047之间的整数', '请输入1到2047之间的整数', '2', '21', 'M', 'M', '1', 'int', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('158', 'mysql', 'my.cnf', '1', 'mysqld', 'text', 'join_buffer_size', '表关联使用的缓冲区大小', 'NULL', '1', '^([1-9]\\d{0,12}|1[0-6]\\d{0,12}|17[0-4]\\d{0,11}|175[0-8]\\d{0,10}|1759[0-1]\\d{0,9}|17592000000000)$', '请输入1到17592000000000之间的整数', '请输入1到17592000000000之间的整数', '2', '23', 'M', 'M', '1', 'int', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('159', 'mysql', 'my.cnf', '1024', 'mysqld', 'text', 'max_connections', '最大连接数', 'NULL', '0', '^(?:(?!0{1,5})\\d{1,5}|10{5})$', '请输入1到100000之间的整数', '请输入1到100000之间的整数', '1', '1', 'NULL', 'NULL', '1', 'int', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('16', 'kafka', 'server.properties', '-1', 'proxy', 'input', 'log.retention.bytes', '', '', '1', '^-1|([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间或者为-1', '设置分区日志保留文件的大小，-1表示没有限制大小。', '2', '45', null, 'byte', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('160', 'mysql', 'my.cnf', '2', 'mysqld', 'text', 'table_open_cache', '所有线程打开表的数量', 'NULL', '1', '^([1-9][\\d]{0,1}|[1-4]\\d{2}|50\\d|51[0-2])$', '请输入1到512之间的整数', '请输入1到512之间的整数', '2', '25', 'K', 'K', '1', 'int', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('161', 'mysql', 'my.cnf', '128', 'mysqld', 'text', 'innodb_buffer_pool_size', '缓冲池字节大小', 'NULL', '1', '^([5-9]|[1-9]\\d{1,12}|1[0-6]\\d{0,12}|17[0-4]\\d{0,11}|175[0-8]\\d{0,10}|1759[0-1]\\d{0,9}|17592000000000)$', '请输入5到17592000000000之间的整数', '请输入5到17592000000000之间的整数', '1', '6', 'M', 'M', '1', 'int', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('162', 'mysql', 'my.cnf', '1', 'mysqld', 'text', 'innodb_buffer_pool_instances', 'InnoDB缓冲池划分的区域数量', 'NULL', '0', '^([1-9]|[1-5][0-9]|6[0-4])$', '请输入1到64之间的整数', '请输入1到64之间的整数', '2', '26', 'NULL', 'NULL', '1', 'int', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('163', 'mysql', 'my.cnf', 'REPEATABLE-READ', 'mysqld', 'radio', 'transaction-isolation', '事物隔离级别', '{\"READ-UNCOMMITTED\":\"READ-UNCOMMITTED\",\"READ-COMMITTED\":\"READ-COMMITTED\",\"REPEATABLE-READ\":\"REPEATABLE-READ\",\"SERIALIZABLE\":\"SERIALIZABLE\"}', '0', 'NULL', 'NULL', 'NULL', '1', '3', 'NULL', 'NULL', '1', 'String', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('164', 'mysql', 'my.cnf', '75', 'mysqld', 'text', 'innodb_max_dirty_pages_pct', '脏页百分比', 'NULL', '0', '^([0-9]|[0-9]\\.\\d+|[1-9]\\d|[1-8]\\d\\.\\d+|9[0-8]\\.\\d+)$', '请输入1到99之间的数字', '请输入1到99之间的数字', '2', '20', 'NULL', 'NULL', '1', 'long', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('165', 'mysql', 'my.cnf', '1', 'mysqld', 'radio', 'lower_case_table_names', '是否区分大小写', '{\"0\":0,\"1\":1,\"2\":2}', '0', 'NULL', 'NULL', 'NULL', '1', '2', 'NULL', 'NULL', '1', 'int', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('166', 'mysql', 'my.cnf', 'ON', 'mysqld', 'radio', 'innodb_file_per_table', '是否使用独立表空间', '{\"使用\":\"ON\",\"不使用\":\"OFF\"}', '0', 'NULL', 'NULL', 'NULL', '2', '5', 'NULL', 'NULL', '1', 'String', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('167', 'mysql', 'my.cnf', '-1', 'mysqld', 'text', 'innodb_open_files', '限制Innodb能打开的表数据', 'NULL', '0', '^([1-9]\\d{1,8}|[1-3]\\d{0,9}|4[0-1]\\d{0,8}|42[0-8]\\d{0,7}|429[0-3]\\d{0,6}|4294[0-8]\\d{0,5}|4294900000|-1)$', '请输入-1或者10到4294900000之间的整数', '请输入-1或者10到4294900000之间的整数', '2', '27', 'NULL', 'NULL', '1', 'int', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('168', 'mysql', 'my.cnf', '0', 'mysqld', 'text', 'innodb_thread_concurrency', '并发数', 'NULL', '0', '^(?:(?!0{1,3})\\d{1,3}|10{3}|0)$', '请输入0到1000之间的整数', '请输入0到1000之间的整数', '2', '18', 'NULL', 'NULL', '1', 'int', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('169', 'mysql', 'my.cnf', '1', 'mysqld', 'radio', 'innodb_flush_log_at_trx_commit', '磁盘写入策略', '{\"0\":0,\"1\":1,\"2\":2}', '0', 'NULL', 'NULL', 'NULL', '2', '17', 'NULL', 'NULL', '1', 'int', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('17', 'kafka', 'server.properties', '168', 'proxy', 'input', 'log.retention.hours', '', '', '1', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志保存时间（单位：小时）。', '1', '10', null, '小时', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('170', 'mysql', 'my.cnf', '4', 'mysqld', 'text', 'max_allowed_packet', '服务接受的数据包大小', 'NULL', '1', '^([1-9]|[1-9]\\d{0,2}|10[0-1]\\d|102[0-4])$', '请输入1到1024之间的整数', '请输入1到1024之间的整数', '2', '28', 'M', 'M', '1', 'int', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('171', 'mysql', 'my.cnf', '480', 'mysqld', 'text', 'interactive_timeout', 'MySQL连接的最大空闲时间(交互式连接)', 'NULL', '60', '^\\+?[1-9]\\d*$', '请输入大于1的整数', '请输入大于1的整数', '2', '32', 'NULL', '分钟', '1', 'int', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('172', 'mysql', 'my.cnf', '-1', 'mysqld', 'text', 'thread_cache_size', '线程缓存区大小', 'NULL', '1', '^(-1|0|[1-9]\\d{0,3}|1[0-5]\\d{1,3}|16[0-2]\\d{0,2}|163[0-7]\\d|1638[0-4])$', '请输入-1到16384的整数', '请输入-1到16384的整数', '1', '7', 'NULL', 'B', '1', 'int', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('173', 'mysql', 'my.cnf', '1', 'mysqld', 'text', 'query_cache_size', '查询缓存区大小', 'NULL', '1', '^([1-9]\\d{0,}|0)$', '请输入0到17592186044415的整数', '请输入0到17592186044415的整数', '1', '8', 'M', 'M', '1', 'int', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('174', 'mysql', 'my.cnf', '16', 'mysqld', 'text', 'tmp_table_size', '临时表使用缓冲区大小', 'NULL', '1', '^([1-9]\\d{0,12}|1[0-6]\\d{0,12}|17[0-4]\\d{0,11}|175[0-8]\\d{0,10}|1759[0-1]\\d{0,9}|17592000000000)$', '请输入1到17592000000000之间的整数', '请输入1到17592000000000之间的整数', '2', '24', 'M', 'M', '1', 'int', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('175', 'mysql', 'my.cnf', '1', 'mysqld', 'text', 'sort_buffer_size', '排序使用的缓冲区大小', 'NULL', '1', '^([1-9]\\d{0,12}|1[0-6]\\d{0,12}|17[0-4]\\d{0,11}|175[0-8]\\d{0,10}|1759[0-1]\\d{0,9}|17592000000000)$', '请输入1到17592000000000之间的整数', '请输入1到17592000000000之间的整数', '2', '22', 'M', 'M', '1', 'int', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('176', 'mysql', 'my.cnf', '1', 'mysqld', 'text', 'read_buffer_size', '读入缓冲区', 'NULL', '1', '^([1-9]|[1-9]\\d{1,2}|1\\d{3}|20[0-3]\\d|204[0-7])$', '请输入1到2047之间的整数', '请输入1到2047之间的整数', '2', '21', 'M', 'M', '1', 'int', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('177', 'mysql', 'my.cnf', '1', 'mysqld', 'text', 'join_buffer_size', '表关联使用的缓冲区大小', 'NULL', '1', '^([1-9]\\d{0,12}|1[0-6]\\d{0,12}|17[0-4]\\d{0,11}|175[0-8]\\d{0,10}|1759[0-1]\\d{0,9}|17592000000000)$', '请输入1到17592000000000之间的整数', '请输入1到17592000000000之间的整数', '2', '23', 'M', 'M', '1', 'int', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('178', 'mysql', 'my.cnf', '1024', 'mysqld', 'text', 'max_connections', '最大连接数', 'NULL', '0', '^(?:(?!0{1,5})\\d{1,5}|10{5})$', '请输入1到100000之间的整数', '请输入1到100000之间的整数', '1', '1', 'NULL', 'NULL', '1', 'int', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('179', 'mysql', 'my.cnf', '2', 'mysqld', 'text', 'table_open_cache', '所有线程打开表的数量', 'NULL', '1', '^([1-9][\\d]{0,1}|[1-4]\\d{2}|50\\d|51[0-2])$', '请输入1到512之间的整数', '请输入1到512之间的整数', '2', '25', 'K', 'K', '1', 'int', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('18', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'log.retention.minutes', '', '', '1', '^null|([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志保存时间（单位：分钟）。', '2', '46', null, '分钟', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('180', 'mysql', 'my.cnf', '128', 'mysqld', 'text', 'innodb_buffer_pool_size', '缓冲池字节大小', 'NULL', '1', '^([5-9]|[1-9]\\d{1,12}|1[0-6]\\d{0,12}|17[0-4]\\d{0,11}|175[0-8]\\d{0,10}|1759[0-1]\\d{0,9}|17592000000000)$', '请输入5到17592000000000之间的整数', '请输入5到17592000000000之间的整数', '1', '6', 'M', 'M', '1', 'int', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('181', 'mysql', 'my.cnf', '1', 'mysqld', 'text', 'innodb_buffer_pool_instances', 'InnoDB缓冲池划分的区域数量', 'NULL', '0', '^([1-9]|[1-5][0-9]|6[0-4])$', '请输入1到64之间的整数', '请输入1到64之间的整数', '2', '26', 'NULL', 'NULL', '1', 'int', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('182', 'mysql', 'my.cnf', 'REPEATABLE-READ', 'mysqld', 'radio', 'transaction-isolation', '事物隔离级别', '{\"READ-UNCOMMITTED\":\"READ-UNCOMMITTED\",\"READ-COMMITTED\":\"READ-COMMITTED\",\"REPEATABLE-READ\":\"REPEATABLE-READ\",\"SERIALIZABLE\":\"SERIALIZABLE\"}', '0', 'NULL', 'NULL', 'NULL', '1', '3', 'NULL', 'NULL', '1', 'String', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('183', 'mysql', 'my.cnf', '75', 'mysqld', 'text', 'innodb_max_dirty_pages_pct', '脏页百分比', 'NULL', '0', '^([0-9]|[0-9]\\.\\d+|[1-9]\\d|[1-9]\\d\\.\\d+)$', '请输入1到99.99之间的数字', '请输入1到99.99之间的数字', '2', '20', 'NULL', 'NULL', '1', 'long', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('184', 'mysql', 'my.cnf', '1', 'mysqld', 'radio', 'lower_case_table_names', '是否区分大小写', '{\"0\":0,\"1\":1,\"2\":2}', '0', 'NULL', 'NULL', 'NULL', '1', '2', 'NULL', 'NULL', '1', 'int', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('185', 'mysql', 'my.cnf', 'ON', 'mysqld', 'radio', 'innodb_file_per_table', '是否使用独立表空间', '{\"使用\":\"ON\",\"不使用\":\"OFF\"}', '0', 'NULL', 'NULL', 'NULL', '2', '5', 'NULL', 'NULL', '1', 'String', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('186', 'mysql', 'my.cnf', '-1', 'mysqld', 'text', 'innodb_open_files', '限制Innodb能打开的表数据', 'NULL', '0', '^([1-9]\\d{1,8}|[1-3]\\d{0,9}|4[0-1]\\d{0,8}|42[0-8]\\d{0,7}|429[0-3]\\d{0,6}|4294[0-8]\\d{0,5}|4294900000|-1)$', '请输入-1或者10到4294900000之间的整数', '请输入-1或者10到4294900000之间的整数', '2', '27', 'NULL', 'NULL', '1', 'int', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('187', 'mysql', 'my.cnf', '0', 'mysqld', 'text', 'innodb_thread_concurrency', '并发数', 'NULL', '0', '^(?:(?!0{1,3})\\d{1,3}|10{3}|0)$', '请输入0到1000之间的整数', '请输入0到1000之间的整数', '2', '18', 'NULL', 'NULL', '1', 'int', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('188', 'mysql', 'my.cnf', '1', 'mysqld', 'radio', 'innodb_flush_log_at_trx_commit', '磁盘写入策略', '{\"0\":0,\"1\":1,\"2\":2}', '0', 'NULL', 'NULL', 'NULL', '2', '17', 'NULL', 'NULL', '1', 'int', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('189', 'mysql', 'my.cnf', '4', 'mysqld', 'text', 'max_allowed_packet', '服务接受的数据包大小', 'NULL', '1', '^([1-9]|[1-9]\\d{0,2}|10[0-1]\\d|102[0-4])$', '请输入1到1024之间的整数', '请输入1到1024之间的整数', '2', '28', 'M', 'M', '1', 'int', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('19', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'log.retention.ms', '', '', '1000', '^null|([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志保存时间（单位：秒）。', '2', '47', null, '秒', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('190', 'mysql', 'my.cnf', '480', 'mysqld', 'text', 'interactive_timeout', 'MySQL连接的最大空闲时间(交互式连接)', 'NULL', '60', '^\\+?[1-9]\\d*$', '请输入大于1的整数', '请输入大于1的整数', '2', '32', 'NULL', '分钟', '1', 'int', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('191', 'mysql', 'my.cnf', '480', 'mysqld', 'text', 'wait_timeout', 'MySQL连接的最大空闲时间(非交互式连接)', 'NULL', '60', '^([1-9]\\d{0,4}|[1-4]\\d{5}|5[0-1]\\d{4}|52[0-4]\\d{3}|525[0-5]\\d{2}|525600)$', '请输入1到525600的整数', '请输入1到525600的整数', '2', '33', 'NULL', '分钟', '1', 'int', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('192', 'mysql', 'my.cnf', '8760', 'mysqld', 'text', 'lock_wait_timeout', '获取元数据锁的超时时间', 'NULL', '3600', '^([1-9]\\d{0,2}|[1-7]\\d{3}|8\\d{4}|8[0-6]\\d{2}|87[0-5]\\d{1}|8760)$', '请输入1到8760的整数', '请输入1到8760的整数', '2', '34', 'NULL', '小时', '1', 'int', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('193', 'mysql', 'my.cnf', 'utf8mb4', 'mysqld', 'text', 'character-set-server', '服务器使用的字符集', 'NULL', '0', 'NULL', '可在MySQL官网查看支持哪些字符集', '可在MySQL官网查看支持哪些字符集', '0', '12', 'NULL', 'NULL', '1', 'String', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('194', 'mysql', 'my.cnf', 'SYSTEM', 'mysqld', 'radio', 'log_timestamps', '日志显示时区', '{\"UTC\":\"UTC\",\"SYSTEM\":\"SYSTEM\"}', '0', 'NULL', 'NULL', 'NULL', '1', '10', 'NULL', 'NULL', '1', 'String', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('195', 'mysql', 'my.cnf', '0', 'mysqld', 'text', 'max_user_connections', '每个账户的最大连接数', 'NULL', '0', '^([1-9]\\d{0,8}|[1-3]\\d{0,9}|4[0-1]\\d{0,8}|42[0-8]\\d{0,7}|429[0-3]\\d{0,6}|4294[0-8]\\d{0,5}|4294900000|0)$', '请输入0到4294900000之间的整数', '请输入0到4294900000之间的整数', '2', '19', 'NULL', 'NULL', '1', 'int', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('196', 'kafka', 'server.properties', '', 'proxy', 'input', 'zookeeper.connect', '', '', '0', '', '', 'Zookeeper host string', '0', '13', null, '', '0', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('197', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'advertised.host.name', '', '', '0', '', '', 'Hostname to publish to ZooKeeper for clients to use. In IaaS environments, this may need to be different from the interface to which the broker binds. If this is not set, it will use the value for \"host.name\" if configured. Otherwise it will use the value returned from java.net.InetAddress.getCanonicalHostName().', '0', '14', null, '', '0', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('198', 'kafka', 'server.properties', '10', 'proxy', 'input', 'leader.imbalance.per.broker.percentage', '', '', '0', '^(([1-9]\\d?)|100)$', '输入必须在1到100之间', '设置每个broker自动平衡百分比。', '2', '15', null, '', '1', 'int', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('199', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'listeners', '', '', '0', '', '', 'Listener List - Comma-separated list of URIs we will listen on and their protocols. Specify hostname as 0.0.0.0 to bind to all interfaces. Leave hostname empty to bind to default interface. Examples of legal listener lists: PLAINTEXT://myhost:9092,TRACE://:9091 PLAINTEXT://0.0.0.0:9092, TRACE://localhost:9093\n', '0', '16', null, '', '0', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'advertised.listeners', '', '', '0', '', '', 'Listeners to publish to ZooKeeper for clients to use, if different than the listeners above. In IaaS environments, this may need to be different from the interface to which the broker binds. If this is not set, the value for \"listeners\" will be used.\n', '0', '48', null, '', '0', 'String', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('20', 'kafka', 'server.properties', '168', 'proxy', 'input', 'log.roll.hours', '', '', '1', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置新日志生成时间间隔（单位：小时），次于 log.roll.ms 属性。', '2', '49', null, '小时', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('200', 'kafka', 'server.properties', '9223372036854775807', 'proxy', 'input', 'log.flush.interval.messages', '', '', '0', '^[1-9]|([1-9]d+)$', '输入必须大于0的整数', '设置日志进行持久化操作的消息记录数间隔。', '1', '8', null, '', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2000', 'zookeeper', 'zoo.cfg', '2000', 'proxy', 'input', 'ZOO_TICK_TIME', '', '', '1', '^[0-9]*[1-9][0-9]*$', '请输入大于0的整数', '时间单元', '1', '0', '', '毫秒', '1', 'String', '3.4.12');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2001', 'zookeeper', 'zoo.cfg', '5', 'proxy', 'input', 'ZOO_INIT_LIMIT', '', '', '1', '^[0-9]*[1-9][0-9]*$', '请输入大于0的整数', 'Leader-Follower初始通信时限', '1', '0', '', 'tickTime', '1', 'String', '3.4.12');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2002', 'zookeeper', 'zoo.cfg', '2', 'proxy', 'input', 'ZOO_SYNC_LIMIT', '', '', '1', '^[0-9]*[1-9][0-9]*$', '请输入大于0的整数', 'Leader-Follower同步通信时限', '1', '0', '', 'tickTime', '1', 'String', '3.4.12');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('201', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'log.flush.interval.ms', '', '', '1000', '^null|([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志进行持久化操作的时间间隔。', '1', '9', null, '秒', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2013', 'zookeeper', 'zoo.cfg', '60', 'proxy', 'input', 'ZOO_MAX_CLIENT_CNXNS', '', '', '1', '^([1-9]\\d*|[0]{1,1})$', '请输入大于等于0的整数', '	\r\n单个客户端与单台服务器之间的连接数的限制', '1', '0', '', '个', '1', 'String', '3.4.12');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2014', 'zookeeper', 'zoo.cfg', '0', 'proxy', 'input', 'AUTOPURGE_PURGE_INTERVAL', '', '', '1', '^([1-9]\\d*|[0]{1,1})$', '请输入大于等于0的整数', '日志、快照清理频率', '1', '0', '', '小时', '1', 'String', '3.4.12');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2015', 'zookeeper', 'zoo.cfg', '3', 'proxy', 'input', 'AUTOPURGE_SNAP_RETAIN_COUNT', '', '', '1', '^([1-9]\\d*|[0]{1,1})$', '请输入大于等于0的整数', '日志、快照最多保留文件个数', '1', '0', '', '个', '1', 'String', '3.4.12');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('202', 'kafka', 'server.properties', '60', 'proxy', 'input', 'log.flush.offset.checkpoint.interval.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志刷新检测点的时间间隔。', '2', '17', null, '秒', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('203', 'kafka', 'server.properties', '9223372036854775807', 'proxy', 'input', 'log.flush.scheduler.interval.ms', '', '', '1000', '^[1-9]|([1-9]d+)$', '输入必须大于0的整数', '设置周期性持久操作的时间间隔。', '0', '18', null, '秒', '0', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('204', 'kafka', 'server.properties', '-1', 'proxy', 'input', 'log.retention.bytes', '', '', '1', '^-1|([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间或者为-1', '设置分区日志保留文件的大小，-1表示没有限制大小。', '2', '19', null, 'byte', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('205', 'kafka', 'server.properties', '168', 'proxy', 'input', 'log.retention.hours', '', '', '1', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志保存时间（单位：小时）。', '1', '10', null, '小时', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('206', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'log.retention.minutes', '', '', '1', '^null|([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志保存时间（单位：分钟）。', '2', '20', null, '分钟', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('207', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'log.retention.ms', '', '', '1000', '^null|([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志保存时间（单位：秒）。', '2', '21', null, '秒', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('208', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'advertised.listeners', '', '', '0', '', '', 'Listeners to publish to ZooKeeper for clients to use, if different than the listeners above. In IaaS environments, this may need to be different from the interface to which the broker binds. If this is not set, the value for \"listeners\" will be used.\n', '0', '22', null, '', '0', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('209', 'kafka', 'server.properties', '168', 'proxy', 'input', 'log.roll.hours', '', '', '1', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置新日志生成时间间隔（单位：小时），次于 log.roll.ms 属性。', '2', '23', null, '小时', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('21', 'kafka', 'server.properties', '0', 'proxy', 'input', 'log.roll.jitter.hours', '', '', '1', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志切分段的时间（单位：小时 )，次要 log.roll.jitter.ms 属性。', '2', '50', null, '小时', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('210', 'kafka', 'server.properties', '0', 'proxy', 'input', 'log.roll.jitter.hours', '', '', '1', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志切分段的时间（单位：小时 )，次要 log.roll.jitter.ms 属性。', '2', '24', null, '小时', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('211', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'log.roll.jitter.ms', '', '', '1000', '^null|([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志切分段的时间（单位：秒）。如果未设置该属性，则使用 log.roll.jitter.hours 的属性值。', '2', '25', null, '秒', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('212', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'log.roll.ms', '', '', '1000', '^null|([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置新日志生成时间间隔（单位：秒），如果未设置该属性，则使用 log.roll.hours 的属性值。', '2', '26', null, '秒', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('213', 'kafka', 'server.properties', '1024', 'proxy', 'input', 'log.segment.bytes', '', '', '1048576', '^([1-9]\\d{0,2})$|^([1]\\d{0,3}|2000)$', '输入值必须在1到2000', '设置日志段文件大小。', '1', '11', null, 'Mb', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('214', 'kafka', 'server.properties', '60', 'proxy', 'input', 'log.segment.delete.delay.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志段文件删除需要等待的时间。', '2', '27', null, '秒', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('215', 'kafka', 'server.properties', '1000012', 'proxy', 'input', 'message.max.bytes', '', '', '1', '^([1-9]\\d{0,17}|1000000000000000000)$', '输入值必须在1到1000000000000000000', '设置消息的最大数据大小，且不要大于fetch.message.max.bytes属性的值。', '2', '28', null, 'byte', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('216', 'kafka', 'server.properties', '1', 'proxy', 'input', 'min.insync.replicas', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置副本同步最小数量。', '2', '29', null, '', '1', 'int', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('217', 'kafka', 'server.properties', '8', 'proxy', 'input', 'num.io.threads', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置服务器用来处理请求的I/O线程的数目。', '1', '1', null, '', '1', 'int', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('218', 'kafka', 'server.properties', '3', 'proxy', 'input', 'num.network.threads', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置服务器用来处理网络请求的网络线程数目。', '1', '2', null, '', '1', 'int', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('219', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'advertised.port', '', '', '0', '', '', 'The port to publish to ZooKeeper for clients to use. In IaaS environments, this may need to be different from the port to which the broker binds. If this is not set, it will publish the same port that the broker binds to.\n', '0', '30', null, '', '0', 'int', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('22', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'log.roll.jitter.ms', '', '', '1000', '^null|([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志切分段的时间（单位：秒）。如果未设置该属性，则使用 log.roll.jitter.hours 的属性值。', '2', '51', null, '秒', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('220', 'kafka', 'server.properties', '1', 'proxy', 'input', 'num.recovery.threads.per.data.dir', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置每个数据目录用于日志恢复启动和关闭冲洗时的线程数量。', '1', '3', null, '', '1', 'int', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('221', 'kafka', 'server.properties', '1', 'proxy', 'input', 'num.replica.fetchers', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置leader进行备份消息的线程数。', '2', '31', null, '', '1', 'int', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('222', 'kafka', 'server.properties', '4', 'proxy', 'input', 'offset.metadata.max.bytes', '', '', '1024', '^([1-9]\\d{0,17}|1000000000000000000)$', '输入值必须在1到1000000000000000000', '设置消费者保存元数据的最大的数据量。', '2', '32', null, 'Kb', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('223', 'kafka', 'server.properties', '-1', 'proxy', 'input', 'offsets.commit.required.acks', '', '', '0', '^-1|([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间或者为-1', '设置消息提交进行确认的数目。', '2', '33', null, '', '1', 'int', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('224', 'kafka', 'server.properties', '5', 'proxy', 'input', 'offsets.commit.timeout.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置消息提交超时时间。', '2', '34', null, '秒', '1', 'int', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('225', 'kafka', 'server.properties', '5', 'proxy', 'input', 'offsets.load.buffer.size', '', '', '1048576', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置读取消息的缓存大小。', '2', '35', null, 'Mb', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('226', 'kafka', 'server.properties', '600', 'proxy', 'input', 'offsets.retention.check.interval.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置消息保留检测的间隔时间。', '2', '36', null, '秒', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('227', 'kafka', 'server.properties', '24', 'proxy', 'input', 'offsets.retention.minutes', '', '', '60', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置消息的保留时间。', '2', '37', null, '小时', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('228', 'kafka', 'server.properties', '0', 'proxy', 'radio', 'offsets.topic.compression.codec', '', '{\"0\":\"0\",\"1\":\"1\",\"2\":\"2\"}', '0', '', '', '设置消息的压缩格式。0表示不压缩，1表示用gzip压缩，2表示用snappy压缩。', '2', '38', null, '', '1', 'int', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('229', 'kafka', 'server.properties', '50', 'proxy', 'input', 'offsets.topic.num.partitions', '', '', '0', '', '', 'The number of partitions for the offset commit topic (should not change after deployment)\n', '0', '39', null, '', '0', 'int', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('23', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'log.roll.ms', '', '', '1000', '^null|([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置新日志生成时间间隔（单位：秒），如果未设置该属性，则使用 log.roll.hours 的属性值。', '2', '52', null, '秒', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('230', 'kafka', 'server.properties', 'true', 'proxy', 'radio', 'auto.create.topics.enable', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', '', '', 'Enable auto creation of topic on the server', '0', '40', null, '', '0', 'boolean', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('231', 'kafka', 'server.properties', '3', 'proxy', 'input', 'offsets.topic.replication.factor', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置话题消息备份个数。如果broker比复制因子少，该备份因子将以较少的副本创建。', '2', '41', null, '', '1', 'int', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('232', 'kafka', 'server.properties', '100', 'proxy', 'input', 'offsets.topic.segment.bytes', '', '', '1048576', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置话题消息段文件大小。', '2', '42', null, 'Mb', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('233', 'kafka', 'server.properties', '9092', 'proxy', 'input', 'port', '', '', '0', '', '', ' the port to listen and accept connections on', '0', '43', null, '', '0', 'int', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('234', 'kafka', 'server.properties', '500', 'proxy', 'input', 'queued.max.requests', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置请求队列大小。', '2', '44', null, '', '1', 'int', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('235', 'kafka', 'server.properties', '9223372036854775807', 'proxy', 'input', 'quota.consumer.default', '', '', '0', '^[1-9]|([1-9]d+)$', '输入必须大于0的整数', '设置每秒消费数据受限大小，仅仅在未配置动态配额属性时使用。', '2', '45', null, '', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('236', 'kafka', 'server.properties', '9223372036854775807', 'proxy', 'input', 'quota.producer.default', '', '', '0', '^[1-9]|([1-9]d+)$', '输入必须大于0的整数', '设置每秒生产数据受限大小，仅仅在未配置动态配额属性时使用。', '2', '46', null, '', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('237', 'kafka', 'server.properties', '1', 'proxy', 'input', 'replica.fetch.max.bytes', '', '', '1048576', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置数据备份每次获取数据大小的最大值。', '2', '47', null, 'Mb', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('238', 'kafka', 'server.properties', '1', 'proxy', 'input', 'replica.fetch.min.bytes', '', '', '1', '^([1-9]\\d{0,17}|1000000000000000000)$', '输入值必须在1到1000000000000000000', '设置数据备份每次获取数据大小的最小值,如果leader中尚未同步的数据不足此值,将会阻塞,直到满足条件。', '2', '48', null, 'byte', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('239', 'kafka', 'server.properties', '500', 'proxy', 'input', 'replica.fetch.wait.max.ms', '', '', '1', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置数据备份获取数据的最大等待时间。', '2', '49', null, '毫秒', '1', 'int', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('24', 'kafka', 'server.properties', '1024', 'proxy', 'input', 'log.segment.bytes', '', '', '1048576', '^([1-9]\\d{0,2})$|^([1]\\d{0,3}|2000)$', '输入值必须在1到2000', '设置日志段文件大小。', '1', '11', null, 'Mb', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('240', 'kafka', 'server.properties', '5', 'proxy', 'input', 'replica.high.watermark.checkpoint.interval.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置每个备份将最高水位进行持久的间隔时间。', '2', '50', null, '秒', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('241', 'kafka', 'server.properties', 'true', 'proxy', 'radio', 'auto.leader.rebalance.enable', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', '', '', '设置自动leader平衡功能。true表示启用，false不是不启用。', '2', '51', null, '', '1', 'boolean', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2411', 'codis', 'proxy.toml', '20', 'proxy', 'input', 'jodis_timeout', null, null, '1000', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', '设置jodis超时时间', '2', '1', 's', '秒', '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2412', 'codis', 'proxy.toml', 'false', 'proxy', 'input', 'jodis_compatible', null, null, '0', 'true|false', '请输入true或者false', null, '0', '2', null, null, '0', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2413', 'codis', 'proxy.toml', null, 'proxy', 'input', 'proxy_datacenter', null, null, '0', null, '请输入0到16的整数，或者为空', '设置数据中心', '2', '3', null, null, '1', 'int', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2414', 'codis', 'proxy.toml', '1000', 'proxy', 'input', 'proxy_max_clients', null, null, '0', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', '设置最大连接数', '1', '4', null, null, '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2415', 'codis', 'proxy.toml', '1024', 'proxy', 'input', 'proxy_max_offheap_size', null, null, '1048576', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', '设置最大offheap内存. (0表示禁用)', '2', '5', 'mb', 'mb', '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2416', 'codis', 'proxy.toml', '256', 'proxy', 'input', 'proxy_heap_placeholder', null, null, '1048576', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', '设置heap placeholder减少垃圾回收的频率', '2', '6', 'mb', 'mb', '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2417', 'codis', 'proxy.toml', '5', 'proxy', 'input', 'ba+C8:R8d', null, null, '1000', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', '设置proxy定时ping后端redis节点', '2', '7', 's', '秒', '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2418', 'codis', 'proxy.toml', '128', 'proxy', 'input', 'backend_recv_bufsize', null, null, '1024', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', '设置后端接收缓存大小', '2', '8', 'kb', 'kb', '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2419', 'codis', 'proxy.toml', '30', 'proxy', 'input', 'backend_recv_timeout', null, null, '1000', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', '设置后端接收缓存超时时间', '2', '9', 's', '秒', '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('242', 'kafka', 'server.properties', '10', 'proxy', 'input', 'replica.lag.time.max.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置备份响应leader最长等待时间。', '2', '52', null, '秒', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2420', 'codis', 'proxy.toml', '128', 'proxy', 'input', 'backend_send_bufsize', null, null, '1024', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', '设置后端发送缓存大小', '2', '10', 'kb', 'kb', '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2421', 'codis', 'proxy.toml', '30', 'proxy', 'input', 'backend_send_timeout', null, null, '1000', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', '设置后端发送缓存超时时间', '2', '11', 's', '秒', '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2422', 'codis', 'proxy.toml', '1024', 'proxy', 'input', 'backend_max_pipeline', null, null, '0', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', '设置后端缓存管道大小', '2', '12', null, null, '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2423', 'codis', 'proxy.toml', 'false', 'proxy', 'input', 'backend_primary_only', null, null, '0', 'true|false', '请输入true或者false', '设置后端不都去从节点的数据，默认为false', '2', '13', null, null, '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2424', 'codis', 'proxy.toml', '1', 'proxy', 'input', 'backend_primary_parallel', null, null, '0', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', '设置后端主节点并行连接', '2', '14', null, null, '1', 'int', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2425', 'codis', 'proxy.toml', '1', 'proxy', 'input', 'backend_replica_parallel', null, null, '0', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', '设置后端从节点并行连接', '2', '15', null, null, '1', 'int', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2426', 'codis', 'proxy.toml', '75', 'proxy', 'input', 'backend_keepalive_period', null, null, '1000', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', '设置后端TCP检测周期，0表示禁用', '2', '16', 's', '秒', '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2427', 'codis', 'proxy.toml', '16', 'proxy', 'input', 'backend_number_databases', null, null, '0', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', '设置后端数据库', '0', '17', null, null, '0', 'int', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2428', 'codis', 'proxy.toml', '128', 'proxy', 'input', 'session_recv_bufsize', null, null, '1024', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', '设置会话接收缓存大小', '2', '18', 'kb', 'kb', '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2429', 'codis', 'proxy.toml', '30', 'proxy', 'input', 'session_recv_timeout', null, null, '60000', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', '设置会话接收缓存超时时间', '2', '19', 'm', '分', '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('243', 'kafka', 'server.properties', '64', 'proxy', 'input', 'replica.socket.receive.buffer.bytes', '', '', '1024', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置备份接受请求的缓存大小。', '2', '53', null, 'Kb', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2430', 'codis', 'proxy.toml', '64', 'proxy', 'input', 'session_send_bufsize', null, null, '1024', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', '设置会话缓存大小', '2', '20', 'kb', 'kb', '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2431', 'codis', 'proxy.toml', '30', 'proxy', 'input', 'session_send_timeout', null, null, '1000', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', '设置会话缓存超时时间', '2', '21', 's', null, '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2432', 'codis', 'proxy.toml', '10000', 'proxy', 'input', 'session_max_pipeline', null, null, '0', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', '设置会话管道大小', '1', '22', null, null, '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2433', 'codis', 'proxy.toml', '75', 'proxy', 'input', 'session_keepalive_period', null, null, '1000', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', '设置会话TCP检测周期，0表示禁用', '2', '23', 's', '秒', '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2434', 'codis', 'proxy.toml', 'false', 'proxy', 'input', 'session_break_on_failure', null, null, '0', 'true|false', '请输入true或者false', '设置敏感的会话连接，默认为false，当后端连接端口后，proxy会发送一个错误给客户端', '2', '24', null, null, '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2435', 'codis', 'proxy.toml', null, 'proxy', 'input', 'metrics_report_server', null, null, '0', null, null, null, '0', '25', null, null, '0', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2436', 'codis', 'proxy.toml', '1s', 'proxy', 'input', 'metrics_report_period', null, null, '1000', null, null, null, '0', '26', 's', '秒', '0', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2437', 'codis', 'proxy.toml', null, 'proxy', 'input', 'metrics_report_influxdb_server', null, null, '0', null, null, null, '0', '27', null, null, '0', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2438', 'codis', 'proxy.toml', '1s', 'proxy', 'input', 'metrics_report_influxdb_period', null, null, '1000', null, null, null, '0', '28', 's', '秒', '0', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2439', 'codis', 'proxy.toml', null, 'proxy', 'input', 'metrics_report_influxdb_username', null, null, '0', null, null, null, '0', '29', null, null, '0', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('244', 'kafka', 'server.properties', '30', 'proxy', 'input', 'replica.socket.timeout.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置备份网络超时时间，至少等于replica.fetch.wait.max.ms属性值。', '2', '54', null, '秒', '1', 'int', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2440', 'codis', 'proxy.toml', null, 'proxy', 'input', 'metrics_report_influxdb_password', null, null, '0', null, null, null, '0', '30', null, null, '0', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2441', 'codis', 'proxy.toml', null, 'proxy', 'input', 'metrics_report_influxdb_database', null, null, '0', null, null, null, '0', '31', null, null, '0', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2442', 'codis', 'proxy.toml', null, 'proxy', 'input', 'metrics_report_statsd_server', null, null, '0', null, null, null, '0', '32', null, null, '0', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2443', 'codis', 'proxy.toml', '1s', 'proxy', 'input', 'metrics_report_statsd_period', null, null, '1000', null, null, null, '0', '33', 's', '秒', '0', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2444', 'codis', 'proxy.toml', null, 'proxy', 'input', 'metrics_report_statsd_prefix', null, null, '0', null, null, null, '0', '34', null, null, '0', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('245', 'kafka', 'server.properties', '30', 'proxy', 'input', 'request.timeout.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置等待请求响应的超时时间。', '2', '55', null, '秒', '1', 'int', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('246', 'kafka', 'server.properties', '100', 'proxy', 'input', 'socket.receive.buffer.bytes', '', '', '1024', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置接受数据缓冲区大小。', '1', '4', null, 'Kb', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('247', 'kafka', 'server.properties', '100', 'proxy', 'input', 'socket.request.max.bytes', '', '', '1048576', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置接受请求数据的最大大小，这是为了防止server跑光内存，不能大于Java堆的大小。', '1', '5', null, 'Mb', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('248', 'kafka', 'server.properties', '100', 'proxy', 'input', 'socket.send.buffer.bytes', '', '', '1024', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置服务端发送数据的缓冲区大小。', '1', '6', null, 'Kb', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('249', 'kafka', 'server.properties', 'true', 'proxy', 'radio', 'unclean.leader.election.enable', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', '', '', '设置开启在副本中选举leader, true表示开启，false表示不开启。', '2', '56', null, '', '1', 'boolean', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('25', 'kafka', 'server.properties', '60', 'proxy', 'input', 'log.segment.delete.delay.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志段文件删除需要等待的时间。', '2', '53', null, '秒', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('250', 'kafka', 'server.properties', 'true', 'proxy', 'radio', 'broker.id.generation.enable', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', '', '', 'Enable automatic broker id generation on the server? When enabled the value configured for reserved.broker.max.id should be reviewed.\n', '0', '57', null, '', '0', 'boolean', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('251', 'kafka', 'server.properties', '600', 'proxy', 'input', 'connections.max.idle.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置连接空闲的超时时间。', '2', '58', null, '秒', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('252', 'kafka', 'server.properties', '10', 'proxy', 'input', 'background.threads', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置后台任务处理的线程数。', '2', '59', null, '', '1', 'int', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('253', 'kafka', 'server.properties', 'true', 'proxy', 'radio', 'controlled.shutdown.enable', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', '', '', 'Enable controlled shutdown of the server', '0', '60', null, '', '0', 'boolean', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('254', 'kafka', 'server.properties', '3', 'proxy', 'input', 'controlled.shutdown.max.retries', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置控制关闭任务的最大重试次数。', '2', '61', null, '', '1', 'int', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('255', 'kafka', 'server.properties', '5', 'proxy', 'input', 'controlled.shutdown.retry.backoff.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置控制关闭任务失败重试的等待时间。', '2', '62', null, '秒', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('256', 'kafka', 'server.properties', '30', 'proxy', 'input', 'controller.socket.timeout.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置broker控制的网络超时时间。', '2', '63', null, '秒', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('257', 'kafka', 'server.properties', '1', 'proxy', 'input', 'default.replication.factor', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置分区默认的分区备份个数，不能大于集群中broker的个数。', '2', '64', null, '', '1', 'int', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('258', 'kafka', 'server.properties', '1000', 'proxy', 'input', 'fetch.purgatory.purge.interval.requests', '', '', '1', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置清除consumer历史获取request记录间隔时间。', '2', '65', null, '毫秒', '1', 'int', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('259', 'kafka', 'server.properties', '30', 'proxy', 'input', 'group.max.session.timeout.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置consumer允许的最大超时时间。', '2', '66', null, '秒', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('26', 'kafka', 'server.properties', '1000012', 'proxy', 'input', 'message.max.bytes', '', '', '1', '^([1-9]\\d{0,17}|1000000000000000000)$', '输入值必须在1到1000000000000000000', '设置消息的最大数据大小，且不要大于fetch.message.max.bytes属性的值。', '2', '54', null, 'byte', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('260', 'kafka', 'server.properties', '6', 'proxy', 'input', 'group.min.session.timeout.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置consumer允许的最小超时时间。', '2', '67', null, '秒', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('261', 'kafka', 'server.properties', '0.9.0.X', 'proxy', 'input', 'inter.broker.protocol.version', '', '', '0', '', '', 'Specify which version of the inter-broker protocol will be used. This is typically bumped after all brokers were upgraded to a new version\n', '0', '68', null, '', '0', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('262', 'kafka', 'server.properties', '15', 'proxy', 'input', 'log.cleaner.backoff.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志清理需要等待的时间。', '2', '69', null, '秒', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('263', 'kafka', 'server.properties', 'producer', 'proxy', 'select', 'compression.type', '', '{\"producer\":\"producer\",\"uncompressed\":\"uncompressed\"}', '0', '', '', ' Specify the final compression type for a given topic. This configuration accepts the standard compression codecs (\'gzip\', \'snappy\', lz4). It additionally accepts \'uncompressed\' which is equivalent to no compression; and \'producer\' which means retain the original compression codec set by the producer.', '0', '70', null, '', '0', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('264', 'kafka', 'server.properties', '134217728', 'proxy', 'input', 'log.cleaner.dedupe.buffer.size', '', '', '0', '', '', 'The total memory used for log deduplication across all cleaner threads\n', '0', '71', null, '', '0', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('265', 'kafka', 'server.properties', '24', 'proxy', 'input', 'log.cleaner.delete.retention.ms', '', '', '3600000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置保存压缩日志的最长时间。', '2', '72', null, '小时', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('266', 'kafka', 'server.properties', 'true', 'proxy', 'radio', 'log.cleaner.enable', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', '', '', '设置开启日志压缩功能。设置true表示开启日志压缩,否则不压缩。', '2', '73', null, '', '1', 'boolean', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('267', 'kafka', 'server.properties', '0.9', 'proxy', 'input', 'log.cleaner.io.buffer.load.factor', '', '', '0', '^\\S*$', '输入不能为空', '设置日志清理io缓冲区hash表增长因子。', '2', '74', null, '', '1', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('268', 'kafka', 'server.properties', '512', 'proxy', 'input', 'log.cleaner.io.buffer.size', '', '', '1024', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志清理io缓冲区大小。', '2', '75', null, 'Kb', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('269', 'kafka', 'server.properties', '1.7976931348623157E308', 'proxy', 'input', 'log.cleaner.io.max.bytes.per.second', '', '', '0', '^([1-9]\\d{0,17}|1000000000000000000)$', '输入值必须在1到1000000000000000000', '设置每秒日志清理数据受限大小。', '0', '76', null, '', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('27', 'kafka', 'server.properties', '1', 'proxy', 'input', 'min.insync.replicas', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置副本同步最小数量。', '2', '55', null, '', '1', 'int', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('270', 'kafka', 'server.properties', '0.5', 'proxy', 'input', 'log.cleaner.min.cleanable.ratio', '', '', '0', '^\\S*$', '输入不能为空', '设置日志清理最小可清理的百分比。', '2', '77', null, '', '1', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('271', 'kafka', 'server.properties', '1', 'proxy', 'input', 'log.cleaner.threads', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置日志压缩运行的线程数。', '2', '78', null, '', '1', 'int', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('272', 'kafka', 'server.properties', 'delete', 'proxy', 'select', 'log.cleanup.policy', '', '{\"compact\":\"compact\",\"delete\":\"delete\"}', '0', 'compact|delete', '必须输入delete或者compact', '设置超出保留窗口的段清除策略。设置“delete\"表示删除， 设置“compact”表示压缩。', '2', '79', null, '', '1', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('273', 'kafka', 'server.properties', '4', 'proxy', 'input', 'log.index.interval.bytes', '', '', '1024', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置每次获取日志数据的索引数量大小。', '2', '80', null, 'Kb', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('274', 'kafka', 'server.properties', 'false', 'proxy', 'radio', 'delete.topic.enable', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', '', '', 'Enables delete topic. Delete topic through the admin tool will have no effect if this config is turned off\n', '0', '81', null, '', '0', 'boolean', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('275', 'kafka', 'server.properties', '10', 'proxy', 'input', 'log.index.size.max.bytes', '', '', '1048576', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置每个日志数据段文件的消息索引数量上限。当达到此上限将生成新消息段文件。', '2', '82', null, 'Mb', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('276', 'kafka', 'server.properties', 'false', 'proxy', 'radio', 'log.preallocate', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', '', '', '设置预先创建新文件属性，windows推荐使用。', '2', '83', null, '', '1', 'boolean', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('277', 'kafka', 'server.properties', '300', 'proxy', 'input', 'log.retention.check.interval.ms ', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志保留检测间隔时间。', '1', '12', null, '秒', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('278', 'kafka', 'server.properties', '2147483647', 'proxy', 'input', 'max.connections.per.ip', '', '', '0', '', '', '设置每个ip地址最大连接数目。', '2', '84', null, '', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('279', 'kafka', 'server.properties', '\"\"', 'proxy', 'input', 'max.connections.per.ip.overrides', '', '', '0', '^\\S*$', '输入不能为空', '设置每个 IP将覆盖默认的最大连接数。', '2', '85', null, '', '1', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('28', 'kafka', 'server.properties', '8', 'proxy', 'input', 'num.io.threads', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置服务器用来处理请求的I/O线程的数目。', '1', '1', null, '', '1', 'int', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('280', 'kafka', 'server.properties', '1', 'proxy', 'input', 'num.partitions', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置日志分区数量。', '1', '7', null, '', '1', 'int', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('281', 'kafka', 'server.properties', '1000', 'proxy', 'input', 'producer.purgatory.purge.interval.requests', '', '', '1', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置生产者请求清除时间。', '2', '86', null, '毫秒', '1', 'int', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('282', 'kafka', 'server.properties', '1', 'proxy', 'input', 'replica.fetch.backoff.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置备份数据失败的等待时间。', '2', '87', null, '秒', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('283', 'kafka', 'server.properties', '1000', 'proxy', 'input', 'reserved.broker.max.id', '', '', '0', '', '', 'Max number that can be used for a broker.id', '0', '88', null, '', '0', 'int', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2838', 'codis', 'redis.conf', '127.0.0.1', '网络', null, 'bind', '绑定IP', null, '0', null, null, null, '0', '35', null, null, '0', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2839', 'codis', 'redis.conf', 'no', '网络', null, 'protected-mode', '保护模式', null, '0', null, null, null, '0', '36', null, null, '0', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('284', 'kafka', 'server.properties', 'PLAINTEXT', 'proxy', 'input', 'security.inter.broker.protocol', '', '', '0', '', '', 'Security protocol used to communicate between brokers', '0', '89', null, '', '0', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2840', 'codis', 'redis.conf', '6379', '网络', null, 'port', '端口号', null, '0', null, null, null, '0', '37', null, null, '0', 'int', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2841', 'codis', 'redis.conf', '511', '网络', 'input', 'tcp-backlog', 'tcp监听最大数', null, '0', null, null, 'TCP监听的最大数，这里需要注意，如果链接过多，需要调整的话，同时需要调整/proc/sys/net/core/somaxconn下的配置，否则linux下会默认使用此配置调正到最低。', '0', '38', null, null, '0', 'int', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2842', 'codis', 'redis.conf', '0', '网络', 'input', 'timeout', '客户端超时时间', null, '0', '^[1-9]|0|([1-9]\\d+)$', '请输入0或大于0的整数', '设置客户端的超时时间，单位为秒，如果客户端在此时间内没有发出新的请求，就关闭连接。默认为0就是不管它。', '1', '39', null, null, '1', 'int', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2843', 'codis', 'redis.conf', '300', '网络', 'input', 'tcp-keepalive', 'tcp检查客户端', null, '0', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', 'TCP检测，也就是说每过300秒检测一次客户端是否还有效，避免服务器长时间阻塞。', '1', '40', null, null, '1', 'int', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2844', 'codis', 'redis.conf', 'no', '基本设置', null, 'daemonize', '守护进程', null, '0', 'yes|no', '请输入yes或者no', null, '0', '41', null, null, '0', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2845', 'codis', 'redis.conf', 'no', '基本设置', null, 'supervised', '进程管理方式', null, '0', 'yes|no', '请输入yes或者no', null, '0', '42', null, null, '0', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2846', 'codis', 'redis.conf', './redis.pid', '基本设置', 'input', 'pidfile', 'pid文件', null, '0', null, null, null, '0', '43', null, null, '0', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2847', 'codis', 'redis.conf', 'notice', '基本设置', 'radio', 'loglevel', '日志级别', '{\"debug\":\"debug\",\"varbose\":\"varbose\",\"notice\":\"notice\",\"warning\":\"warning\"}', '0', '^\\S*$', '请选择，不能为空', 'debug：记录很多信息，用于开发和测试；?varbose：有用的信息，不像debug会记录那么多；?notice：普通的verbose，常用于生产环境；?warning：只有非常重要或者严重的信息会记录到日志；', '2', '44', null, null, '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2848', 'codis', 'redis.conf', null, '基本设置', null, 'logfile', '日志文件名', null, '0', null, null, null, '0', '45', null, null, '0', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2849', 'codis', 'redis.conf', '16', '基本设置', null, 'databases', '数据库个数', null, '0', null, null, null, '0', '46', null, null, '0', 'int', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('285', 'kafka', 'server.properties', '300', 'proxy', 'input', 'leader.imbalance.check.interval.seconds', '', '', '1', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置leader平衡检测的间隔时间。', '2', '90', null, '秒', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2850', 'codis', 'redis.conf', '900 1|300 10|60 10000', '快照文件', 'input', 'save', '持久化规则', null, '0', null, '请参考redis官网了解配置格式', '设置 Redis 进行数据库镜像的频率，默认配置表示900秒内1个key变化、300内秒十个key变化、60秒内1万个key变化，则备份内存数据到磁盘。', '1', '47', null, null, '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2853', 'codis', 'redis.conf', 'yes', '快照文件', null, 'stop-writes-on-bgsave-error', '持久化出错可继续提供服务', null, '0', null, null, null, '0', '50', null, null, '0', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2854', 'codis', 'redis.conf', 'yes', '快照文件', null, 'rdbcompression', '支持压缩', null, '0', null, null, null, '0', '51', null, null, '0', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2855', 'codis', 'redis.conf', 'yes', '快照文件', null, 'rdbchecksum', '支持CRC64检测', null, '0', null, null, null, '0', '52', null, null, '0', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2856', 'codis', 'redis.conf', 'dump.rdb', '快照文件', null, 'dbfilename', '备份文件名', null, '0', null, null, null, '0', '53', null, null, '0', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2857', 'codis', 'redis.conf', './data', '快照文件', null, 'dir', '备份目录', null, '0', null, null, null, '0', '54', null, null, '0', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2858', 'codis', 'redis.conf', '<masterip> <masterport>', '从节点', null, 'slaveof', 'master地址', null, '0', null, null, null, '0', '55', null, null, '0', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2859', 'codis', 'redis.conf', '<master-password>', '从节点', null, 'masterauth', 'master密码', null, '0', null, null, null, '0', '56', null, null, '0', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('286', 'kafka', 'server.properties', '[]', 'proxy', 'input', 'metric.reporters', '', '', '0', '[]|^\\S*$', '输入不能为空', '设置度量记录的类的列表。实现MetricReporter接口允许插入将被通知新度量标准创建的类。JmxReporter 始终包含在注册 JMX 统计信息中。', '2', '91', null, '', '1', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2860', 'codis', 'redis.conf', 'yes', '从节点', null, 'slave-serve-stale-data', '持续提供服务', null, '0', null, null, null, '0', '57', null, null, '0', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2861', 'codis', 'redis.conf', 'yes', '从节点', null, 'slave-read-only', '只读', null, '0', null, null, null, '0', '58', null, null, '0', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2862', 'codis', 'redis.conf', 'no', '从节点', null, 'repl-diskless-sync', null, null, '0', null, null, null, '0', '59', null, null, '0', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2863', 'codis', 'redis.conf', '5', '从节点', null, 'repl-diskless-sync-delay', null, null, '0', null, null, null, '0', '60', null, null, '0', 'int', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2864', 'codis', 'redis.conf', '10', '从节点', null, 'repl-ping-slave-period', null, null, '0', null, null, null, '0', '61', null, null, '0', 'int', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2865', 'codis', 'redis.conf', '60', '从节点', null, 'repl-timeout', null, null, '0', null, null, null, '0', '62', null, null, '0', 'int', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2866', 'codis', 'redis.conf', 'no', '从节点', null, 'repl-disable-tcp-nodelay', null, null, '0', null, null, null, '0', '63', null, null, '0', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2867', 'codis', 'redis.conf', '1mb', '从节点', null, 'repl-backlog-size', null, null, '0', null, null, null, '0', '64', null, null, '0', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2868', 'codis', 'redis.conf', '3600', '从节点', null, 'repl-backlog-ttl', null, null, '0', null, null, null, '0', '65', null, null, '0', 'int', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2869', 'codis', 'redis.conf', '100', '从节点', null, 'slave-priority', null, null, '0', null, null, null, '0', '66', null, null, '0', 'int', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('287', 'kafka', 'server.properties', '2', 'proxy', 'input', 'metrics.num.samples', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置计算度量标准的样本数量。', '2', '92', null, '', '1', 'int', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2870', 'codis', 'redis.conf', '3', '从节点', null, 'min-slaves-to-write', null, null, '0', null, null, null, '0', '67', null, null, '0', 'int', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2871', 'codis', 'redis.conf', '10', '从节点', null, 'min-slaves-max-lag', null, null, '0', null, null, null, '0', '68', null, null, '0', 'int', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2872', 'codis', 'redis.conf', '5.5.5.5', '从节点', null, 'slave-announce-ip', null, null, '0', null, null, null, '0', '69', null, null, '0', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2873', 'codis', 'redis.conf', '1234', '从节点', null, 'slave-announce-port', null, null, '0', null, null, null, '0', '70', null, null, '0', 'int', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2874', 'codis', 'redis.conf', 'foobared', '安全设置', null, 'requirepass', '密码', null, '0', null, null, null, '0', '71', null, null, '0', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2875', 'codis', 'redis.conf', null, '安全设置', 'input', 'rename-command', '重命名命令', null, '0', null, '命令请参考redis官网', '请输入要屏蔽的命令，用空格分隔，示例:command1|command2', '1', '72', null, null, '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2876', 'codis', 'redis.conf', '10000', 'LIMITS', 'input', 'maxclients', '最大连接数', null, '0', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', '限制同时连接的客户数量。当连接数超过这个值时，redis 将不再接收其他连接请求，客户端尝试连接时将收到error 信息。默认为10000，要考虑系统文件描述符限制，不宜过大，浪费文件描述符，具体多少根据具体情况而定。', '1', '73', null, null, '1', 'int', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2877', 'codis', 'redis.conf', '<bytes>', 'LIMITS', null, 'maxmemory', '最大内存限制', null, '0', null, null, null, '0', '74', null, null, '0', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2878', 'codis', 'redis.conf', 'noeviction', 'LIMITS', 'radio', 'maxmemory-policy', '清理规则', '{\"noeviction\":\"noeviction\",\"allkeys-lru\":\"allkeys-lru\",\"volatile-lru\":\"volatile-lru\",\"allkeys-random\":\"allkeys-random\",\"volatile-random\":\"volatile-random\",\"volatile-ttl\":\"volatile-ttl\"}', '0', '^\\S*$', '请选择，不能为空', 'volatile-lru -> 使用 LRU 算法移除包含过期设置的 key 。\nnoeviction -> 不让任何 key 过期，只是给写入操作返回一个错误。\nallkeys-lru -> 根据 LRU 算法移除所有的 key 。\nvolatile-random -> 对”过期集合”中的数据采取”随即选取”算法,并移除选中的K-V,直到”内存足够”为止. 如果如果”过期集合”中全部移除全部移除仍不能满足,将OOM\nallkeys-random -> 对所有的数据,采取”随机选取”算法,并移除选中的K-V,直到”内存足够”为止\nvolatile-ttl ->对”过期集合”中的数据采取TTL算法(最小存活时间),移除即将过期的数据.', '2', '75', null, null, '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2879', 'codis', 'redis.conf', '5', 'LIMITS', 'input', 'maxmemory-samples', 'LRU算法取样数', null, '0', '^[1-9]|10$', '请输入1到10的整数', 'LRU算法取样', '2', '76', null, null, '1', 'int', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('288', 'kafka', 'server.properties', '30', 'proxy', 'input', 'metrics.sample.window.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置计算度量标准的样本数量。', '2', '93', null, '秒', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2880', 'codis', 'redis.conf', 'yes', 'AOF设置', 'radio', 'appendonly', '开启aof', '{\"是\":\"yes\",\"否\":\"no\"}', '0', 'yes|no', '请输入yes或者no', '开启aof', '1', '77', null, null, '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2881', 'codis', 'redis.conf', 'appendonly.aof', 'AOF设置', null, 'appendfilename', 'aof文件名', null, '0', null, null, null, '0', '78', null, null, '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2882', 'codis', 'redis.conf', 'everysec', 'AOF设置', 'radio', 'appendfsync', '备份规则', '{\"always\":\"always\",\"everysec\":\"everysec\",\"no\":\"no\"}', '0', '^\\S*$', '请选择，不能为空', '设置对appendonly.aof 文件进行同步的频率。always 表示每次有写操作都进行同步，everysec 表示对写操作进行累积，每秒同步一次。no不主动fsync，由OS自己来完成。这个需要根据实际业务场景进行配置。', '2', '79', null, null, '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2883', 'codis', 'redis.conf', 'no', 'AOF设置', 'radio', 'no-appendfsync-on-rewrite', '持续同步', '{\"是\":\"yes\",\"否\":\"no\"}', '0', 'yes|no', '请输入yes或者no', '在aof rewrite期间,是否对aof新记录的append暂缓使用文件同步策略,主要考虑磁盘IO开支和请求阻塞时间。默认为no,表示”不暂缓”,新的aof记录仍然会被立即同步。', '2', '80', null, null, '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2884', 'codis', 'redis.conf', '100', 'AOF设置', 'input', 'auto-aof-rewrite-percentage', '触发重写aof文件比例', null, '0', '^[1-9]\\d[0]?$', '请输入10到100的整数', '当Aof log增长超过指定比例时，重写log file， 设置为0表示不自动重写Aof 日志，重写是为了使aof体积保持最小，而确保保存最完整的数据。', '2', '81', null, null, '1', 'int', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2885', 'codis', 'redis.conf', '64', 'AOF设置', 'input', 'auto-aof-rewrite-min-size', '出发重写aof的最小尺寸', null, '0', '^[1-9]|([1-10]\\d+)$', '请输入大于0的整数', '触发aof rewrite的最小文件尺寸。', '2', '82', 'mb', 'mb', '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2886', 'codis', 'redis.conf', 'yes', 'AOF设置', 'radio', 'aof-load-truncated', '启动加载被截断的aof文件', '{\"是\":\"yes\",\"否\":\"no\"}', '0', 'yes|no', '请输入yes或者no', 'redis在启动的时候可以加载被截断的AOF文件，默认启用。', '2', '83', null, null, '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2887', 'codis', 'redis.conf', '5000', 'LUA脚本', 'input', 'lua-time-limit', 'lua脚本运行最大时间（毫秒）', null, '0', '^[1-9]|0|([1-9]\\d+)$', '请输入0或大于0的整数', 'lua脚本运行的最大时间', '2', '84', null, '毫秒', '1', 'int', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2888', 'codis', 'redis.conf', '10000', '慢日志记录', 'input', 'slowlog-log-slower-than', '慢日志时间（微秒）', null, '0', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', '“慢操作日志”记录,单位:微秒(百万分之一秒,1000 * 1000),如果操作时间超过此值,将会把command信息”记录”起来.(内存,非文件)。其中”操作时间”不包括网络IO开支,只包括请求达到server后进行”内存实施”的时间.”0”表示记录全部操作。', '2', '85', null, '微秒', '1', 'int', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2889', 'codis', 'redis.conf', '128', '慢日志记录', 'input', 'slowlog-max-len', '记录条数', null, '0', '^[1-9]|([1-10]\\d+)$', '请输入大于1的整数', '“慢操作日志”保留的最大条数,”记录”将会被队列化,如果超过了此长度,旧记录将会被移除。可以通过”SLOWLOG args”查看慢记录的信息(SLOWLOG get 10,SLOWLOG reset)。', '2', '86', null, null, '1', 'int', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('289', 'kafka', 'server.properties', '11', 'proxy', 'input', 'quota.window.num', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入值必须在1到1000000000', '设置内存中保留的样本数量。', '2', '94', null, '', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2890', 'codis', 'redis.conf', '0', '延迟监控', 'input', 'latency-monitor-threshold', '延迟监控', null, '0', '^[1-9]|0|([1-9]\\d+)$', '请输入0或大于0的整数', '延迟监控，用于记录等于或超过了指定时间的操作，默认是关闭状态，即值为0。', '2', '87', null, null, '1', 'int', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2891', 'codis', 'redis.conf', null, '事件通知', 'input', 'notify-keyspace-events', '键空间通知', null, '0', null, '请参考redis官网了解配置格式', '客户端可以通过订阅/发布(Pub/Sub)机制，接收那些以某种方式改变了Redis数据空间的事件通知。', '2', '88', null, null, '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2892', 'codis', 'redis.conf', '512', '数据结构', 'input', 'hash-max-ziplist-entries', null, null, '0', '^[1-9]|([1-10]\\d+)$', '请输入大于0的整数', 'ziplist中允许存储的最大条目个数，默认为512', '2', '89', null, null, '1', 'int', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2893', 'codis', 'redis.conf', '64', '数据结构', 'input', 'hash-max-ziplist-value', null, null, '0', '^[1-9]|([1-10]\\d+)$', '请输入大于0的整数', 'ziplist中允许条目value值最大字节数，默认为64', '2', '90', null, null, '1', 'int', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2894', 'codis', 'redis.conf', '-2', '数据结构', 'input', 'list-max-ziplist-size', null, '{\"-1\":\"-1\",\"-2\":\"-2\",\"-3\":\"-3\",\"-4\":\"-4\",\"-5\":\"-5\"}', '0', '^-[1-5]$', '请输入-1到-5的整数', '设置ziplist的合理长度', '2', '91', null, null, '1', 'int', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2895', 'codis', 'redis.conf', '0', '数据结构', 'input', 'list-compress-depth', null, '{\"0\":\"0\",\"1\":\"1\",\"2\":\"2\",\"3\":\"3\"}', '0', '^[0-3]$', '请输入0到3的整数', 'list结构压缩级别', '2', '92', null, null, '1', 'int', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2896', 'codis', 'redis.conf', '512', '数据结构', 'input', 'set-max-intset-entries', null, null, '0', '^[1-9]|([1-10]\\d+)$', '请输入大于0的整数', 'intset中允许保存的最大条目个数,如果达到阀值,intset将会被重构为hashtable', '2', '93', null, null, '1', 'int', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2897', 'codis', 'redis.conf', '128', '数据结构', 'input', 'zset-max-ziplist-entries', null, null, '0', '^[1-9]|([1-10]\\d+)$', '请输入大于0的整数', 'ziplist中允许存储的最大条目个数，默认为128', '2', '94', null, null, '1', 'int', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2898', 'codis', 'redis.conf', '64', '数据结构', 'input', 'zset-max-ziplist-value', null, null, '0', '^[1-9]|([1-10]\\d+)$', '请输入大于0的整数', 'ziplist中允许条目value值最大字节数，默认为64', '2', '95', null, null, '1', 'int', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2899', 'codis', 'redis.conf', '3000', '数据结构', null, 'hll-sparse-max-bytes', null, null, '0', null, null, null, '0', '96', null, null, '0', 'int', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('29', 'kafka', 'server.properties', '3', 'proxy', 'input', 'num.network.threads', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置服务器用来处理网络请求的网络线程数目。', '1', '2', null, '', '1', 'int', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('290', 'kafka', 'server.properties', '1', 'proxy', 'input', 'quota.window.size.seconds', '', '', '1', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置每个样本的时间跨度。', '2', '95', null, '秒', '1', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2900', 'codis', 'redis.conf', 'yes', '数据结构', null, 'activerehashing', null, null, '0', null, null, null, '0', '97', null, null, '0', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2901', 'codis', 'redis.conf', 'normal 0 0 0', '数据结构', 'input', 'client-output-buffer-limit', null, null, '0', '^\\S*$', '请参考redis官网了解配置格式', '客户端buffer控制。', '2', '98', null, null, '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2902', 'codis', 'redis.conf', 'slave 256mb 64mb 60', '数据结构', 'input', 'client-output-buffer-limit', null, null, '0', '^\\S*$', '请参考redis官网了解配置格式', '客户端buffer控制。', '2', '99', null, null, '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2903', 'codis', 'redis.conf', 'pubsub 32mb 8mb 60', '数据结构', 'input', 'client-output-buffer-limit', null, null, '0', '^\\S*$', '请参考redis官网了解配置格式', '客户端buffer控制。', '2', '100', null, null, '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2904', 'codis', 'redis.conf', '10', '数据结构', 'input', 'hz', null, null, '0', '^[1-9]|([1-10]\\d+)$', '请输入大于0的整数', 'hz默认设为10，提高它的值将会占用更多的cpu，当然相应的redis将会更快的处理同时到期的许多key，以及更精确的去处理超时。hz的取值范围是1~500，通常不建议超过100，只有在请求延时非常低的情况下可以将值提升到100。', '2', '101', null, null, '1', 'int', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2905', 'memcached', 'memconf', null, null, 'radio', '-M', '关闭LRU功能', '{\"是\":\"ture\",\"否\":\"false\"}', '0', '^\\S*$', '不能为空，请选择', '使用本选项那么将关闭LRU功能', '1', '1', null, null, '1', 'String', '1.4.13');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2906', 'memcached', 'memconf', '1024', null, 'input', '-c', '连接数', null, '0', '^[1-9]|([1-9]\\d+)$', '\"-c \"请输入不小于1的整数。示例：1024', '最多允许多少个客户端同时在线', '1', '2', null, null, '1', 'String', '1.4.13');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2907', 'memcached', 'memconf', null, null, 'radio', '-k', '锁定内存', '{\"是\":\"true\",\"否\":\"false\"}', '0', '^\\S*$', '不能为空，请选择', '将memcached使用到的内存锁定在内存中，不准OS把memcached的内存移动到虚拟内存', '1', '3', null, null, '1', 'String', '1.4.13');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2908', 'memcached', 'memconf', null, null, null, '-v', '日志等级', null, '0', null, null, '输出memcached运行时的一些信息。-v -vv 输出的信息依次增加。', '0', '4', null, null, '0', 'String', '1.4.13');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2909', 'memcached', 'memconf', '1.25', null, 'input', '-f', '扩容因子', null, '0', '^[1-9].\\d+$', '\"-f \"请输入1.0-10.0之间的浮点数。示例: 1.25', 'item的扩容因子。默认值为1.25。该选项的参数值可以是小数但必须大于1.0', '1', '5', null, null, '1', 'String', '1.4.13');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('291', 'kafka', 'server.properties', '-1', 'proxy', 'input', 'broker.id', '', '', '0', '', '', '', '0', '96', null, '', '0', 'int', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2910', 'memcached', 'memconf', '48', null, 'input', '-n', 'item存储', null, '0', '^[1-9]|([1-9]\\d+)$', '\"-n \"请输入不小于1的整数。示例：48', '设置最小的item能存储多少字节的数据', '1', '6', null, '字节', '1', 'String', '1.4.13');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2911', 'memcached', 'memconf', '20', null, 'input', '-R', '线程设置', null, '0', '^[1-9]|([1-9]\\d+)$', '\"-R \"请输入不小于1的整数。示例：20', 'worker线程连续为某个客户端执行命令的最大命令数', '1', '7', null, null, '1', 'String', '1.4.13');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2912', 'memcached', 'memconf', null, null, null, '-l', '监控IP地址', null, '0', null, null, 'memcached绑定的ip地址。如果不设置这个选项，那么memcached将使用INADDR_ANY。如果想指定多个IP地址，那么该选项的参数可以由多个ip组成，ip之间用逗号分隔。', '0', '8', null, null, '0', null, '1.4.13');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2913', 'memcached', 'memconf', null, null, null, '-d', '守护进程', null, '0', null, null, '以守护进程的形式运行memcached', '0', '9', null, null, '0', null, '1.4.13');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2914', 'memcached', 'memconf', null, null, null, '-m', '指定内存', null, '0', null, null, '指定内存大小', '0', '10', null, null, '0', null, '1.4.13');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2915', 'memcached', 'memconf', null, null, null, '-P', '保存pid文件', null, '0', null, null, '保存pid文件', '0', '11', null, null, '0', null, '1.4.13');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2916', 'memcached', 'memconf', null, null, null, '-u', '用户', null, '0', null, null, '当以root用户启动memcached的时候需要指定memcached的所属用户，其他用户启动memcached不需要此选项', '0', '12', null, null, '0', null, '1.4.13');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2917', 'memcached', 'memconf', null, null, null, '-p', '端口号', null, '0', null, null, 'Memcached监听的端口号', '0', '13', null, null, '0', null, '1.4.13');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2918', 'codis', 'dashboard.toml', 'semi-async', 'migration', 'radio', 'migration_method', null, '{\"sync\":\"sync\",\"semi-async\":\"semi-async\"}', '0', 'sync|semi-async', '请选择sync或者semi-async', 'migration方法', '2', '102', null, null, '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2919', 'codis', 'dashboard.toml', '100', 'migration', 'input', 'migration_parallel_slots', null, null, '0', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', 'migration并发槽的个数', '2', '103', null, null, '1', 'int', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('292', 'kafka', 'server.properties', '\"\"', 'proxy', 'input', 'host.name', '', '', '0', '', '', '', '0', '97', null, '', '0', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2920', 'codis', 'dashboard.toml', '200', 'migration', 'input', 'migration_async_maxbulks', null, null, '0', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', null, '2', '104', null, null, '1', 'int', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2921', 'codis', 'dashboard.toml', '32', 'migration', 'input', 'migration_async_maxbytes', null, null, '1048576', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', '同步最大字节数', '2', '105', 'mb', 'mb', '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2922', 'codis', 'dashboard.toml', '500', 'migration', 'input', 'migration_async_numkeys', null, null, '0', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', '同步最大key的个数', '2', '106', null, null, '1', 'int', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2923', 'codis', 'dashboard.toml', '30', 'migration', 'input', 'migration_timeout', null, null, '1000', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', 'migration超时时间', '2', '107', 's', '秒', '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2924', 'codis', 'dashboard.toml', '1', 'sentinel', 'input', 'sentinel_parallel_syncs', null, null, '0', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', '最大并发数量', '2', '108', null, null, '1', 'int', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2925', 'codis', 'dashboard.toml', '30', 'sentinel', 'input', 'sentinel_down_after', null, null, '1000', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', '这个配置项指定了在发生failover主备切换时最多可以有多少个slave同时对新的master进行 同步，这个数字越小，完成failover所需的时间就越长，但是如果这个数字越大，就意味着越 多的slave因为replication而不可用。可以通过将这个值设为 1 来保证每次只有一个slave 处于不能处理命令请求的状态', '2', '109', 's', '秒', '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2926', 'codis', 'dashboard.toml', '5', 'sentinel', 'input', 'sentinel_failover_timeout', null, null, '60000', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', '这个配置项指定了需要多少失效时间，一个master才会被这个sentinel主观地认为是不可用的。 单位是毫秒，默认为30秒', '2', '110', 'm', '分', '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2927', 'codis', 'dashboard.toml', null, 'sentinel', 'input', 'sentinel_notification_script', null, null, '0', null, null, '通知型脚本:当sentinel有任何警告级别的事件发生时（比如说redis实例的主观失效和客观失效等等），将会去调用这个脚本，这时这个脚本应该通过邮件，SMS等方式去通知系统管理员关于系统不正常运行的信息。调用该脚本时，将传给脚本两个参数，一个是事件的类型，一个是事件的描述。如果sentinel.conf配置文件中配置了这个脚本路径，那么必须保证这个脚本存在于这个路径，并且是可执行的，否则sentinel无法正常启动成功。 ', '2', '111', null, null, '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('2928', 'codis', 'dashboard.toml', null, 'sentinel', 'input', 'sentinel_client_reconfig_script', null, null, '0', null, null, '当一个master由于failover而发生改变时，这个脚本将会被调用，通知相关的客户端关于master地址已经发生改变的信息', '2', '112', null, null, '1', 'String', '3.2.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('293', 'kafka', 'server.properties', '/tmp/kafka-logs', 'proxy', 'input', 'log.dir', '', '', '0', '', '', '', '0', '98', null, '', '0', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('294', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'log.dirs', '', '', '0', '', '', '', '0', '99', null, '', '0', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('295', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'zookeeper.connection.timeout.ms', '', '', '1000', '', '', '', '0', '100', null, '秒', '0', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('296', 'kafka', 'server.properties', '6', 'proxy', 'input', 'zookeeper.session.timeout.ms', '', '', '1000', '', '', '', '0', '101', null, '秒', '0', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('297', 'kafka', 'server.properties', 'false', 'proxy', 'radio', 'zookeeper.set.acl', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', '', '', '', '0', '102', null, '', '0', 'boolean', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('298', 'kafka', 'server.properties', 'class org.apache.kafka.common.security.auth.DefaultPrincipalBuilde', 'proxy', 'input', 'principal.builder.class', '', '', '0', '', '', '', '0', '103', null, '', '0', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('299', 'kafka', 'server.properties', '/usr/bin/kinit', 'proxy', 'input', 'sasl.kerberos.kinit.cmd', '', '', '0', '', '', '', '0', '104', null, '', '0', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'advertised.port', '', '', '0', '', '', 'The port to publish to ZooKeeper for clients to use. In IaaS environments, this may need to be different from the port to which the broker binds. If this is not set, it will publish the same port that the broker binds to.\n', '0', '56', null, '', '0', 'int', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('30', 'kafka', 'server.properties', '1', 'proxy', 'input', 'num.recovery.threads.per.data.dir', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置每个数据目录用于日志恢复启动和关闭冲洗时的线程数量。', '1', '3', null, '', '1', 'int', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('300', 'kafka', 'server.properties', '60000', 'proxy', 'input', 'sasl.kerberos.min.time.before.relogin', '', '', '0', '', '', '', '0', '105', null, '', '0', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3000', 'mysql', 'my.cnf', '480', 'mysqld', 'text', 'wait_timeout', 'MySQL连接的最大空闲时间(非交互式连接)', 'NULL', '60', '^([1-9]\\d{0,4}|[1-4]\\d{5}|5[0-1]\\d{4}|52[0-4]\\d{3}|525[0-5]\\d{2}|525600)$', '请输入1到525600的整数', '请输入1到525600的整数', '2', '33', 'NULL', '分钟', '1', 'int', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3001', 'mysql', 'my.cnf', '8760', 'mysqld', 'text', 'lock_wait_timeout', '获取元数据锁的超时时间', 'NULL', '3600', '^([1-9]\\d{0,2}|[1-7]\\d{3}|8\\d{4}|8[0-6]\\d{2}|87[0-5]\\d{1}|8760)$', '请输入1到8760的整数', '请输入1到8760的整数', '2', '34', 'NULL', '小时', '1', 'int', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3002', 'mysql', 'my.cnf', 'utf8mb4', 'mysqld', 'text', 'character-set-server', '服务器使用的字符集', 'NULL', '0', 'NULL', '可在MySQL官网查看支持哪些字符集', '可在MySQL官网查看支持哪些字符集', '0', '12', 'NULL', 'NULL', '1', 'String', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3003', 'storm', 'storm.yaml', '/usr/local/lib:/opt/local/lib:/usr/lib', 'storm', 'input', 'java.library.path', '', '', '0', '', '', '', '0', '1', null, '', '0', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3004', 'storm', 'storm.yaml', 'storm-local', 'storm', 'input', 'storm.local.dir', '', '', '0', '', '', '', '0', '2', null, '', '0', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3006', 'storm', 'storm.yaml', 'localhost', 'storm', 'input', 'storm.zookeeper.servers', '', '', '0', '', '', '', '0', '4', null, '', '0', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3007', 'storm', 'storm.yaml', '2181', 'storm', 'input', 'storm.zookeeper.port', '', '', '0', '', '', '', '0', '5', null, '', '0', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3008', 'storm', 'storm.yaml', '20', 'storm', 'input', 'storm.zookeeper.session.timeout', '', '', '1000', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置客户端连接Zookeeper超时时间。', '1', '6', null, '秒', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3009', 'storm', 'storm.yaml', '15', 'storm', 'input', 'storm.zookeeper.connection.timeout', '', '', '1000', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置连接Zookeeper超时时间。', '1', '7', null, '秒', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('301', 'kafka', 'server.properties', '[DEFAULT]', 'proxy', 'input', 'sasl.kerberos.principal.to.local.rules', '', '', '0', '', '', '', '0', '106', null, '', '0', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3010', 'storm', 'storm.yaml', '5', 'storm', 'input', 'storm.zookeeper.retry.times', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置连接Zookeeper重试次数。', '1', '8', null, '', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3011', 'storm', 'storm.yaml', '1000', 'storm', 'input', 'storm.zookeeper.retry.interval', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置连接Zookeeper重试间隔。', '1', '9', null, '', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3012', 'storm', 'storm.yaml', '30', 'storm', 'input', 'storm.zookeeper.retry.intervalceiling.millis', '', '', '1000', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置重试时间间隔最长时间。', '1', '10', null, '秒', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3013', 'storm', 'storm.yaml', 'null', 'storm', 'input', 'storm.zookeeper.auth.user', '', '', '0', '', '', '', '0', '11', null, '', '0', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3014', 'storm', 'storm.yaml', 'null', 'storm', 'input', 'storm.zookeeper.auth.password', '', '', '0', '', '', '', '0', '12', null, '', '0', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3017', 'storm', 'storm.yaml', 'distributed', 'storm', 'radio', 'storm.cluster.mode', '', '{\"distributed\":\"distributed\",\"local\":\"local\"}', '0', '^\\S*$', '不能为空', '设置集群运行模式([distributed|local])。', '1', '15', null, '', '1', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3018', 'storm', 'storm.yaml', 'false', 'storm', 'radio', 'storm.local.mode.zmq', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '设置Local模式是否使用ZeroMQ。', '1', '16', null, '', '1', 'boolean', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3019', 'storm', 'storm.yaml', 'org.apache.storm.security.auth.SimpleTransportPlugin', 'storm', 'input', 'storm.thrift.transport', '', '', '0', '', '', '', '0', '17', null, '', '0', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('302', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'sasl.kerberos.service.name', '', '', '0', '', '', '', '0', '107', null, '', '0', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3020', 'storm', 'storm.yaml', 'org.apache.storm.security.auth.DefaultPrincipalToLocal', 'storm', 'input', 'storm.principal.tolocal', '', '', '0', '', '', '', '0', '18', null, '', '0', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3021', 'storm', 'storm.yaml', 'org.apache.storm.security.auth.ShellBasedGroupsMapping', 'storm', 'input', 'storm.group.mapping.service', '', '', '0', '', '', '', '0', '19', null, '', '0', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3023', 'storm', 'storm.yaml', 'org.apache.storm.messaging.netty.Context', 'storm', 'input', 'storm.messaging.transport', '', '', '0', '', '', '', '0', '21', null, '', '0', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3024', 'storm', 'storm.yaml', '5', 'storm', 'input', 'storm.nimbus.retry.times', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置nimbus操作重试次数。', '1', '22', null, '', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3025', 'storm', 'storm.yaml', '2', 'storm', 'input', 'storm.nimbus.retry.interval.millis', '', '', '1000', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置重试间隔。', '1', '23', null, '秒', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3026', 'storm', 'storm.yaml', '60', 'storm', 'input', 'storm.nimbus.retry.intervalceiling.millis', '', '', '1000', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置最大重试时间。', '1', '24', null, '秒', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3027', 'storm', 'storm.yaml', '[]', 'storm', 'input', 'storm.auth.simple-white-list.users', '', '', '0', '', '', '', '0', '25', null, '', '0', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3028', 'storm', 'storm.yaml', '[]', 'storm', 'input', 'storm.auth.simple-acl.users', '', '', '0', '', '', '', '0', '26', null, '', '0', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3029', 'storm', 'storm.yaml', '[]', 'storm', 'input', 'storm.auth.simple-acl.users.commands', '', '', '0', '', '', '', '0', '27', null, '', '0', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('303', 'kafka', 'server.properties', '0.05', 'proxy', 'input', 'sasl.kerberos.ticket.renew.jitter', '', '', '0', '', '', '', '0', '108', null, '', '0', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3030', 'storm', 'storm.yaml', '[]', 'storm', 'input', 'storm.auth.simple-acl.admins', '', '', '0', '', '', '', '0', '28', null, '', '0', 'long', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3032', 'storm', 'storm.yaml', 'org.apache.storm.serialization.GzipThriftSerializationDelegate', 'storm', 'input', 'storm.meta.serialization.delegate', '', '', '0', '', '', '', '0', '30', null, '', '0', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3038', 'storm', 'storm.yaml', '/storm', 'storm', 'input', 'storm.zookeeper.root', '', '', '0', '', '', '', '0', '36', null, '', '0', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3039', 'storm', 'storm.yaml', '[\"localhost\"]', 'nimbus', 'input', 'nimbus.seeds', '', '', '0', '', '', '', '0', '37', null, '', '0', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('304', 'kafka', 'server.properties', '0.8', 'proxy', 'input', 'sasl.kerberos.ticket.renew.window.factor', '', '', '0', '', '', '', '0', '109', null, '', '0', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3040', 'storm', 'storm.yaml', '6627', 'nimbus', 'input', 'nimbus.thrift.port', '', '', '0', '', '', '', '0', '38', null, '', '0', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3041', 'storm', 'storm.yaml', '64', 'nimbus', 'input', 'nimbus.thrift.threads', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置nimbus thrift线程数目。', '1', '39', null, '', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3042', 'storm', 'storm.yaml', '1048576', 'nimbus', 'input', 'nimbus.thrift.max_buffer_size', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置nimbus thrift最大缓冲大小。', '1', '40', null, '', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3043', 'storm', 'storm.yaml', '-Xmx1024m', 'nimbus', 'input', 'nimbus.childopts', '', '', '0', '', '', '', '0', '41', null, '', '0', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3044', 'storm', 'storm.yaml', '30', 'nimbus', 'input', 'nimbus.task.timeout.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置task心跳超时时间。', '1', '42', null, '秒', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3045', 'storm', 'storm.yaml', '60', 'nimbus', 'input', 'nimbus.supervisor.timeout.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置supervisor的心跳超时时间。', '1', '43', null, '秒', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3046', 'storm', 'storm.yaml', '10', 'nimbus', 'input', 'nimbus.monitor.freq.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置nimbus检查心跳和重分配任务的时间间隔。', '1', '44', null, '秒', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3047', 'storm', 'storm.yaml', '600', 'nimbus', 'input', 'nimbus.cleanup.inbox.freq.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置多久时间启动清理 inbox 文件的线程。', '1', '45', null, '秒', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3048', 'storm', 'storm.yaml', '3600', 'nimbus', 'input', 'nimbus.inbox.jar.expiration.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置jar 过期时间。', '1', '46', null, '秒', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('305', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'ssl.cipher.suites', '', '', '0', '', '', '', '0', '110', null, '', '0', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3050', 'storm', 'storm.yaml', '120', 'nimbus', 'input', 'nimbus.task.launch.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置task启动时的一个特殊超时时间。', '1', '48', null, '秒', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3051', 'storm', 'storm.yaml', '600', 'nimbus', 'input', 'nimbus.file.copy.expiration.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置nimbus判断上传/下载链接的超时时间。', '1', '49', null, '秒', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3055', 'storm', 'storm.yaml', '600', 'nimbus', 'input', 'nimbus.credential.renewers.freq.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置nimbus凭证重新申请的频率。', '1', '53', null, '秒', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3058', 'storm', 'storm.yaml', '0.0.0.0', 'ui', 'radio', 'ui.host', '', '', '0', 'true|false', '值必须是true或者false', '', '0', '56', null, '', '0', 'boolean', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3059', 'storm', 'storm.yaml', '8080', 'ui', 'input', 'ui.port', '', '', '0', '', '', '', '0', '57', null, '', '0', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('306', 'kafka', 'server.properties', 'none', 'proxy', 'input', 'ssl.client.auth', '', '', '0', '', '', '', '0', '111', null, '', '0', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3060', 'storm', 'storm.yaml', '-Xmx768m', 'ui', 'input', 'ui.childopts', '', '', '0', '', '', '', '0', '58', null, '', '0', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3061', 'storm', 'storm.yaml', 'true', 'ui', 'radio', 'ui.actions.enabled', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '设置开启UI操作功能。', '1', '59', null, '', '1', 'boolean', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3062', 'storm', 'storm.yaml', 'null', 'ui', 'input', 'ui.filter', '', '', '0', '^\\S*$', '不能为空', '设置实现用于验证 / 过滤 UI 请求的 javax.servlet.Filter 的类。', '1', '60', null, '', '1', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3063', 'storm', 'storm.yaml', 'null', 'ui', 'input', 'ui.filter.params', '', '', '0', '^\\S*$', '不能为空', '设置javax.servlet.Filter 的初始化参数。', '1', '61', null, '', '1', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3064', 'storm', 'storm.yaml', 'null', 'ui', 'input', 'ui.users', '', '', '0', '^\\S*$', '不能为空', '设置UI用户。', '1', '62', null, '', '1', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3065', 'storm', 'storm.yaml', '4', 'ui', 'input', 'ui.header.buffer.bytes', '', '', '1024', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置UI 的头缓冲区的大小。', '1', '63', null, 'Kb', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3066', 'storm', 'storm.yaml', 'org.apache.storm.security.auth.DefaultHttpCredentialsPlugin', 'ui', 'input', 'ui.http.creds.plugin', '', '', '0', '', '', '', '0', '64', null, '', '0', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3069', 'storm', 'storm.yaml', '8000', 'ui', 'input', 'logviewer.port', '', '', '0', '', '', '', '0', '67', null, '', '0', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('307', 'kafka', 'server.properties', '[TLSv1.2, TLSv1.1, TLSv1]', 'proxy', 'input', 'ssl.enabled.protocols', '', '', '0', '', '', '', '0', '112', null, '', '0', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3070', 'storm', 'storm.yaml', '-Xmx128m', 'ui', 'input', 'logviewer.childopts', '', '', '0', '', '', '', '0', '68', null, '', '0', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3071', 'storm', 'storm.yaml', '168', 'ui', 'input', 'logviewer.cleanup.age.mins', '', '', '60', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置上次修改日志以供日志考虑进行清理的时间。', '1', '69', null, '分钟', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3072', 'storm', 'storm.yaml', 'A1', 'ui', 'input', 'logviewer.appender.name', '', '', '0', '^\\S*$', '不能为空', '设置日志查看器用于确定日志目录的 Appender 名称。', '1', '70', null, '', '1', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3075', 'storm', 'storm.yaml', 'null', 'ui', 'input', 'logs.users', '', '', '0', '', '', '', '0', '73', null, '', '0', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3076', 'storm', 'storm.yaml', '3772', 'ui', 'input', 'drpc.port', '', '', '0', '', '', '', '0', '74', null, '', '0', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3077', 'storm', 'storm.yaml', '64', 'ui', 'input', 'drpc.worker.threads', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置DRPC 节俭服务器工作线程数。', '1', '75', null, '', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3078', 'storm', 'storm.yaml', '1048576', 'ui', 'input', 'drpc.max_buffer_size', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置drpc最大缓冲大小。', '1', '76', null, '', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3079', 'storm', 'storm.yaml', '128', 'ui', 'input', 'drpc.queue.size', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置drpc队列大小。', '1', '77', null, '', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('308', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'ssl.key.password', '', '', '0', '', '', '', '0', '113', null, '', '0', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3080', 'storm', 'storm.yaml', '3773', 'ui', 'input', 'drpc.invocations.port', '', '', '0', '', '', '', '0', '78', null, '', '0', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3081', 'storm', 'storm.yaml', '64', 'ui', 'input', 'drpc.invocations.threads', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置DRPC调用节俭服务器工作线程。', '1', '79', null, '', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3082', 'storm', 'storm.yaml', '600', 'ui', 'input', 'drpc.request.timeout.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置DRPC服务器内的DRPC请求超时时间。', '1', '80', null, '秒', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3083', 'storm', 'storm.yaml', '-Xmx768m', 'ui', 'input', 'drpc.childopts', '', '', '0', '', '', '', '0', '81', null, '', '0', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3084', 'storm', 'storm.yaml', '3774', 'ui', 'input', 'drpc.http.port', '', '', '0', '', '', '', '0', '82', null, '', '0', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3085', 'storm', 'storm.yaml', '-1', 'ui', 'input', 'drpc.https.port', '', '', '0', '', '', '', '0', '83', null, '', '0', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3086', 'storm', 'storm.yaml', '\"\"', 'ui', 'input', 'drpc.https.keystore.password', '', '', '0', '', '', '', '0', '84', null, '', '0', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3087', 'storm', 'storm.yaml', 'JKS', 'ui', 'input', 'drpc.https.keystore.type', '', '', '0', '', '', '', '0', '85', null, '', '0', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3088', 'storm', 'storm.yaml', 'org.apache.storm.security.auth.DefaultHttpCredentialsPlugin', 'ui', 'input', 'drpc.http.creds.plugin', '', '', '0', '', '', '', '0', '86', null, '', '0', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3089', 'storm', 'storm.yaml', 'drpc-auth-acl.yaml', 'ui', 'input', 'drpc.authorizer.acl.filename', '', '', '0', '', '', '', '0', '87', null, '', '0', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('309', 'kafka', 'server.properties', 'SunX509', 'proxy', 'input', 'ssl.keymanager.algorithm', '', '', '0', '', '', '', '0', '114', null, '', '0', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3090', 'storm', 'storm.yaml', 'false', 'ui', 'radio', 'drpc.authorizer.acl.strict', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '', '0', '88', null, '', '0', 'boolean', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3091', 'storm', 'storm.yaml', '/transactional', 'ui', 'input', 'transactional.zookeeper.root', '', '', '0', '', '', '', '0', '89', null, '', '0', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3092', 'storm', 'storm.yaml', 'null', 'ui', 'input', 'transactional.zookeeper.servers', '', '', '0', '', '', '', '0', '90', null, '', '0', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3093', 'storm', 'storm.yaml', 'null', 'ui', 'input', 'transactional.zookeeper.port', '', '', '0', '', '', '', '0', '91', null, '', '0', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3097', 'storm', 'storm.yaml', '10', 'blobstore', 'input', 'supervisor.localizer.cache.target.size.mb', '', '', '1024', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置分布式缓存目标大小。', '1', '95', null, 'Gb', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3098', 'storm', 'storm.yaml', '10', 'blobstore', 'input', 'supervisor.localizer.cleanup.interval.ms', '', '', '60000', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置分布式缓存清理间隔。', '1', '96', null, '分钟', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('31', 'kafka', 'server.properties', '1', 'proxy', 'input', 'num.replica.fetchers', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置leader进行备份消息的线程数。', '2', '57', null, '', '1', 'int', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('310', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'ssl.keystore.location', '', '', '0', '', '', '', '0', '115', null, '', '0', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3105', 'storm', 'storm.yaml', '-', 'supervisor', 'radio', 'supervisor.slots.ports', '', '', '0', 'true|false', '值必须是true或者false', '', '0', '103', null, '', '0', 'boolean', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3106', 'storm', 'storm.yaml', '-Xmx256m', 'supervisor', 'input', 'supervisor.childopts', '', '', '0', '^\\S*$', '不能为空', '设置storm-deploy中用来配置supervisor守护进程的jvm选项。', '0', '104', null, '', '1', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3107', 'storm', 'storm.yaml', 'false', 'supervisor', 'radio', 'supervisor.run.worker.as.user', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '设置是否应该尝试将worker作为激活用户来运行。', '1', '105', null, '', '1', 'boolean', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3108', 'storm', 'storm.yaml', '120', 'supervisor', 'input', 'supervisor.worker.start.timeout.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置·supervisor初始启动时,worker的心跳超时时间。', '1', '106', null, '秒', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3109', 'storm', 'storm.yaml', '30', 'supervisor', 'input', 'supervisor.worker.timeout.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置supervisor中的worker心跳超时时间。', '1', '107', null, '秒', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('311', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'ssl.keystore.password', '', '', '0', '', '', '', '0', '116', null, '', '0', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3110', 'storm', 'storm.yaml', '3', 'supervisor', 'input', 'supervisor.worker.shutdown.sleep.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置supervisor shutdown worker需要等待的时间。', '1', '108', null, '秒', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3111', 'storm', 'storm.yaml', '3', 'supervisor', 'input', 'supervisor.monitor.frequency.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置supervisor检查worker心跳的频率。', '1', '109', null, '秒', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3112', 'storm', 'storm.yaml', '5', 'supervisor', 'input', 'supervisor.heartbeat.frequency.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置supervisor心跳发送频率。', '1', '110', null, '秒', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3113', 'storm', 'storm.yaml', 'true', 'supervisor', 'radio', 'supervisor.enable', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '设置supervisor是否应当运行分配给他的workers。', '1', '111', null, '', '1', 'boolean', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3114', 'storm', 'storm.yaml', '[]', 'supervisor', 'input', 'supervisor.supervisors', '', '', '0', '^\\S*$', '不能为空', '', '0', '112', null, '', '1', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3115', 'storm', 'storm.yaml', '[]', 'supervisor', 'input', 'supervisor.supervisors.commands', '', '', '0', '^\\S*$', '不能为空', '', '0', '113', null, '', '1', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3119', 'storm', 'storm.yaml', '-Xmx%HEAP-MEM%m -XX:+PrintGCDetails -Xloggc:artifacts/gc.log -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=10 -XX:GCLogFileSize=1M -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=artifacts/heapdump', 'worker', 'input', 'worker.childopts', '', '', '0', '', '', '', '0', '117', null, '', '0', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('312', 'kafka', 'server.properties', 'JKS', 'proxy', 'input', 'ssl.keystore.type', '', '', '0', '', '', '', '0', '117', null, '', '0', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3120', 'storm', 'storm.yaml', '\"\"', 'worker', 'input', 'worker.gc.childopts', '', '', '0', '', '', '', '0', '118', null, '', '0', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3124', 'storm', 'storm.yaml', '1', 'worker', 'input', 'worker.heartbeat.frequency.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置worker的心跳发送时间间隔。', '1', '122', null, '秒', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3126', 'storm', 'storm.yaml', '1', 'worker', 'input', 'topology.worker.receiver.thread.count', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置每个worker设置的receiver线程个数。', '1', '124', null, '', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3127', 'storm', 'storm.yaml', '3', 'worker', 'input', 'task.heartbeat.frequency.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置task汇报状态心跳时间间隔。', '1', '125', null, '秒', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3128', 'storm', 'storm.yaml', '10', 'worker', 'input', 'task.refresh.poll.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置task与其他tasks之间链接同步的频率。', '1', '126', null, '秒', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3129', 'storm', 'storm.yaml', '30', 'worker', 'input', 'task.credentials.poll.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置最差情况下,任务应该同步一次证书的时间。', '1', '127', null, '秒', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('313', 'kafka', 'server.properties', 'TLS', 'proxy', 'input', 'ssl.protocol', '', '', '0', '', '', '', '0', '118', null, '', '0', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3134', 'storm', 'storm.yaml', '1', 'worker', 'input', 'zmq.threads', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置每个worker进程内zeromq通讯用到的线程数。', '1', '132', null, '', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3135', 'storm', 'storm.yaml', '5', 'worker', 'input', 'zmq.linger.millis', '', '', '1000', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置当连接关闭时,链接尝试重新发送消息到目标主机的持续时长。', '1', '133', null, '秒', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3136', 'storm', 'storm.yaml', '0', 'worker', 'input', 'zmq.hwm', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置zmq的指定网络通信设置高水平标记。', '1', '134', null, '', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3137', 'storm', 'storm.yaml', '1', 'worker', 'input', 'storm.messaging.netty.server_worker_threads', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置接收消息线程数。', '1', '135', null, '', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3138', 'storm', 'storm.yaml', '1', 'worker', 'input', 'storm.messaging.netty.client_worker_threads', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置发送消息线程的数量。', '1', '136', null, '', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3139', 'storm', 'storm.yaml', '5242880', 'worker', 'input', 'storm.messaging.netty.buffer_size', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置每次批量发送的Tuple序列化之后的Task Message消息大小。', '1', '137', null, '', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('314', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'ssl.provider', '', '', '0', '', '', '', '0', '119', null, '', '0', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3140', 'storm', 'storm.yaml', '300', 'worker', 'input', 'storm.messaging.netty.max_retries', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置netty buffer大小。', '1', '138', null, '', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3141', 'storm', 'storm.yaml', '1000', 'worker', 'input', 'storm.messaging.netty.max_wait_ms', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置对等体将等待的最大毫秒数(基于netty)。', '1', '139', null, '', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3142', 'storm', 'storm.yaml', '100', 'worker', 'input', 'storm.messaging.netty.min_wait_ms', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置对等体将等待的最小毫秒数(基于netty)。', '1', '140', null, '', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3143', 'storm', 'storm.yaml', '262144', 'worker', 'input', 'storm.messaging.netty.transfer.batch.size', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置每次Netty Client向Netty Server发送数据的大小。', '1', '141', null, '', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3144', 'storm', 'storm.yaml', '500', 'worker', 'input', 'storm.messaging.netty.socket.backlog', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置积压值以指定通道绑定到本地地址的时间(基于Netty消息传递)。', '1', '142', null, '', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3145', 'storm', 'storm.yaml', 'false', 'worker', 'radio', 'storm.messaging.netty.authentication', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '设置从客户端worker进程到服务器工作进程的Netty消息传递是否需要身份验证。', '1', '143', null, '', '1', 'boolean', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3147', 'storm', 'storm.yaml', '120', 'worker', 'input', 'storm.group.mapping.service.cache.duration.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置将缓存用户组秒数组映射服务的最大数量。', '1', '145', null, '秒', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3148', 'storm', 'storm.yaml', 'true', 'topology', 'radio', 'topology.enable.message.timeouts', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '设置是否保证数据完全处理。', '1', '146', null, '', '1', 'boolean', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3149', 'storm', 'storm.yaml', 'false', 'topology', 'radio', 'topology.debug', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '设置是否Storm将记录发射的每条信息。', '1', '147', null, '', '1', 'boolean', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('315', 'kafka', 'server.properties', 'PKIX', 'proxy', 'input', 'ssl.trustmanager.algorithm', '', '', '0', '', '', '', '0', '120', null, '', '0', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3150', 'storm', 'storm.yaml', '1', 'topology', 'input', 'topology.workers', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置执行该topology集群中应当启动的进程数量。', '1', '148', null, '', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3151', 'storm', 'storm.yaml', 'null', 'topology', 'input', 'topology.acker.executors', '', '', '0', '^\\S*$', '不能为空', '设置Acker进程个数。', '1', '149', null, '', '1', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3153', 'storm', 'storm.yaml', 'null', 'topology', 'input', 'topology.tasks', '', '', '0', '^\\S*$', '不能为空', '设置task数目。', '1', '151', null, '', '1', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3154', 'storm', 'storm.yaml', '30', 'topology', 'input', 'topology.message.timeout.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置在一个topology中能够允许的最大组件并行度。', '1', '152', null, '秒', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3155', 'storm', 'storm.yaml', 'org.apache.storm.multilang.JsonSerializer', 'topology', 'input', 'topology.multilang.serializer', '', '', '0', '^\\S*$', '不能为空', '设置用于shell组件和非JVM进程之间进行通信的序列化程序。', '0', '153', null, '', '1', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3157', 'storm', 'storm.yaml', 'false', 'topology', 'radio', 'topology.skip.missing.kryo.registrations', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '设置Storm是否应该跳过它不能识别的kryo序列化方案。', '1', '155', null, '', '1', 'boolean', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3158', 'storm', 'storm.yaml', 'null', 'topology', 'input', 'topology.max.task.parallelism', '', '', '0', '^\\S*$', '不能为空', '设置一个topology中能够允许的最大组件并行度。', '1', '156', null, '', '1', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3159', 'storm', 'storm.yaml', 'null', 'topology', 'input', 'topology.max.spout.pending', '', '', '0', '^\\S*$', '不能为空', '设置一个spout task中处于pending状态的最大的tuples数量。', '1', '157', null, '', '1', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('316', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'ssl.truststore.location', '', '', '0', '', '', '', '0', '121', null, '', '0', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3160', 'storm', 'storm.yaml', '60', 'topology', 'input', 'topology.state.synchronization.timeout.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置组件同步状态源的最大超时时间(保留选项,暂未使用)。', '1', '158', null, '秒', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3161', 'storm', 'storm.yaml', '0.05', 'topology', 'input', 'topology.stats.sample.rate', '', '', '0', '^\\S*$', '不能为空', '设置用来产生task统计信息的tuples抽样百分比。', '1', '159', null, '', '1', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3162', 'storm', 'storm.yaml', '60', 'topology', 'input', 'topology.builtin.metrics.bucket.size.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置Storm Worker进程的JVM参数。', '1', '160', null, '秒', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3163', 'storm', 'storm.yaml', 'true', 'topology', 'radio', 'topology.fall.back.on.java.serialization', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '设置topology中是否使用java的序列化方案。', '1', '161', null, '', '1', 'boolean', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3164', 'storm', 'storm.yaml', 'null', 'topology', 'input', 'topology.worker.childopts', '', '', '0', '^\\S*$', '不能为空', '设置worker子进程的拓扑特定选项。', '1', '162', null, '', '1', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3166', 'storm', 'storm.yaml', '1024', 'topology', 'input', 'topology.executor.receive.buffer.size', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置executor线程的接收队列大小(2 的倍数)。', '1', '164', null, '', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3167', 'storm', 'storm.yaml', '1024', 'topology', 'input', 'topology.executor.send.buffer.size', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置executor线程的发送队列大小(2 的倍数)。', '1', '165', null, '', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3168', 'storm', 'storm.yaml', '1024', 'topology', 'input', 'topology.transfer.buffer.size', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0，且是2的指数', '设置worker进程中向外发送消息的缓存大小。', '1', '166', null, '', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3169', 'storm', 'storm.yaml', 'null', 'topology', 'input', 'topology.tick.tuple.freq.secs', '', '', '1', '^\\S*$', '不能为空', '设置topology定时消息发送的频率。', '1', '167', null, '秒', '1', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('317', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'ssl.truststore.password', '', '', '0', '', '', '', '0', '122', null, '', '0', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3170', 'storm', 'storm.yaml', '4', 'topology', 'input', 'topology.worker.shared.thread.pool.size', '', '', '0', '', '', '', '0', '168', null, '', '0', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3171', 'storm', 'storm.yaml', 'org.apache.storm.spout.SleepSpoutWaitStrategy', 'topology', 'input', 'topology.spout.wait.strategy', '', '', '0', '', '', '', '0', '169', null, '', '0', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3172', 'storm', 'storm.yaml', '1', 'topology', 'input', 'topology.sleep.spout.wait.strategy.time.ms', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置SleepEmptyEmitStrategy应为其休眠的毫秒数。', '1', '170', null, '毫秒', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3173', 'storm', 'storm.yaml', '10', 'topology', 'input', 'topology.error.throttle.interval.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置用于确定是否限制报告给Zookeeper错误的时间间隔。', '1', '171', null, '秒', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3174', 'storm', 'storm.yaml', '5', 'topology', 'input', 'topology.max.error.report.per.interval', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置拓扑任务每个时间间隔的错误最大汇报数。', '1', '172', null, '', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3175', 'storm', 'storm.yaml', 'org.apache.storm.serialization.DefaultKryoFactory', 'topology', 'input', 'topology.kryo.factory', '', '', '0', '', '', '', '0', '173', null, '', '0', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3176', 'storm', 'storm.yaml', 'org.apache.storm.serialization.types.ListDelegateSerializer', 'topology', 'input', 'topology.tuple.serializer', '', '', '0', '', '', '', '0', '174', null, '', '0', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3177', 'storm', 'storm.yaml', '500', 'topology', 'input', 'topology.trident.batch.emit.interval.millis', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置Trident拓扑中可以发出批次的次数。', '1', '175', null, '毫秒', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3178', 'storm', 'storm.yaml', 'false', 'topology', 'radio', 'topology.testing.always.try.serialize', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '设置是否尝试序列化所有元组(即使是本地传输)。', '1', '176', null, '', '1', 'boolean', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3179', 'storm', 'storm.yaml', 'null', 'topology', 'input', 'topology.classpath', '', '', '0', '', '', '', '0', '177', null, '', '0', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('318', 'kafka', 'server.properties', 'JKS', 'proxy', 'input', 'ssl.truststore.type', '', '', '0', '', '', '', '0', '123', null, '', '0', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3180', 'storm', 'storm.yaml', 'null', 'topology', 'input', 'topology.environment', '', '', '0', '', '', '', '0', '178', null, '', '0', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3181', 'storm', 'storm.yaml', 'false', 'topology', 'radio', 'topology.bolts.outgoing.overflow.buffer.enable', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '', '0', '179', null, '', '0', 'boolean', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3182', 'storm', 'storm.yaml', '1', 'topology', 'input', 'topology.disruptor.wait.timeout.millis', '', '', '1000', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置cpu使用权衡时间。', '1', '180', null, '秒', '1', 'int', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3183', 'storm', 'storm.yaml', 'backtype.storm.security.auth.authorizer.ImpersonationAuthorizer', 'nimbus', 'input', 'nimbus.impersonation.authorizer', '', '', '0', '^\\S*$', '不能为空', '', '0', '153', null, '', '1', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3184', 'storm', 'storm.yaml', 'com.lmax.disruptor.BlockingWaitStrategy', 'topology', 'input', 'topology.disruptor.wait.strategy', '', '', '0', '^\\S*$', '不能为空', '', '0', '153', null, '', '1', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3185', 'storm', 'storm.yaml', 'true', 'topology', 'radio', 'nimbus.reassign', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '', '0', '155', null, '', '1', 'boolean', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('319', 'kafka', 'server.properties', '\"\"', 'proxy', 'input', 'authorizer.class.name', '', '', '0', '', '', '', '0', '124', null, '', '0', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3195', 'storm', 'storm.yaml', '/tmp/dev-storm-zookeeper', 'topology', 'input', 'dev.zookeeper.path', '', '', '0', '', '', '', '0', '193', null, '', '0', 'String', '0.10.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('32', 'kafka', 'server.properties', '4', 'proxy', 'input', 'offset.metadata.max.bytes', '', '', '1024', '^([1-9]\\d{0,17}|1000000000000000000)$', '输入值必须在1到1000000000000000000', '设置消费者保存元数据的最大的数据量。', '2', '58', null, 'Kb', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('320', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'ssl.endpoint.identification.algorithm', '', '', '0', '', '', '', '0', '125', null, '', '0', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('321', 'kafka', 'server.properties', '2', 'proxy', 'input', 'zookeeper.sync.time.ms', '', '', '1000', '', '', '', '0', '126', null, '秒', '0', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('322', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'broker.rack', '', '', '0', '', '', 'Rack of the broker. This will be used in rack aware replication assignment for fault tolerance. Examples: `RACK1`, `us-east-1d`', '0', '127', null, '', '0', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('323', 'kafka', 'server.properties', '0.10.0-IV1', 'proxy', 'input', 'log.message.format.version', '', '', '0', '', '', 'Specify the message format version the broker will use to append messages to the logs. The value should be a valid ApiVersion. Some examples are: 0.8.2, 0.9.0.0, 0.10.0, check ApiVersion for more details. By setting a particular message format version, the user is certifying that all the existing messages on disk are smaller or equal than the specified version. Setting this value incorrectly will cause consumers with older versions to break as they will receive messages with a format that they don\'t understand.', '0', '128', null, '', '0', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('324', 'kafka', 'server.properties', '9223372036854775807', 'proxy', 'input', 'log.message.timestamp.difference.max.ms', '', '', '1000', '^[1-9]|([1-9]d+)$', '输入必须大于0的整数', '设置接受消息时间戳与消息创建间戳的最大时间差。', '0', '129', null, '秒', '0', 'long', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('325', 'kafka', 'server.properties', 'CreateTime', 'proxy', 'radio', 'log.message.timestamp.type', '', '{\"CreateTime\":\"CreateTime\",\"LogAppendTime\":\"LogAppendTime\"}', '0', 'LogAppendTime|CreateTime', '必须输入LogAppendTime或者CreateTime', '设置日志消息的时间戳类型。', '2', '130', null, '', '1', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('326', 'kafka', 'server.properties', '[GSSAPI]', 'proxy', 'input', 'sasl.enabled.mechanisms', '', '', '0', '', '', 'The list of SASL mechanisms enabled in the Kafka server. The list may contain any mechanism for which a security provider is available. Only GSSAPI is enabled by default.', '0', '131', null, '', '0', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('327', 'kafka', 'server.properties', 'GSSAPI', 'proxy', 'input', 'sasl.mechanism.inter.broker.protocol', '', '', '0', '', '', 'SASL mechanism used for inter-broker communication. Default is GSSAPI.', '0', '132', null, '', '0', 'String', '2.11-0.10.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('328', 'kafka', 'server.properties', '', 'proxy', 'input', 'zookeeper.connect', '', '', '0', '', '', 'Zookeeper host string', '0', '13', null, '', '0', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('329', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'advertised.host.name', '', '', '0', '', '', 'Hostname to publish to ZooKeeper for clients to use. In IaaS environments, this may need to be different from the interface to which the broker binds. If this is not set, it will use the value for \"host.name\" if configured. Otherwise it will use the value returned from java.net.InetAddress.getCanonicalHostName().', '0', '14', null, '', '0', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('33', 'kafka', 'server.properties', '-1', 'proxy', 'input', 'offsets.commit.required.acks', '', '', '0', '^-1|([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间或者为-1', '设置消息提交进行确认的数目。', '2', '59', null, '', '1', 'int', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('330', 'kafka', 'server.properties', '10', 'proxy', 'input', 'leader.imbalance.per.broker.percentage', '', '', '0', '^(([1-9]\\d?)|100)$', '输入必须在1到100之间', '设置每个broker自动平衡百分比。', '2', '15', null, '', '1', 'int', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('331', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'listeners', '', '', '0', '', '', 'Listener List - Comma-separated list of URIs we will listen on and their protocols. Specify hostname as 0.0.0.0 to bind to all interfaces. Leave hostname empty to bind to default interface. Examples of legal listener lists: PLAINTEXT://myhost:9092,TRACE://:9091 PLAINTEXT://0.0.0.0:9092, TRACE://localhost:9093\n', '0', '16', null, '', '0', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('332', 'kafka', 'server.properties', '9223372036854775807', 'proxy', 'input', 'log.flush.interval.messages', '', '', '0', '^[1-9]|([1-9]d+)$', '输入必须大于0的整数', '设置日志进行持久化操作的消息记录数间隔。', '1', '8', null, '', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('333', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'log.flush.interval.ms', '', '', '1000', '^null|([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志进行持久化操作的时间间隔。', '1', '9', null, '秒', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('334', 'kafka', 'server.properties', '60', 'proxy', 'input', 'log.flush.offset.checkpoint.interval.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志刷新检测点的时间间隔。', '2', '17', null, '秒', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('335', 'kafka', 'server.properties', '9.223372036854776e15', 'proxy', 'input', 'log.flush.scheduler.interval.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置周期性持久操作的时间间隔。', '0', '18', null, '秒', '0', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('336', 'kafka', 'server.properties', '-1', 'proxy', 'input', 'log.retention.bytes', '', '', '1', '^-1|([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间或者为-1', '设置分区日志保留文件的大小，-1表示没有限制大小。', '1', '10', null, 'byte', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('337', 'kafka', 'server.properties', '168', 'proxy', 'input', 'log.retention.hours', '', '', '1', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志保存时间（单位：小时）。', '1', '11', null, '单位:小时', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('338', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'log.retention.minutes', '', '', '1', '^null|([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志保存时间（单位：分钟）。', '2', '19', null, '单位:分钟', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('339', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'log.retention.ms', '', '', '1000', '^null|([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志保存时间（单位：秒）。', '2', '20', null, '秒', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('34', 'kafka', 'server.properties', '5', 'proxy', 'input', 'offsets.commit.timeout.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置消息提交超时时间。', '2', '60', null, '秒', '1', 'int', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('340', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'advertised.listeners', '', '', '0', '', '', 'Listeners to publish to ZooKeeper for clients to use, if different than the listeners above. In IaaS environments, this may need to be different from the interface to which the broker binds. If this is not set, the value for \"listeners\" will be used.\n', '0', '21', null, '', '0', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('341', 'kafka', 'server.properties', '168', 'proxy', 'input', 'log.roll.hours', '', '', '1', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置新日志生成时间间隔（单位：小时），次于 log.roll.ms 属性。', '2', '22', null, '小时', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('342', 'kafka', 'server.properties', '0', 'proxy', 'input', 'log.roll.jitter.hours', '', '', '1', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志切分段的时间（单位：小时 )，次要 log.roll.jitter.ms 属性。', '2', '23', null, '单位:小时', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('343', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'log.roll.jitter.ms', '', '', '1000', '^null|([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志切分段的时间（单位：秒）。如果未设置该属性，则使用 log.roll.jitter.hours 的属性值。', '2', '24', null, '秒', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('344', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'log.roll.ms', '', '', '1000', '^null|([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置新日志生成时间间隔（单位：秒），如果未设置该属性，则使用 log.roll.hours 的属性值。', '2', '25', null, '秒', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('345', 'kafka', 'server.properties', '1024', 'proxy', 'input', 'log.segment.bytes', '', '', '1048576', '^([1-9]\\d{0,2})$|^([1]\\d{0,3}|2000)$', '输入值必须在1到2000', '设置日志段文件大小。', '2', '26', null, '单位:Mb', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('346', 'kafka', 'server.properties', '60', 'proxy', 'input', 'log.segment.delete.delay.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志段文件删除需要等待的时间。', '2', '27', null, '秒', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('347', 'kafka', 'server.properties', '1000012', 'proxy', 'input', 'message.max.bytes', '', '', '1', '^([1-9]\\d{0,17}|1000000000000000000)$', '输入值必须在1到1000000000000000000', '设置消息的最大数据大小，且不要大于fetch.message.max.bytes属性的值。', '2', '28', null, 'byte', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('348', 'kafka', 'server.properties', '1', 'proxy', 'input', 'min.insync.replicas', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置副本同步最小数量。', '2', '29', null, '', '1', 'int', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('349', 'kafka', 'server.properties', '8', 'proxy', 'input', 'num.io.threads', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置服务器用来处理请求的I/O线程的数目。', '1', '1', null, '', '1', 'int', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('35', 'kafka', 'server.properties', '5', 'proxy', 'input', 'offsets.load.buffer.size', '', '', '1048576', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置读取消息的缓存大小。', '2', '61', null, 'Mb', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('350', 'kafka', 'server.properties', '3', 'proxy', 'input', 'num.network.threads', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置服务器用来处理网络请求的网络线程数目。', '1', '2', null, '', '1', 'int', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3500', 'mysql', 'my.cnf', 'off', 'mysqld', 'radio', 'federated', '开启federated引擎', '{\"开启\":\"on\",\"不开启\":\"off\"}', '0', 'NULL', 'NULL', 'NULL', '2', '999', 'NULL', 'NULL', '1', 'String', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3501', 'mysql', 'my.cnf', 'off', 'mysqld', 'radio', 'federated', '开启federated引擎', '{\"开启\":\"on\",\"不开启\":\"off\"}', '0', 'NULL', 'NULL', 'NULL', '2', '1000', 'NULL', 'NULL', '1', 'String', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3502', 'mysql', 'my.cnf', 'off', 'mysqld', 'radio', 'federated', '开启federated引擎', '{\"开启\":\"on\",\"不开启\":\"off\"}', '0', 'NULL', 'NULL', 'NULL', '2', '1001', 'NULL', 'NULL', '1', 'String', '8.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3503', 'mysql', 'my.cnf', 'on', 'mysqld', 'radio', 'slow_query_log', '开启慢查询日志', '{\"开启\":\"on\",\"不开启\":\"off\"}', '0', 'NULL', 'NULL', 'NULL', '2', '1001', 'NULL', 'NULL', '1', 'String', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3504', 'mysql', 'my.cnf', 'on', 'mysqld', 'radio', 'log_queries_not_using_indexes', '将未引用索引的查询记入慢查询日志中', '{\"开启\":\"on\",\"不开启\":\"off\"}', '0', 'NULL', 'NULL', 'NULL', '2', '1003', 'NULL', 'NULL', '1', 'String', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3505', 'mysql', 'my.cnf', 'on', 'mysqld', 'radio', 'log_slow_admin_statements', '将慢管理语句等记入慢查询日志', '{\"开启\":\"on\",\"不开启\":\"off\"}', '0', 'NULL', 'NULL', 'NULL', '2', '1004', 'NULL', 'NULL', '1', 'String', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3506', 'mysql', 'my.cnf', '10', 'mysqld', 'text', 'long_query_time', '慢查询阈值，当查询时间多于设定的阈值时，记录日志', 'NULL', '0', '^(0|[1-9]\\d*)$', '请输入大于等于0的整数', '请输入大于等于0的整数', '2', '1002', 'NULL', 'NULL', '1', 'int', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3507', 'mysql', 'my.cnf', 'on', 'mysqld', 'radio', 'slow_query_log', '开启慢查询日志', '{\"开启\":\"on\",\"不开启\":\"off\"}', '0', 'NULL', 'NULL', 'NULL', '2', '1001', 'NULL', 'NULL', '1', 'String', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3508', 'mysql', 'my.cnf', 'on', 'mysqld', 'radio', 'log_queries_not_using_indexes', '将未引用索引的查询记入慢查询日志中', '{\"开启\":\"on\",\"不开启\":\"off\"}', '0', 'NULL', 'NULL', 'NULL', '2', '1003', 'NULL', 'NULL', '1', 'String', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3509', 'mysql', 'my.cnf', 'on', 'mysqld', 'radio', 'log_slow_admin_statements', '将慢管理语句等记入慢查询日志', '{\"开启\":\"on\",\"不开启\":\"off\"}', '0', 'NULL', 'NULL', 'NULL', '2', '1004', 'NULL', 'NULL', '1', 'String', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('351', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'advertised.port', '', '', '0', '', '', 'The port to publish to ZooKeeper for clients to use. In IaaS environments, this may need to be different from the port to which the broker binds. If this is not set, it will publish the same port that the broker binds to.\n', '0', '30', null, '', '0', 'int', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3510', 'mysql', 'my.cnf', '10', 'mysqld', 'text', 'long_query_time', '慢查询阈值，当查询时间多于设定的阈值时，记录日志', 'NULL', '0', '^(0|[1-9]\\d*)$', '请输入大于等于0的整数', '请输入大于等于0的整数', '2', '1002', 'NULL', 'NULL', '1', 'int', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3511', 'mysql', 'my.cnf', 'on', 'mysqld', 'radio', 'slow_query_log', '开启慢查询日志', '{\"开启\":\"on\",\"不开启\":\"off\"}', '0', 'NULL', 'NULL', 'NULL', '2', '1001', 'NULL', 'NULL', '1', 'String', '8.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3512', 'mysql', 'my.cnf', 'on', 'mysqld', 'radio', 'log_queries_not_using_indexes', '将未引用索引的查询记入慢查询日志中', '{\"开启\":\"on\",\"不开启\":\"off\"}', '0', 'NULL', 'NULL', 'NULL', '2', '1003', 'NULL', 'NULL', '1', 'String', '8.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3513', 'mysql', 'my.cnf', 'on', 'mysqld', 'radio', 'log_slow_admin_statements', '将慢管理语句等记入慢查询日志', '{\"开启\":\"on\",\"不开启\":\"off\"}', '0', 'NULL', 'NULL', 'NULL', '2', '1004', 'NULL', 'NULL', '1', 'String', '8.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('3514', 'mysql', 'my.cnf', '10', 'mysqld', 'text', 'long_query_time', '慢查询阈值，当查询时间多于设定的阈值时，记录日志', 'NULL', '0', '^(0|[1-9]\\d*)$', '请输入大于等于0的整数', '请输入大于等于0的整数', '2', '1002', 'NULL', 'NULL', '1', 'int', '8.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('352', 'kafka', 'server.properties', '1', 'proxy', 'input', 'num.recovery.threads.per.data.dir', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置每个数据目录用于日志恢复启动和关闭冲洗时的线程数量。', '1', '3', null, '', '1', 'int', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('353', 'kafka', 'server.properties', '1', 'proxy', 'input', 'num.replica.fetchers', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置leader进行备份消息的线程数。', '2', '31', null, '', '1', 'int', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('354', 'kafka', 'server.properties', '4', 'proxy', 'input', 'offset.metadata.max.bytes', '', '', '1024', '^([1-9]\\d{0,17}|1000000000000000000)$', '输入值必须在1到1000000000000000000', '设置消费者保存元数据的最大的数据量。', '2', '32', null, '单位:Kb', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('355', 'kafka', 'server.properties', '-1', 'proxy', 'input', 'offsets.commit.required.acks', '', '', '0', '^-1|([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间或者为-1', '设置消息提交进行确认的数目。', '2', '33', null, '', '1', 'int', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('356', 'kafka', 'server.properties', '5', 'proxy', 'input', 'offsets.commit.timeout.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置消息提交超时时间。', '2', '34', null, '秒', '1', 'int', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('357', 'kafka', 'server.properties', '5', 'proxy', 'input', 'offsets.load.buffer.size', '', '', '1048576', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置读取消息的缓存大小。', '2', '35', null, '单位:Mb', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('358', 'kafka', 'server.properties', '600', 'proxy', 'input', 'offsets.retention.check.interval.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置消息保留检测的间隔时间。', '2', '36', null, '秒', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('359', 'kafka', 'server.properties', '24', 'proxy', 'input', 'offsets.retention.minutes', '', '', '60', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置消息的保留时间。', '2', '37', null, '单位:小时', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('36', 'kafka', 'server.properties', '600', 'proxy', 'input', 'offsets.retention.check.interval.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置消息保留检测的间隔时间。', '2', '62', null, '秒', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('360', 'kafka', 'server.properties', '0', 'proxy', 'radio', 'offsets.topic.compression.codec', '', '{\"0\":\"0\",\"1\":\"1\",\"2\":\"2\"}', '0', '', '', '设置消息的压缩格式。0表示不压缩，1表示用gzip压缩，2表示用snappy压缩。', '2', '38', null, '', '1', 'int', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('361', 'kafka', 'server.properties', '50', 'proxy', 'input', 'offsets.topic.num.partitions', '', '', '0', '', '', 'The number of partitions for the offset commit topic (should not change after deployment)\n', '0', '39', null, '', '0', 'int', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('362', 'kafka', 'server.properties', 'true', 'proxy', 'radio', 'auto.create.topics.enable', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', '', '', 'Enable auto creation of topic on the server', '0', '40', null, '', '0', 'boolean', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('363', 'kafka', 'server.properties', '3', 'proxy', 'input', 'offsets.topic.replication.factor', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置话题消息备份个数。如果broker比复制因子少，该备份因子将以较少的副本创建。', '2', '41', null, '', '1', 'int', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('364', 'kafka', 'server.properties', '100', 'proxy', 'input', 'offsets.topic.segment.bytes', '', '', '1048576', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置话题消息段文件大小。', '2', '42', null, '单位:Mb', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('365', 'kafka', 'server.properties', '9092', 'proxy', 'input', 'port', '', '', '0', '', '', ' the port to listen and accept connections on', '0', '43', null, '', '0', 'int', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('366', 'kafka', 'server.properties', '500', 'proxy', 'input', 'queued.max.requests', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置请求队列大小。', '2', '44', null, '', '1', 'int', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('367', 'kafka', 'server.properties', '9223372036854775807', 'proxy', 'input', 'quota.consumer.default', '', '', '0', '^[1-9]|([1-9]d+)$', '输入必须大于0的整数', '设置每秒消费数据受限大小，仅仅在未配置动态配额属性时使用。', '2', '45', null, '', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('368', 'kafka', 'server.properties', '9223372036854775807', 'proxy', 'input', 'quota.producer.default', '', '', '0', '^[1-9]|([1-9]d+)$', '输入必须大于0的整数', '设置每秒生产数据受限大小，仅仅在未配置动态配额属性时使用。', '2', '46', null, '', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('369', 'kafka', 'server.properties', '1', 'proxy', 'input', 'replica.fetch.max.bytes', '', '', '1048576', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置数据备份每次获取数据大小的最大值。', '2', '47', null, '单位:Mb', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('37', 'kafka', 'server.properties', '24', 'proxy', 'input', 'offsets.retention.minutes', '', '', '60', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置消息的保留时间。', '2', '63', null, '小时', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('370', 'kafka', 'server.properties', '1', 'proxy', 'input', 'replica.fetch.min.bytes', '', '', '0', '^([1-9]\\d{0,17}|1000000000000000000)$', '输入值必须在1到1000000000000000000', '设置数据备份每次获取数据大小的最小值,如果leader中尚未同步的数据不足此值,将会阻塞,直到满足条件。', '2', '48', null, 'byte', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('371', 'kafka', 'server.properties', '500', 'proxy', 'input', 'replica.fetch.wait.max.ms', '', '', '1', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置数据备份获取数据的最大等待时间。', '2', '49', null, '单位:毫秒', '1', 'int', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('372', 'kafka', 'server.properties', '5', 'proxy', 'input', 'replica.high.watermark.checkpoint.interval.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置每个备份将最高水位进行持久的间隔时间。', '2', '50', null, '秒', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('373', 'kafka', 'server.properties', 'true', 'proxy', 'radio', 'auto.leader.rebalance.enable', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', '', '', '设置自动leader平衡功能。true表示启用，false不是不启用。', '2', '51', null, '', '1', 'boolean', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('374', 'kafka', 'server.properties', '10', 'proxy', 'input', 'replica.lag.time.max.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置备份响应leader最长等待时间。', '2', '52', null, '秒', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('375', 'kafka', 'server.properties', '64', 'proxy', 'input', 'replica.socket.receive.buffer.bytes', '', '', '1024', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置备份接受请求的缓存大小。', '2', '53', null, '单位:Kb', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('376', 'kafka', 'server.properties', '30', 'proxy', 'input', 'replica.socket.timeout.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置备份网络超时时间，至少等于replica.fetch.wait.max.ms属性值。', '2', '54', null, '秒', '1', 'int', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('377', 'kafka', 'server.properties', '30', 'proxy', 'input', 'request.timeout.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置等待请求响应的超时时间。', '2', '55', null, '秒', '1', 'int', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('378', 'kafka', 'server.properties', '100', 'proxy', 'input', 'socket.receive.buffer.bytes', '', '', '1024', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置接受数据缓冲区大小。', '1', '4', null, '单位:Kb', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('379', 'kafka', 'server.properties', '100', 'proxy', 'input', 'socket.request.max.bytes', '', '', '1048576', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置接受请求数据的最大大小，这是为了防止server跑光内存，不能大于Java堆的大小。', '1', '5', null, '单位:Mb', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('38', 'kafka', 'server.properties', '0', 'proxy', 'radio', 'offsets.topic.compression.codec', '', '{\"0\":\"0\",\"1\":\"1\",\"2\":\"2\"}', '0', '', '', '设置消息的压缩格式。0表示不压缩，1表示用gzip压缩，2表示用snappy压缩。', '2', '64', null, '', '1', 'int', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('380', 'kafka', 'server.properties', '100', 'proxy', 'input', 'socket.send.buffer.bytes', '', '', '1024', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置服务端发送数据的缓冲区大小。', '1', '6', null, '单位:Kb', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('381', 'kafka', 'server.properties', 'true', 'proxy', 'radio', 'unclean.leader.election.enable', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', '', '', '设置开启在副本中选举leader, true表示开启，false表示不开启。', '2', '56', null, '', '1', 'boolean', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('382', 'kafka', 'server.properties', 'true', 'proxy', 'radio', 'broker.id.generation.enable', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', '', '', 'Enable automatic broker id generation on the server? When enabled the value configured for reserved.broker.max.id should be reviewed.\n', '0', '57', null, '', '0', 'boolean', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('383', 'kafka', 'server.properties', '600', 'proxy', 'input', 'connections.max.idle.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置连接空闲的超时时间。', '2', '58', null, '秒', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('384', 'kafka', 'server.properties', '10', 'proxy', 'input', 'background.threads', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置后台任务处理的线程数。', '2', '59', null, '', '1', 'int', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('385', 'kafka', 'server.properties', 'true', 'proxy', 'radio', 'controlled.shutdown.enable', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', '', '', 'Enable controlled shutdown of the server', '0', '60', null, '', '0', 'boolean', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('386', 'kafka', 'server.properties', '3', 'proxy', 'input', 'controlled.shutdown.max.retries', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置控制关闭任务的最大重试次数。', '2', '61', null, '', '1', 'int', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('387', 'kafka', 'server.properties', '5', 'proxy', 'input', 'controlled.shutdown.retry.backoff.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置控制关闭任务失败重试的等待时间。', '2', '62', null, '秒', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('388', 'kafka', 'server.properties', '30', 'proxy', 'input', 'controller.socket.timeout.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置broker控制的网络超时时间。', '2', '63', null, '秒', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('389', 'kafka', 'server.properties', '1', 'proxy', 'input', 'default.replication.factor', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置分区默认的分区备份个数，不能大于集群中broker的个数。', '2', '64', null, '', '1', 'int', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('39', 'kafka', 'server.properties', '50', 'proxy', 'input', 'offsets.topic.num.partitions', '', '', '0', '', '', 'The number of partitions for the offset commit topic (should not change after deployment)\n', '0', '65', null, '', '0', 'int', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('390', 'kafka', 'server.properties', '1000', 'proxy', 'input', 'fetch.purgatory.purge.interval.requests', '', '', '1', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置清除consumer历史获取request记录间隔时间。', '2', '65', null, '单位:毫秒', '1', 'int', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('391', 'kafka', 'server.properties', '30', 'proxy', 'input', 'group.max.session.timeout.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置consumer允许的最大超时时间。', '2', '66', null, '秒', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('392', 'kafka', 'server.properties', '6', 'proxy', 'input', 'group.min.session.timeout.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置consumer允许的最小超时时间。', '2', '67', null, '秒', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('393', 'kafka', 'server.properties', '0.9.0.X', 'proxy', 'input', 'inter.broker.protocol.version', '', '', '0', '', '', 'Specify which version of the inter-broker protocol will be used. This is typically bumped after all brokers were upgraded to a new version\n', '0', '68', null, '', '0', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('394', 'kafka', 'server.properties', '15', 'proxy', 'input', 'log.cleaner.backoff.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志清理需要等待的时间。', '2', '69', null, '秒', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('395', 'kafka', 'server.properties', 'producer', 'proxy', 'select', 'compression.type', '', '{\"producer\":\"producer\",\"uncompressed\":\"uncompressed\"}', '0', '', '', ' Specify the final compression type for a given topic. This configuration accepts the standard compression codecs (\'gzip\', \'snappy\', lz4). It additionally accepts \'uncompressed\' which is equivalent to no compression; and \'producer\' which means retain the original compression codec set by the producer.', '0', '70', null, '', '0', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('396', 'kafka', 'server.properties', '134217728', 'proxy', 'input', 'log.cleaner.dedupe.buffer.size', '', '', '0', '', '', 'The total memory used for log deduplication across all cleaner threads\n', '0', '71', null, '', '0', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('397', 'kafka', 'server.properties', '24', 'proxy', 'input', 'log.cleaner.delete.retention.ms', '', '', '3600000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置保存压缩日志的最长时间。', '2', '72', null, '单位:小时', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('398', 'kafka', 'server.properties', 'true', 'proxy', 'radio', 'log.cleaner.enable', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', '', '', '设置开启日志压缩功能。设置true表示开启日志压缩,否则不压缩。', '2', '73', null, '', '1', 'boolean', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('399', 'kafka', 'server.properties', '0.9', 'proxy', 'input', 'log.cleaner.io.buffer.load.factor', '', '', '0', '^\\S*$', '输入不能为空', '设置日志清理io缓冲区hash表增长因子。', '2', '74', null, '', '1', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4', 'kafka', 'server.properties', 'true', 'proxy', 'radio', 'auto.create.topics.enable', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', '', '', 'Enable auto creation of topic on the server', '0', '66', null, '', '0', 'boolean', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('40', 'kafka', 'server.properties', '3', 'proxy', 'input', 'offsets.topic.replication.factor', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置话题消息备份个数。如果broker比复制因子少，该备份因子将以较少的副本创建。', '2', '67', null, '', '1', 'int', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('400', 'kafka', 'server.properties', '512', 'proxy', 'input', 'log.cleaner.io.buffer.size', '', '', '1024', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志清理io缓冲区大小。', '2', '75', null, '单位:Kb', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4000', 'mysql', 'my.cnf', '32', 'mysqld', 'text', 'binlog_cache_size', '开启log-bin时，为每个客户端分配的二进制日志缓存大小', 'NULL', '1', '^([1-9]\\d{0,12}|1[0-6]\\d{0,12}|17[0-4]\\d{0,11}|175[0-8]\\d{0,10}|1759[0-1]\\d{0,9}|17592000000000)$', '请输入1到17592000000000之间的整数', '请输入1到17592000000000之间的整数', '1', '9', 'K', 'K', '1', 'int', '8.0 ');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4001', 'mysql', 'my.cnf', '16', 'mysqld', 'text', 'innodb_log_buffer_size', '缓冲日志数据的缓冲区的大小', 'NULL', '1', '^([1-9]|[1-9]\\d{1,2}|[1-3]\\d{3}|40[0-8]\\d|409[0-6])$', '请输入1到4096之间的整数', '请输入1到4096之间的整数', '2', '36', 'M', 'M', '1', 'int', '8.0 ');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4002', 'mysql', 'my.cnf', '48', 'mysqld', 'text', 'innodb_log_file_size', '日志组中每个日志文件的大小', 'NULL', '1', '^([4-9]|[1-9]\\d+)$', '请输入4到262144之间的整数', '请输入4到262144之间的整数', '2', '35', 'M', 'M', '1', 'int', '8.0 ');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4003', 'mysql', 'my.cnf', '2', 'mysqld', 'text', 'innodb_log_files_in_group', '日志组文件个数', 'NULL', '0', '^[2-9]$|^[1-9]\\d$|^100$', '请输入2到100之间的整数', '请输入2到100之间的整数', '1', '11', 'NULL', 'NULL', '1', 'int', '8.0 ');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4004', 'mysql', 'my.cnf', '50', 'mysqld', 'text', 'innodb_lock_wait_timeout', 'innodb行锁锁定等待超时', 'NULL', '1', '^([1-9]\\d{0,8}|10[0-6]\\d{0,7}|107[0-2]\\d{0,6}|1073[0-6]\\d{0,5}|1073700000)$', '请输入1到1073700000之间的整数', '请输入1到1073700000之间的整数', '2', '29', 'NULL', '秒', '1', 'int', '8.0 ');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4005', 'mysql', 'my.cnf', '100', 'mysqld', 'text', 'max_connect_errors', '每个客户端连接最大的错误允许数量', 'NULL', '1', '^([1-9]\\d{0,12}|1[0-6]\\d{0,12}|17[0-4]\\d{0,11}|175[0-8]\\d{0,10}|1759[0-1]\\d{0,9}|17592000000000)$', '请输入1到17592000000000之间的整数', '请输入1到17592000000000之间的整数', '2', '30', 'NULL', 'B', '1', 'int', '8.0 ');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4006', 'mysql', 'my.cnf', 'InnoDB', 'mysqld', 'radio', 'default_tmp_storage_engine', '临时表的默认存储引擎', '{\"InnoDB\":\"InnoDB\",\"MyISAM\":\"MyISAM\",\"MRG_MYISAM\":\"MRG_MYISAM\",\"MEMORY\":\"MEMORY\",\"BLACKHOLE\":\"BLACKHOLE\",\"CSV\":\"CSV\",\"ARCHIVE\":\"ARCHIVE\",\"PERFORMANCE_SCHEMA\":\"PERFORMANCE_SCHEMA\"}', '0', 'NULL', 'NULL', 'NULL', '2', '15', 'NULL', 'NULL', '1', 'String', '8.0 ');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4007', 'mysql', 'my.cnf', 'InnoDB', 'mysqld', 'radio', 'default_storage_engine', '永久表的默认存储引擎', '{\"InnoDB\":\"InnoDB\",\"MyISAM\":\"MyISAM\",\"MRG_MYISAM\":\"MRG_MYISAM\",\"MEMORY\":\"MEMORY\",\"BLACKHOLE\":\"BLACKHOLE\",\"CSV\":\"CSV\",\"ARCHIVE\":\"ARCHIVE\",\"PERFORMANCE_SCHEMA\":\"PERFORMANCE_SCHEMA\"}', '0', 'NULL', 'NULL', 'NULL', '2', '16', 'NULL', 'NULL', '1', 'String', '8.0 ');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4008', 'mysql', 'my.cnf', 'binary', 'mysqld', 'text', 'character_set_filesystem', '数据库文件系统字符集', 'NULL', '0', '[^\\0]+', '可在MySQL官网查看支持哪些字符集', '可在MySQL官网查看支持哪些字符集', '0', '32', 'NULL', 'NULL', '1', 'String', '8.0 ');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4009', 'mysql', 'my.cnf', 'ROW', 'mysqld', 'radio', 'binlog_format', 'MySQL的复制方式', '{\"ROW\":\"ROW\",\"STATEMENT\":\"STATEMENT\",\"MIXED\":\"MIXED\"}', '0', 'NULL', 'NULL', 'NULL', '1', '4', 'NULL', 'NULL', '1', 'String', '8.0 ');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('401', 'kafka', 'server.properties', '1.7976931348623157E308', 'proxy', 'input', 'log.cleaner.io.max.bytes.per.second', '', '', '0', '^([1-9]\\d{0,17}|1000000000000000000)$', '输入值必须在1到1000000000000000000', '设置每秒日志清理数据受限大小。', '0', '76', null, '', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4010', 'mysql', 'my.cnf', 'utf8mb4_unicode_ci', 'mysqld', 'text', 'collation-server', '服务器默认排序规则', 'NULL', '0', '[^\\0]+', '可在MySQL官网查看支持哪些字符集', '可在MySQL官网查看支持哪些字符集', '0', '13', 'NULL', 'NULL', '1', 'String', '8.0 ');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4011', 'mysql', 'my.cnf', 'utf8mb4', 'client', 'text', 'default-character-set', 'MySQL数据库默认字符集', 'NULL', '0', '[^\\0]+', '可在MySQL官网查看支持哪些字符集', '可在MySQL官网查看支持哪些字符集', '0', '14', 'NULL', 'NULL', '1', 'String', '8.0 ');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4012', 'mysql', 'my.cnf', '-1', 'mysqld', 'text', 'thread_cache_size', '线程缓存区大小', 'NULL', '1', '^(-1|0|[1-9]\\d{0,3}|1[0-5]\\d{1,3}|16[0-2]\\d{0,2}|163[0-7]\\d|1638[0-4])$', '请输入-1到16384的整数', '请输入-1到16384的整数', '1', '7', 'NULL', 'B', '1', 'int', '8.0 ');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4014', 'mysql', 'my.cnf', '16', 'mysqld', 'text', 'tmp_table_size', '临时表使用缓冲区大小', 'NULL', '1', '^([1-9]\\d{0,12}|1[0-6]\\d{0,12}|17[0-4]\\d{0,11}|175[0-8]\\d{0,10}|1759[0-1]\\d{0,9}|17592000000000)$', '请输入1到17592000000000之间的整数', '请输入1到17592000000000之间的整数', '2', '24', 'M', 'M', '1', 'int', '8.0 ');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4015', 'mysql', 'my.cnf', '1', 'mysqld', 'text', 'sort_buffer_size', '排序使用的缓冲区大小', 'NULL', '1', '^([1-9]\\d{0,12}|1[0-6]\\d{0,12}|17[0-4]\\d{0,11}|175[0-8]\\d{0,10}|1759[0-1]\\d{0,9}|17592000000000)$', '请输入1到17592000000000之间的整数', '请输入1到17592000000000之间的整数', '2', '22', 'M', 'M', '1', 'int', '8.0 ');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4016', 'mysql', 'my.cnf', '1', 'mysqld', 'text', 'read_buffer_size', '读入缓冲区', 'NULL', '1', '^([1-9]|[1-9]\\d{1,2}|1\\d{3}|20[0-3]\\d|204[0-7])$', '请输入1到2047之间的整数', '请输入1到2047之间的整数', '2', '21', 'M', 'M', '1', 'int', '8.0 ');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4017', 'mysql', 'my.cnf', '1', 'mysqld', 'text', 'join_buffer_size', '表关联使用的缓冲区大小', 'NULL', '1', '^([1-9]\\d{0,12}|1[0-6]\\d{0,12}|17[0-4]\\d{0,11}|175[0-8]\\d{0,10}|1759[0-1]\\d{0,9}|17592000000000)$', '请输入1到17592000000000之间的整数', '请输入1到17592000000000之间的整数', '2', '23', 'M', 'M', '1', 'int', '8.0 ');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4018', 'mysql', 'my.cnf', '1024', 'mysqld', 'text', 'max_connections', '最大连接数', 'NULL', '0', '^(?:(?!0{1,5})\\d{1,5}|10{5})$', '请输入1到100000之间的整数', '请输入1到100000之间的整数', '1', '1', 'NULL', 'NULL', '1', 'int', '8.0 ');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4019', 'mysql', 'my.cnf', '2', 'mysqld', 'text', 'table_open_cache', '所有线程打开表的数量', 'NULL', '1', '^([1-9][\\d]{0,1}|[1-4]\\d{2}|50\\d|51[0-2])$', '请输入1到512之间的整数', '请输入1到512之间的整数', '2', '25', 'K', 'K', '1', 'int', '8.0 ');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('402', 'kafka', 'server.properties', '0.5', 'proxy', 'input', 'log.cleaner.min.cleanable.ratio', '', '', '0', '^\\S*$', '输入不能为空', '设置日志清理最小可清理的百分比。', '2', '77', null, '', '1', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4020', 'mysql', 'my.cnf', '128', 'mysqld', 'text', 'innodb_buffer_pool_size', '缓冲池字节大小', 'NULL', '1', '^([5-9]|[1-9]\\d{1,12}|1[0-6]\\d{0,12}|17[0-4]\\d{0,11}|175[0-8]\\d{0,10}|1759[0-1]\\d{0,9}|17592000000000)$', '请输入5到17592000000000之间的整数', '请输入5到17592000000000之间的整数', '1', '6', 'M', 'M', '1', 'int', '8.0 ');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4021', 'mysql', 'my.cnf', '1', 'mysqld', 'text', 'innodb_buffer_pool_instances', 'InnoDB缓冲池划分的区域数量', 'NULL', '0', '^([1-9]|[1-5][0-9]|6[0-4])$', '请输入1到64之间的整数', '请输入1到64之间的整数', '2', '26', 'NULL', 'NULL', '1', 'int', '8.0 ');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4022', 'mysql', 'my.cnf', 'REPEATABLE-READ', 'mysqld', 'radio', 'transaction-isolation', '事物隔离级别', '{\"READ-UNCOMMITTED\":\"READ-UNCOMMITTED\",\"READ-COMMITTED\":\"READ-COMMITTED\",\"REPEATABLE-READ\":\"REPEATABLE-READ\",\"SERIALIZABLE\":\"SERIALIZABLE\"}', '0', 'NULL', 'NULL', 'NULL', '1', '3', 'NULL', 'NULL', '1', 'String', '8.0 ');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4023', 'mysql', 'my.cnf', '75', 'mysqld', 'text', 'innodb_max_dirty_pages_pct', '脏页百分比', 'NULL', '0', '^([0-9]|[0-9]\\.\\d+|[1-9]\\d|[1-9]\\d\\.\\d+)$', '请输入1到99.99之间的数字', '请输入1到99.99之间的数字', '2', '20', 'NULL', 'NULL', '1', 'long', '8.0 ');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4024', 'mysql', 'my.cnf', '1', 'mysqld', 'radio', 'lower_case_table_names', '是否区分大小写', '{\"0\":0,\"1\":1,\"2\":2}', '0', 'NULL', 'NULL', 'NULL', '0', '2', 'NULL', 'NULL', '1', 'int', '8.0 ');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4025', 'mysql', 'my.cnf', 'ON', 'mysqld', 'radio', 'innodb_file_per_table', '是否使用独立表空间', '{\"使用\":\"ON\",\"不使用\":\"OFF\"}', '0', 'NULL', 'NULL', 'NULL', '2', '5', 'NULL', 'NULL', '1', 'String', '8.0 ');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4026', 'mysql', 'my.cnf', '-1', 'mysqld', 'text', 'innodb_open_files', '限制Innodb能打开的表数据', 'NULL', '0', '^([1-9]\\d{1,8}|[1-3]\\d{0,9}|4[0-1]\\d{0,8}|42[0-8]\\d{0,7}|429[0-3]\\d{0,6}|4294[0-8]\\d{0,5}|4294900000|-1)$', '请输入-1或者10到4294900000之间的整数', '请输入-1或者10到4294900000之间的整数', '2', '27', 'NULL', 'NULL', '1', 'int', '8.0 ');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4027', 'mysql', 'my.cnf', '0', 'mysqld', 'text', 'innodb_thread_concurrency', '并发数', 'NULL', '0', '^(?:(?!0{1,3})\\d{1,3}|10{3}|0)$', '请输入0到1000之间的整数', '请输入0到1000之间的整数', '2', '18', 'NULL', 'NULL', '1', 'int', '8.0 ');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4028', 'mysql', 'my.cnf', '1', 'mysqld', 'radio', 'innodb_flush_log_at_trx_commit', '磁盘写入策略', '{\"0\":0,\"1\":1,\"2\":2}', '0', 'NULL', 'NULL', 'NULL', '2', '17', 'NULL', 'NULL', '1', 'int', '8.0 ');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4029', 'mysql', 'my.cnf', '4', 'mysqld', 'text', 'max_allowed_packet', '服务接受的数据包大小', 'NULL', '1', '^([1-9]|[1-9]\\d{0,2}|10[0-1]\\d|102[0-4])$', '请输入1到1024之间的整数', '请输入1到1024之间的整数', '2', '28', 'M', 'M', '1', 'int', '8.0 ');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('403', 'kafka', 'server.properties', '1', 'proxy', 'input', 'log.cleaner.threads', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置日志压缩运行的线程数。', '2', '78', null, '', '1', 'int', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4030', 'mysql', 'my.cnf', '480', 'mysqld', 'text', 'interactive_timeout', 'MySQL连接的最大空闲时间(交互式连接)', 'NULL', '60', '^\\+?[1-9]\\d*$', '请输入大于1的整数', '请输入大于1的整数', '2', '32', 'NULL', '分钟', '1', 'int', '8.0 ');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4031', 'mysql', 'my.cnf', '480', 'mysqld', 'text', 'wait_timeout', 'MySQL连接的最大空闲时间(非交互式连接)', 'NULL', '60', '^([1-9]\\d{0,4}|[1-4]\\d{5}|5[0-1]\\d{4}|52[0-4]\\d{3}|525[0-5]\\d{2}|525600)$', '请输入1到525600的整数', '请输入1到525600的整数', '2', '33', 'NULL', '分钟', '1', 'int', '8.0 ');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4032', 'mysql', 'my.cnf', '8760', 'mysqld', 'text', 'lock_wait_timeout', '获取元数据锁的超时时间', 'NULL', '3600', '^([1-9]\\d{0,2}|[1-7]\\d{3}|8\\d{4}|8[0-6]\\d{2}|87[0-5]\\d{1}|8760)$', '请输入1到8760的整数', '请输入1到8760的整数', '2', '34', 'NULL', '小时', '1', 'int', '8.0 ');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4033', 'mysql', 'my.cnf', 'utf8mb4', 'mysqld', 'text', 'character-set-server', '服务器使用的字符集', 'NULL', '0', 'NULL', '可在MySQL官网查看支持哪些字符集', '可在MySQL官网查看支持哪些字符集', '0', '12', 'NULL', 'NULL', '1', 'String', '8.0 ');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4034', 'mysql', 'my.cnf', 'SYSTEM', 'mysqld', 'radio', 'log_timestamps', '日志显示时区', '{\"UTC\":\"UTC\",\"SYSTEM\":\"SYSTEM\"}', '0', 'NULL', 'NULL', 'NULL', '1', '10', 'NULL', 'NULL', '1', 'String', '8.0 ');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4035', 'mysql', 'my.cnf', '0', 'mysqld', 'text', 'max_user_connections', '每个账户的最大连接数', 'NULL', '0', '^([1-9]\\d{0,8}|[1-3]\\d{0,9}|4[0-1]\\d{0,8}|42[0-8]\\d{0,7}|429[0-3]\\d{0,6}|4294[0-8]\\d{0,5}|4294900000|0)$', '请输入0到4294900000之间的整数', '请输入0到4294900000之间的整数', '2', '19', 'NULL', 'NULL', '1', 'int', '8.0 ');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4036', 'storm', 'storm.yaml', '/usr/local/lib:/opt/local/lib:/usr/lib', 'storm', 'input', 'java.library.path', '', '', '0', '', '', '', '0', '1', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4037', 'storm', 'storm.yaml', 'storm-local', 'storm', 'input', 'storm.local.dir', '', '', '0', '', '', '', '0', '2', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4038', 'storm', 'storm.yaml', 'log4j2', 'storm', 'input', 'storm.log4j2.conf.dir', '', '', '0', '', '', '', '0', '3', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4039', 'storm', 'storm.yaml', 'localhost', 'storm', 'input', 'storm.zookeeper.servers', '', '', '0', '', '', '', '0', '4', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('404', 'kafka', 'server.properties', 'delete', 'proxy', 'select', 'log.cleanup.policy', '', '{\"compact\":\"compact\",\"delete\":\"delete\"}', '0', 'compact|delete', '必须输入delete或者compact', '设置超出保留窗口的段清除策略。设置“delete\"表示删除， 设置“compact”表示压缩。', '2', '79', null, '', '1', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4040', 'storm', 'storm.yaml', '2181', 'storm', 'input', 'storm.zookeeper.port', '', '', '0', '', '', '', '0', '5', null, '', '0', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4041', 'storm', 'storm.yaml', '20', 'storm', 'input', 'storm.zookeeper.session.timeout', '', '', '1000', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置客户端连接Zookeeper超时时间。', '1', '6', null, '秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4042', 'storm', 'storm.yaml', '15', 'storm', 'input', 'storm.zookeeper.connection.timeout', '', '', '1000', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置连接Zookeeper超时时间。', '1', '7', null, '秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4043', 'storm', 'storm.yaml', '5', 'storm', 'input', 'storm.zookeeper.retry.times', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置连接Zookeeper重试次数。', '1', '8', null, '', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4044', 'storm', 'storm.yaml', '1000', 'storm', 'input', 'storm.zookeeper.retry.interval', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置连接Zookeeper重试间隔。', '1', '9', null, '', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4045', 'storm', 'storm.yaml', '30', 'storm', 'input', 'storm.zookeeper.retry.intervalceiling.millis', '', '', '1000', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置重试时间间隔最长时间。', '1', '10', null, '秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4046', 'storm', 'storm.yaml', 'null', 'storm', 'input', 'storm.zookeeper.auth.user', '', '', '0', '', '', '', '0', '11', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4047', 'storm', 'storm.yaml', 'null', 'storm', 'input', 'storm.zookeeper.auth.password', '', '', '0', '', '', '', '0', '12', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4048', 'storm', 'storm.yaml', '8080', 'storm', 'input', 'storm.exhibitor.port', '', '', '0', '', '', '', '0', '13', null, '', '0', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4049', 'storm', 'storm.yaml', '/exhibitor/v1/cluster/list', 'storm', 'input', 'storm.exhibitor.poll.uripath', '', '', '0', '', '', '', '0', '14', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('405', 'kafka', 'server.properties', '4', 'proxy', 'input', 'log.index.interval.bytes', '', '', '1024', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置每次获取日志数据的索引数量大小。', '2', '80', null, '单位:Kb', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4050', 'storm', 'storm.yaml', 'distributed', 'storm', 'radio', 'storm.cluster.mode', '', '{\"distributed\":\"distributed\",\"local\":\"local\"}', '0', '^\\S*$', '不能为空', '设置集群运行模式([distributed|local])。', '1', '15', null, '', '1', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4051', 'storm', 'storm.yaml', 'false', 'storm', 'radio', 'storm.local.mode.zmq', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '设置Local模式是否使用ZeroMQ。', '1', '16', null, '', '1', 'boolean', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4052', 'storm', 'storm.yaml', 'org.apache.storm.security.auth.SimpleTransportPlugin', 'storm', 'input', 'storm.thrift.transport', '', '', '0', '', '', '', '0', '17', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4053', 'storm', 'storm.yaml', 'org.apache.storm.security.auth.DefaultPrincipalToLocal', 'storm', 'input', 'storm.principal.tolocal', '', '', '0', '', '', '', '0', '18', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4054', 'storm', 'storm.yaml', 'org.apache.storm.security.auth.ShellBasedGroupsMapping', 'storm', 'input', 'storm.group.mapping.service', '', '', '0', '', '', '', '0', '19', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4055', 'storm', 'storm.yaml', 'null', 'storm', 'input', 'storm.group.mapping.service.params', '', '', '0', '', '', '', '0', '20', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4056', 'storm', 'storm.yaml', 'org.apache.storm.messaging.netty.Context', 'storm', 'input', 'storm.messaging.transport', '', '', '0', '', '', '', '0', '21', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4057', 'storm', 'storm.yaml', '5', 'storm', 'input', 'storm.nimbus.retry.times', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置nimbus操作重试次数。', '1', '22', null, '', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4058', 'storm', 'storm.yaml', '2', 'storm', 'input', 'storm.nimbus.retry.interval.millis', '', '', '1000', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置重试间隔。', '1', '23', null, '秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4059', 'storm', 'storm.yaml', '60', 'storm', 'input', 'storm.nimbus.retry.intervalceiling.millis', '', '', '1000', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置最大重试时间。', '1', '24', null, '秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('406', 'kafka', 'server.properties', 'false', 'proxy', 'radio', 'delete.topic.enable', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', '', '', 'Enables delete topic. Delete topic through the admin tool will have no effect if this config is turned off\n', '0', '81', null, '', '0', 'boolean', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4060', 'storm', 'storm.yaml', '[]', 'storm', 'input', 'storm.auth.simple-white-list.users', '', '', '0', '', '', '', '0', '25', null, '', '0', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4061', 'storm', 'storm.yaml', '[]', 'storm', 'input', 'storm.auth.simple-acl.users', '', '', '0', '', '', '', '0', '26', null, '', '0', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4062', 'storm', 'storm.yaml', '[]', 'storm', 'input', 'storm.auth.simple-acl.users.commands', '', '', '0', '', '', '', '0', '27', null, '', '0', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4063', 'storm', 'storm.yaml', '[]', 'storm', 'input', 'storm.auth.simple-acl.admins', '', '', '0', '', '', '', '0', '28', null, '', '0', 'long', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4064', 'storm', 'storm.yaml', 'org.apache.storm.cluster_state.zookeeper_state_factory', 'storm', 'input', 'storm.cluster.state.store', '', '', '0', '', '', '', '0', '29', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4065', 'storm', 'storm.yaml', 'org.apache.storm.serialization.GzipThriftSerializationDelegate', 'storm', 'input', 'storm.meta.serialization.delegate', '', '', '0', '', '', '', '0', '30', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4066', 'storm', 'storm.yaml', 'org.apache.storm.codedistributor.LocalFileSystemCodeDistributor', 'storm', 'input', 'storm.codedistributor.class', '', '', '0', '', '', '', '0', '31', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4067', 'storm', 'storm.yaml', 'workers-artifacts', 'storm', 'input', 'storm.workers.artifacts.dir', '', '', '0', '', '', '', '0', '32', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4068', 'storm', 'storm.yaml', 'healthchecks', 'storm', 'input', 'storm.health.check.dir', '', '', '0', '', '', '', '0', '33', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4069', 'storm', 'storm.yaml', '5', 'storm', 'input', 'storm.health.check.timeout.ms', '', '', '1000', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置健康检查超时时间。', '1', '34', null, '秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('407', 'kafka', 'server.properties', '10', 'proxy', 'input', 'log.index.size.max.bytes', '', '', '1048576', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置每个日志数据段文件的消息索引数量上限。当达到此上限将生成新消息段文件。', '2', '82', null, '单位:Mb', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4070', 'storm', 'storm.yaml', 'false', 'storm', 'radio', 'storm.disable.symlinks', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '', '0', '35', null, '', '0', 'boolean', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4071', 'storm', 'storm.yaml', '/storm', 'storm', 'input', 'storm.zookeeper.root', '', '', '0', '', '', '', '0', '36', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4072', 'storm', 'storm.yaml', '[\"localhost\"]', 'nimbus', 'input', 'nimbus.seeds', '', '', '0', '', '', '', '0', '37', null, '', '0', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4073', 'storm', 'storm.yaml', '6627', 'nimbus', 'input', 'nimbus.thrift.port', '', '', '0', '', '', '', '0', '38', null, '', '0', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4074', 'storm', 'storm.yaml', '64', 'nimbus', 'input', 'nimbus.thrift.threads', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置nimbus thrift线程数目。', '1', '39', null, '', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4075', 'storm', 'storm.yaml', '1048576', 'nimbus', 'input', 'nimbus.thrift.max_buffer_size', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置nimbus thrift最大缓冲大小。', '1', '40', null, '', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4076', 'storm', 'storm.yaml', '-Xmx1024m', 'nimbus', 'input', 'nimbus.childopts', '', '', '0', '', '', '', '0', '41', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4077', 'storm', 'storm.yaml', '30', 'nimbus', 'input', 'nimbus.task.timeout.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置task心跳超时时间。', '1', '42', null, '秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4078', 'storm', 'storm.yaml', '60', 'nimbus', 'input', 'nimbus.supervisor.timeout.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置supervisor的心跳超时时间。', '1', '43', null, '秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4079', 'storm', 'storm.yaml', '10', 'nimbus', 'input', 'nimbus.monitor.freq.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置nimbus检查心跳和重分配任务的时间间隔。', '1', '44', null, '秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('408', 'kafka', 'server.properties', 'false', 'proxy', 'radio', 'log.preallocate', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', '', '', '设置预先创建新文件属性，windows推荐使用。', '2', '83', null, '', '1', 'boolean', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4080', 'storm', 'storm.yaml', '600', 'nimbus', 'input', 'nimbus.cleanup.inbox.freq.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置多久时间启动清理 inbox 文件的线程。', '1', '45', null, '秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4081', 'storm', 'storm.yaml', '3600', 'nimbus', 'input', 'nimbus.inbox.jar.expiration.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置jar 过期时间。', '1', '46', null, '秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4082', 'storm', 'storm.yaml', '120', 'nimbus', 'radio', 'nimbus.code.sync.freq.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置同步一次未执行的拓扑的代码时间。', '1', '47', null, '秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4083', 'storm', 'storm.yaml', '120', 'nimbus', 'input', 'nimbus.task.launch.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置task启动时的一个特殊超时时间。', '1', '48', null, '秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4084', 'storm', 'storm.yaml', '600', 'nimbus', 'input', 'nimbus.file.copy.expiration.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置nimbus判断上传/下载链接的超时时间。', '1', '49', null, '秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4085', 'storm', 'storm.yaml', 'org.apache.storm.nimbus.DefaultTopologyValidator', 'nimbus', 'input', 'nimbus.topology.validator', '', '', '0', '^\\S*$', '不能为空', '设置控制该拓扑是否可以执行。', '0', '50', null, '', '1', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4086', 'storm', 'storm.yaml', '1', 'nimbus', 'input', 'topology.min.replication.count', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置nimbus seeds中拓扑代码的备份达到最小数目。', '1', '51', null, '', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4087', 'storm', 'storm.yaml', '60', 'nimbus', 'input', 'topology.max.replication.wait.time.sec', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置代码备份在nimbus list中达到topology.min.replication.count最大等待时间。', '1', '52', null, '秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4088', 'storm', 'storm.yaml', '600', 'nimbus', 'input', 'nimbus.credential.renewers.freq.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置nimbus凭证重新申请的频率。', '1', '53', null, '秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4089', 'storm', 'storm.yaml', '100000', 'nimbus', 'input', 'nimbus.queue.size', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置nimbus队列大小。', '1', '54', null, '', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('409', 'kafka', 'server.properties', '300', 'proxy', 'input', 'log.retention.check.interval.ms ', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志保留检测间隔时间。', '1', '12', null, '秒', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4090', 'storm', 'storm.yaml', 'false', 'nimbus', 'radio', 'scheduler.display.resource', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '设置是否在UI 页面上显示所有的资源容量和预定的使用情况。', '1', '55', null, '', '1', 'boolean', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4091', 'storm', 'storm.yaml', '0.0.0.0', 'ui', 'radio', 'ui.host', '', '', '0', 'true|false', '值必须是true或者false', '', '0', '56', null, '', '0', 'boolean', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4092', 'storm', 'storm.yaml', '8080', 'ui', 'input', 'ui.port', '', '', '0', '', '', '', '0', '57', null, '', '0', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4093', 'storm', 'storm.yaml', '-Xmx768m', 'ui', 'input', 'ui.childopts', '', '', '0', '', '', '', '0', '58', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4094', 'storm', 'storm.yaml', 'true', 'ui', 'radio', 'ui.actions.enabled', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '设置开启UI操作功能。', '1', '59', null, '', '1', 'boolean', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4095', 'storm', 'storm.yaml', 'null', 'ui', 'input', 'ui.filter', '', '', '0', '^\\S*$', '不能为空', '设置实现用于验证 / 过滤 UI 请求的 javax.servlet.Filter 的类。', '1', '60', null, '', '1', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4096', 'storm', 'storm.yaml', 'null', 'ui', 'input', 'ui.filter.params', '', '', '0', '^\\S*$', '不能为空', '设置javax.servlet.Filter 的初始化参数。', '1', '61', null, '', '1', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4097', 'storm', 'storm.yaml', 'null', 'ui', 'input', 'ui.users', '', '', '0', '^\\S*$', '不能为空', '设置UI用户。', '1', '62', null, '', '1', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4098', 'storm', 'storm.yaml', '4', 'ui', 'input', 'ui.header.buffer.bytes', '', '', '1024', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置UI 的头缓冲区的大小。', '1', '63', null, 'Kb', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4099', 'storm', 'storm.yaml', 'org.apache.storm.security.auth.DefaultHttpCredentialsPlugin', 'ui', 'input', 'ui.http.creds.plugin', '', '', '0', '', '', '', '0', '64', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('41', 'kafka', 'server.properties', '100', 'proxy', 'input', 'offsets.topic.segment.bytes', '', '', '1048576', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置话题消息段文件大小。', '2', '68', null, 'Mb', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('410', 'kafka', 'server.properties', '2147483647', 'proxy', 'input', 'max.connections.per.ip', '', '', '0', '', '', '设置每个ip地址最大连接数目。', '2', '84', null, '', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4100', 'storm', 'storm.yaml', 'DENY', 'ui', 'input', 'ui.http.x-frame-options', '', '', '0', '', '', '', '0', '65', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4101', 'storm', 'storm.yaml', '20', 'ui', 'input', 'ui.pagination', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置Storm UI 下拉式分页值。', '1', '66', null, '', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4102', 'storm', 'storm.yaml', '8000', 'ui', 'input', 'logviewer.port', '', '', '0', '', '', '', '0', '67', null, '', '0', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4103', 'storm', 'storm.yaml', '-Xmx128m', 'ui', 'input', 'logviewer.childopts', '', '', '0', '', '', '', '0', '68', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4104', 'storm', 'storm.yaml', '168', 'ui', 'input', 'logviewer.cleanup.age.mins', '', '', '60', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置上次修改日志以供日志考虑进行清理的时间。', '1', '69', null, '分钟', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4105', 'storm', 'storm.yaml', 'A1', 'ui', 'input', 'logviewer.appender.name', '', '', '0', '^\\S*$', '不能为空', '设置日志查看器用于确定日志目录的 Appender 名称。', '0', '70', null, '', '1', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4106', 'storm', 'storm.yaml', '4096', 'ui', 'input', 'logviewer.max.sum.worker.logs.size.mb', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置所有工作日志文件的最大字节数可占用 MB。', '1', '71', null, 'Mb', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4107', 'storm', 'storm.yaml', '2048', 'ui', 'input', 'logviewer.max.per.worker.logs.size.mb', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置每个worker文件的最大字节数可能占用 MB。', '1', '72', null, 'Mb', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4108', 'storm', 'storm.yaml', 'null', 'ui', 'input', 'logs.users', '', '', '0', '', '', '', '0', '73', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4109', 'storm', 'storm.yaml', '3772', 'ui', 'input', 'drpc.port', '', '', '0', '', '', '', '0', '74', null, '', '0', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('411', 'kafka', 'server.properties', '\"\"', 'proxy', 'input', 'max.connections.per.ip.overrides', '', '', '0', '^\\S*$', '输入不能为空', '设置每个 IP将覆盖默认的最大连接数。', '2', '85', null, '', '1', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4110', 'storm', 'storm.yaml', '64', 'ui', 'input', 'drpc.worker.threads', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置DRPC 节俭服务器工作线程数。', '1', '75', null, '', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4111', 'storm', 'storm.yaml', '1048576', 'ui', 'input', 'drpc.max_buffer_size', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置drpc最大缓冲大小。', '1', '76', null, '', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4112', 'storm', 'storm.yaml', '128', 'ui', 'input', 'drpc.queue.size', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置drpc队列大小。', '1', '77', null, '', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4113', 'storm', 'storm.yaml', '3773', 'ui', 'input', 'drpc.invocations.port', '', '', '0', '', '', '', '0', '78', null, '', '0', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4114', 'storm', 'storm.yaml', '64', 'ui', 'input', 'drpc.invocations.threads', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置DRPC调用节俭服务器工作线程。', '1', '79', null, '', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4115', 'storm', 'storm.yaml', '600', 'ui', 'input', 'drpc.request.timeout.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置DRPC服务器内的DRPC请求超时时间。', '1', '80', null, '秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4116', 'storm', 'storm.yaml', '-Xmx768m', 'ui', 'input', 'drpc.childopts', '', '', '0', '', '', '', '0', '81', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4117', 'storm', 'storm.yaml', '3774', 'ui', 'input', 'drpc.http.port', '', '', '0', '', '', '', '0', '82', null, '', '0', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4118', 'storm', 'storm.yaml', '-1', 'ui', 'input', 'drpc.https.port', '', '', '0', '', '', '', '0', '83', null, '', '0', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4119', 'storm', 'storm.yaml', '\"\"', 'ui', 'input', 'drpc.https.keystore.password', '', '', '0', '', '', '', '0', '84', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('412', 'kafka', 'server.properties', '1', 'proxy', 'input', 'num.partitions', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置日志分区数量。', '1', '7', null, '', '1', 'int', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4120', 'storm', 'storm.yaml', 'JKS', 'ui', 'input', 'drpc.https.keystore.type', '', '', '0', '', '', '', '0', '85', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4121', 'storm', 'storm.yaml', 'org.apache.storm.security.auth.DefaultHttpCredentialsPlugin', 'ui', 'input', 'drpc.http.creds.plugin', '', '', '0', '', '', '', '0', '86', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4122', 'storm', 'storm.yaml', 'drpc-auth-acl.yaml', 'ui', 'input', 'drpc.authorizer.acl.filename', '', '', '0', '', '', '', '0', '87', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4123', 'storm', 'storm.yaml', 'false', 'ui', 'radio', 'drpc.authorizer.acl.strict', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '', '0', '88', null, '', '0', 'boolean', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4124', 'storm', 'storm.yaml', '/transactional', 'ui', 'input', 'transactional.zookeeper.root', '', '', '0', '', '', '', '0', '89', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4125', 'storm', 'storm.yaml', 'null', 'ui', 'input', 'transactional.zookeeper.servers', '', '', '0', '', '', '', '0', '90', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4126', 'storm', 'storm.yaml', 'null', 'ui', 'input', 'transactional.zookeeper.port', '', '', '0', '', '', '', '0', '91', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4127', 'storm', 'storm.yaml', 'org.apache.storm.blobstore.NimbusBlobStore', 'blobstore', 'input', 'supervisor.blobstore.class', '', '', '0', '', '', '', '0', '92', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4128', 'storm', 'storm.yaml', '5', 'blobstore', 'input', 'supervisor.blobstore.download.thread.count', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置主管应该使用什么blobstore下载并行数。', '1', '93', null, '', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4129', 'storm', 'storm.yaml', '3', 'blobstore', 'input', 'supervisor.blobstore.download.max_retries', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置管理员允许下载blob的最大重试次数。', '1', '94', null, '', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('413', 'kafka', 'server.properties', '1000', 'proxy', 'input', 'producer.purgatory.purge.interval.requests', '', '', '1', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置生产者请求清除时间。', '2', '86', null, '单位:毫秒', '1', 'int', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4130', 'storm', 'storm.yaml', '10', 'blobstore', 'input', 'supervisor.localizer.cache.target.size.mb', '', '', '1024', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置分布式缓存目标大小。', '1', '95', null, 'Gb', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4131', 'storm', 'storm.yaml', '10', 'blobstore', 'input', 'supervisor.localizer.cleanup.interval.ms', '', '', '60000', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置分布式缓存清理间隔。', '1', '96', null, '分钟', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4132', 'storm', 'storm.yaml', 'org.apache.storm.blobstore.LocalFsBlobStore', 'blobstore', 'input', 'nimbus.blobstore.class', '', '', '0', '', '', '', '0', '97', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4133', 'storm', 'storm.yaml', '600', 'blobstore', 'input', 'nimbus.blobstore.expiration.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置在使用 blob 存储操作期间。', '1', '98', null, '秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4134', 'storm', 'storm.yaml', '64', 'blobstore', 'input', 'storm.blobstore.inputstream.buffer.size.bytes', '', '', '1024', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置blobstore上传的缓冲区大小。', '1', '99', null, 'Kb', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4135', 'storm', 'storm.yaml', 'org.apache.storm.blobstore.NimbusBlobStore', 'blobstore', 'input', 'client.blobstore.class', '', '', '0', '', '', '', '0', '100', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4136', 'storm', 'storm.yaml', '3', 'blobstore', 'input', 'storm.blobstore.replication.factor', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置在HDFS Blobstore实现中blob的复制因子。', '1', '101', null, '', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4137', 'storm', 'storm.yaml', 'false', 'blobstore', 'radio', 'storm.blobstore.acl.validation.enabled', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '', '0', '102', null, '', '0', 'boolean', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4138', 'storm', 'storm.yaml', '-', 'supervisor', 'radio', 'supervisor.slots.ports', '', '', '0', 'true|false', '值必须是true或者false', '', '0', '103', null, '', '0', 'boolean', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4139', 'storm', 'storm.yaml', '-Xmx256m', 'supervisor', 'input', 'supervisor.childopts', '', '', '0', '^\\S*$', '不能为空', '设置storm-deploy中用来配置supervisor守护进程的jvm选项。', '0', '104', null, '', '1', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('414', 'kafka', 'server.properties', '1', 'proxy', 'input', 'replica.fetch.backoff.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置备份数据失败的等待时间。', '2', '87', null, '秒', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4140', 'storm', 'storm.yaml', 'false', 'supervisor', 'radio', 'supervisor.run.worker.as.user', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '设置是否应该尝试将worker作为激活用户来运行。', '1', '105', null, '', '1', 'boolean', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4141', 'storm', 'storm.yaml', '120', 'supervisor', 'input', 'supervisor.worker.start.timeout.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置·supervisor初始启动时,worker的心跳超时时间。', '1', '106', null, '秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4142', 'storm', 'storm.yaml', '30', 'supervisor', 'input', 'supervisor.worker.timeout.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置supervisor中的worker心跳超时时间。', '1', '107', null, '秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4143', 'storm', 'storm.yaml', '3', 'supervisor', 'input', 'supervisor.worker.shutdown.sleep.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置supervisor shutdown worker需要等待的时间。', '1', '108', null, '秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4144', 'storm', 'storm.yaml', '3', 'supervisor', 'input', 'supervisor.monitor.frequency.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置supervisor检查worker心跳的频率。', '1', '109', null, '秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4145', 'storm', 'storm.yaml', '5', 'supervisor', 'input', 'supervisor.heartbeat.frequency.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置supervisor心跳发送频率。', '1', '110', null, '秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4146', 'storm', 'storm.yaml', 'true', 'supervisor', 'radio', 'supervisor.enable', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '设置supervisor是否应当运行分配给他的workers。', '1', '111', null, '', '1', 'boolean', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4147', 'storm', 'storm.yaml', '[]', 'supervisor', 'input', 'supervisor.supervisors', '', '', '0', '^\\S*$', '不能为空', '', '0', '112', null, '', '1', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4148', 'storm', 'storm.yaml', '[]', 'supervisor', 'input', 'supervisor.supervisors.commands', '', '', '0', '^\\S*$', '不能为空', '', '0', '113', null, '', '1', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4149', 'storm', 'storm.yaml', '3072', 'supervisor', 'input', 'supervisor.memory.capacity.mb', '', '', '1', '^\\S*$', '不能为空', '设置主管允许给其worker的Memory资源总量。', '1', '114', null, 'Mb', '1', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('415', 'kafka', 'server.properties', '1000', 'proxy', 'input', 'reserved.broker.max.id', '', '', '0', '', '', 'Max number that can be used for a broker.id', '0', '88', null, '', '0', 'int', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4150', 'storm', 'storm.yaml', '400', 'supervisor', 'input', 'supervisor.cpu.capacity', '', '', '0', '^\\S*$', '不能为空', '设置主管允许给其worker的CPU资源总量。', '1', '115', null, '', '1', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4151', 'storm', 'storm.yaml', '768', 'worker', 'input', 'worker.heap.memory.mb', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置worker进程默认堆内存大小。', '1', '116', null, 'Mb', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4152', 'storm', 'storm.yaml', '-Xmx%HEAP-MEM%m -XX:+PrintGCDetails -Xloggc:artifacts/gc.log -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=10 -XX:GCLogFileSize=1M -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=artifacts/heapdump', 'worker', 'input', 'worker.childopts', '', '', '0', '', '', '', '0', '117', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4153', 'storm', 'storm.yaml', '\"\"', 'worker', 'input', 'worker.gc.childopts', '', '', '0', '', '', '', '0', '118', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4154', 'storm', 'storm.yaml', 'false', 'worker', 'radio', 'worker.profiler.enabled', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '', '0', '119', null, '', '0', 'boolean', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4155', 'storm', 'storm.yaml', '-XX:+UnlockCommercialFeatures -XX:+FlightRecorder', 'worker', 'input', 'worker.profiler.childopts', '', '', '0', '', '', '', '0', '120', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4156', 'storm', 'storm.yaml', 'flight.bash', 'worker', 'input', 'worker.profiler.command', '', '', '0', '', '', '', '0', '121', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4157', 'storm', 'storm.yaml', '1', 'worker', 'input', 'worker.heartbeat.frequency.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置worker的心跳发送时间间隔。', '1', '122', null, '秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4158', 'storm', 'storm.yaml', '30', 'worker', 'input', 'worker.log.level.reset.poll.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置多久工作一次应检查动态日志级别超时以便过期的时间。', '1', '123', null, '秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4159', 'storm', 'storm.yaml', '1', 'worker', 'input', 'topology.worker.receiver.thread.count', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置每个worker设置的receiver线程个数。', '1', '124', null, '', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('416', 'kafka', 'server.properties', 'PLAINTEXT', 'proxy', 'input', 'security.inter.broker.protocol', '', '', '0', '', '', 'Security protocol used to communicate between brokers', '0', '89', null, '', '0', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4160', 'storm', 'storm.yaml', '3', 'worker', 'input', 'task.heartbeat.frequency.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置task汇报状态心跳时间间隔。', '1', '125', null, '秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4161', 'storm', 'storm.yaml', '10', 'worker', 'input', 'task.refresh.poll.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置task与其他tasks之间链接同步的频率。', '1', '126', null, '秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4162', 'storm', 'storm.yaml', '30', 'worker', 'input', 'task.credentials.poll.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置最差情况下,任务应该同步一次证书的时间。', '1', '127', null, '秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4163', 'storm', 'storm.yaml', '30', 'worker', 'input', 'task.backpressure.poll.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置查询ZK更改后的拓扑背压标志的时间。', '1', '128', null, '秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4164', 'storm', 'storm.yaml', 'false', 'worker', 'radio', 'topology.backpressure.enable', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '设置是否为特定拓扑启用背压。', '1', '129', null, '', '1', 'boolean', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4165', 'storm', 'storm.yaml', '0.9', 'worker', 'input', 'backpressure.disruptor.high.watermark', '', '', '0', '^\\S*$', '不能为空', '这表示中断队列中的元组拥塞。', '1', '130', null, '', '1', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4166', 'storm', 'storm.yaml', '0.4', 'worker', 'input', 'backpressure.disruptor.low.watermark', '', '', '0', '^\\S*$', '不能为空', '这表示状态:干扰队列已经离开拥挤。', '1', '131', null, '', '1', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4167', 'storm', 'storm.yaml', '1', 'worker', 'input', 'zmq.threads', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置每个worker进程内zeromq通讯用到的线程数。', '1', '132', null, '', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4168', 'storm', 'storm.yaml', '5', 'worker', 'input', 'zmq.linger.millis', '', '', '1000', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置当连接关闭时,链接尝试重新发送消息到目标主机的持续时长。', '1', '133', null, '秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4169', 'storm', 'storm.yaml', '0', 'worker', 'input', 'zmq.hwm', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置zmq的指定网络通信设置高水平标记。', '1', '134', null, '', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('417', 'kafka', 'server.properties', '300', 'proxy', 'input', 'leader.imbalance.check.interval.seconds', '', '', '1', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置leader平衡检测的间隔时间。', '2', '90', null, '秒', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4170', 'storm', 'storm.yaml', '1', 'worker', 'input', 'storm.messaging.netty.server_worker_threads', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置接收消息线程数。', '1', '135', null, '', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4171', 'storm', 'storm.yaml', '1', 'worker', 'input', 'storm.messaging.netty.client_worker_threads', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置发送消息线程的数量。', '1', '136', null, '', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4172', 'storm', 'storm.yaml', '5242880', 'worker', 'input', 'storm.messaging.netty.buffer_size', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置每次批量发送的Tuple序列化之后的Task Message消息大小。', '1', '137', null, '', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4173', 'storm', 'storm.yaml', '300', 'worker', 'input', 'storm.messaging.netty.max_retries', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置netty buffer大小。', '1', '138', null, '', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4174', 'storm', 'storm.yaml', '1000', 'worker', 'input', 'storm.messaging.netty.max_wait_ms', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置对等体将等待的最大毫秒数(基于netty)。', '1', '139', null, '', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4175', 'storm', 'storm.yaml', '100', 'worker', 'input', 'storm.messaging.netty.min_wait_ms', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置对等体将等待的最小毫秒数(基于netty)。', '1', '140', null, '', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4176', 'storm', 'storm.yaml', '262144', 'worker', 'input', 'storm.messaging.netty.transfer.batch.size', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置每次Netty Client向Netty Server发送数据的大小。', '1', '141', null, '', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4177', 'storm', 'storm.yaml', '500', 'worker', 'input', 'storm.messaging.netty.socket.backlog', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置积压值以指定通道绑定到本地地址的时间(基于Netty消息传递)。', '1', '142', null, '', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4178', 'storm', 'storm.yaml', 'false', 'worker', 'radio', 'storm.messaging.netty.authentication', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '设置从客户端worker进程到服务器工作进程的Netty消息传递是否需要身份验证。', '1', '143', null, '', '1', 'boolean', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4179', 'storm', 'storm.yaml', 'org.apache.storm.networktopography.DefaultRackDNSToSwitchMapping', 'worker', 'input', 'storm.network.topography.plugin', '', '', '0', '', '', '', '0', '144', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('418', 'kafka', 'server.properties', '[]', 'proxy', 'input', 'metric.reporters', '', '', '0', '[]|^\\S*$', '输入不能为空', '设置度量记录的类的列表。实现MetricReporter接口允许插入将被通知新度量标准创建的类。JmxReporter 始终包含在注册 JMX 统计信息中。', '2', '91', null, '', '1', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4180', 'storm', 'storm.yaml', '120', 'worker', 'input', 'storm.group.mapping.service.cache.duration.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置将缓存用户组秒数组映射服务的最大数量。', '1', '145', null, '秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4181', 'storm', 'storm.yaml', 'true', 'topology', 'radio', 'topology.enable.message.timeouts', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '设置是否保证数据完全处理。', '1', '146', null, '', '1', 'boolean', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4182', 'storm', 'storm.yaml', 'false', 'topology', 'radio', 'topology.debug', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '设置是否Storm将记录发射的每条信息。', '1', '147', null, '', '1', 'boolean', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4183', 'storm', 'storm.yaml', '1', 'topology', 'input', 'topology.workers', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置执行该topology集群中应当启动的进程数量。', '1', '148', null, '', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4184', 'storm', 'storm.yaml', 'null', 'topology', 'input', 'topology.acker.executors', '', '', '0', '^\\S*$', '不能为空', '设置Acker进程个数。', '1', '149', null, '', '1', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4185', 'storm', 'storm.yaml', '0', 'topology', 'input', 'topology.eventlogger.executors', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置Event Logger进程个数。', '1', '150', null, '', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4186', 'storm', 'storm.yaml', 'null', 'topology', 'input', 'topology.tasks', '', '', '0', '^\\S*$', '不能为空', '设置task数目。', '1', '151', null, '', '1', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4187', 'storm', 'storm.yaml', '30', 'topology', 'input', 'topology.message.timeout.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置在一个topology中能够允许的最大组件并行度。', '1', '152', null, '秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4188', 'storm', 'storm.yaml', 'org.apache.storm.multilang.JsonSerializer', 'topology', 'input', 'topology.multilang.serializer', '', '', '0', '^\\S*$', '不能为空', '设置用于shell组件和非JVM进程之间进行通信的序列化程序。', '0', '153', null, '', '1', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4189', 'storm', 'storm.yaml', '100', 'topology', 'input', 'topology.shellbolt.max.pending', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置一个ShellBolt中的最大待处理元组。', '1', '154', null, '', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('419', 'kafka', 'server.properties', '2', 'proxy', 'input', 'metrics.num.samples', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置计算度量标准的样本数量。', '2', '92', null, '', '1', 'int', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4190', 'storm', 'storm.yaml', 'false', 'topology', 'radio', 'topology.skip.missing.kryo.registrations', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '设置Storm是否应该跳过它不能识别的kryo序列化方案。', '1', '155', null, '', '1', 'boolean', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4191', 'storm', 'storm.yaml', 'null', 'topology', 'input', 'topology.max.task.parallelism', '', '', '0', '^\\S*$', '不能为空', '设置一个topology中能够允许的最大组件并行度。', '1', '156', null, '', '1', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4192', 'storm', 'storm.yaml', 'null', 'topology', 'input', 'topology.max.spout.pending', '', '', '0', '^\\S*$', '不能为空', '设置一个spout task中处于pending状态的最大的tuples数量。', '1', '157', null, '', '1', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4193', 'storm', 'storm.yaml', '60', 'topology', 'input', 'topology.state.synchronization.timeout.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置组件同步状态源的最大超时时间(保留选项,暂未使用)。', '1', '158', null, '秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4194', 'storm', 'storm.yaml', '0.05', 'topology', 'input', 'topology.stats.sample.rate', '', '', '0', '^\\S*$', '不能为空', '设置用来产生task统计信息的tuples抽样百分比。', '1', '159', null, '', '1', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4195', 'storm', 'storm.yaml', '60', 'topology', 'input', 'topology.builtin.metrics.bucket.size.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置Storm Worker进程的JVM参数。', '1', '160', null, '秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4196', 'storm', 'storm.yaml', 'true', 'topology', 'radio', 'topology.fall.back.on.java.serialization', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '设置topology中是否使用java的序列化方案。', '1', '161', null, '', '1', 'boolean', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4197', 'storm', 'storm.yaml', 'null', 'topology', 'input', 'topology.worker.childopts', '', '', '0', '^\\S*$', '不能为空', '设置worker子进程的拓扑特定选项。', '1', '162', null, '', '1', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4198', 'storm', 'storm.yaml', '-Xmx64m', 'topology', 'input', 'topology.worker.logwriter.childopts', '', '', '0', '^\\S*$', '不能为空', '设置worker的日志记录过程的拓扑特定选项。', '0', '163', null, '', '1', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4199', 'storm', 'storm.yaml', '1024', 'topology', 'input', 'topology.executor.receive.buffer.size', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置executor线程的接收队列大小(2 的倍数)。', '1', '164', null, '', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('42', 'kafka', 'server.properties', '9092', 'proxy', 'input', 'port', '', '', '0', '', '', ' the port to listen and accept connections on', '0', '69', null, '', '0', 'int', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('420', 'kafka', 'server.properties', '30', 'proxy', 'input', 'metrics.sample.window.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置计算度量标准的样本数量。', '2', '93', null, '秒', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4200', 'storm', 'storm.yaml', '1024', 'topology', 'input', 'topology.executor.send.buffer.size', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置executor线程的发送队列大小(2 的倍数)。', '1', '165', null, '', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4201', 'storm', 'storm.yaml', '1024', 'topology', 'input', 'topology.transfer.buffer.size', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0，且是2的指数', '设置worker进程中向外发送消息的缓存大小。', '1', '166', null, '', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4202', 'storm', 'storm.yaml', 'null', 'topology', 'input', 'topology.tick.tuple.freq.secs', '', '', '1', '^\\S*$', '不能为空', '设置topology定时消息发送的频率。', '1', '167', null, '秒', '1', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4203', 'storm', 'storm.yaml', '4', 'topology', 'input', 'topology.worker.shared.thread.pool.size', '', '', '0', '', '', '', '0', '168', null, '', '0', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4204', 'storm', 'storm.yaml', 'org.apache.storm.spout.SleepSpoutWaitStrategy', 'topology', 'input', 'topology.spout.wait.strategy', '', '', '0', '', '', '', '0', '169', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4205', 'storm', 'storm.yaml', '1', 'topology', 'input', 'topology.sleep.spout.wait.strategy.time.ms', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置SleepEmptyEmitStrategy应为其休眠的毫秒数。', '1', '170', null, '毫秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4206', 'storm', 'storm.yaml', '10', 'topology', 'input', 'topology.error.throttle.interval.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置用于确定是否限制报告给Zookeeper错误的时间间隔。', '1', '171', null, '秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4207', 'storm', 'storm.yaml', '5', 'topology', 'input', 'topology.max.error.report.per.interval', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置拓扑任务每个时间间隔的错误最大汇报数。', '1', '172', null, '', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4208', 'storm', 'storm.yaml', 'org.apache.storm.serialization.DefaultKryoFactory', 'topology', 'input', 'topology.kryo.factory', '', '', '0', '', '', '', '0', '173', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4209', 'storm', 'storm.yaml', 'org.apache.storm.serialization.types.ListDelegateSerializer', 'topology', 'input', 'topology.tuple.serializer', '', '', '0', '', '', '', '0', '174', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('421', 'kafka', 'server.properties', '11', 'proxy', 'input', 'quota.window.num', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入值必须在1到1000000000', '设置内存中保留的样本数量。', '2', '94', null, '', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4210', 'storm', 'storm.yaml', '500', 'topology', 'input', 'topology.trident.batch.emit.interval.millis', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置Trident拓扑中可以发出批次的次数。', '1', '175', null, '毫秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4211', 'storm', 'storm.yaml', 'false', 'topology', 'radio', 'topology.testing.always.try.serialize', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '设置是否尝试序列化所有元组(即使是本地传输)。', '1', '176', null, '', '1', 'boolean', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4212', 'storm', 'storm.yaml', 'null', 'topology', 'input', 'topology.classpath', '', '', '0', '', '', '', '0', '177', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4213', 'storm', 'storm.yaml', 'null', 'topology', 'input', 'topology.environment', '', '', '0', '', '', '', '0', '178', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4214', 'storm', 'storm.yaml', 'false', 'topology', 'radio', 'topology.bolts.outgoing.overflow.buffer.enable', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '', '0', '179', null, '', '0', 'boolean', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4215', 'storm', 'storm.yaml', '1', 'topology', 'input', 'topology.disruptor.wait.timeout.millis', '', '', '1000', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置cpu使用权衡时间。', '1', '180', null, '秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4216', 'storm', 'storm.yaml', '100', 'topology', 'input', 'topology.disruptor.batch.size', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置发送到下一个线程之前要批量处理的元组数量。', '1', '181', null, '', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4217', 'storm', 'storm.yaml', '1', 'topology', 'input', 'topology.disruptor.batch.timeout.millis', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置批次在发送到下一个线程之前的最大时间。', '1', '182', null, '毫秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4218', 'storm', 'storm.yaml', 'false', 'topology', 'radio', 'topology.disable.loadaware.messaging', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '设置是否禁用加载感知分组支持。', '1', '183', null, '', '1', 'boolean', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4219', 'storm', 'storm.yaml', '1', 'topology', 'input', 'topology.state.checkpoint.interval.ms', '', '', '1000', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置用于指定IStatefulBolt涉及螺栓时保存拓扑状态的检查点间隔的拓扑配置。', '1', '184', null, '秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('422', 'kafka', 'server.properties', '1', 'proxy', 'input', 'quota.window.size.seconds', '', '', '1', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置每个样本的时间跨度。', '2', '95', null, '秒', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4220', 'storm', 'storm.yaml', '29', 'topology', 'input', 'topology.priority', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置拓扑的优先级。', '1', '185', null, '', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4221', 'storm', 'storm.yaml', '128', 'topology', 'input', 'topology.component.resources.onheap.memory.mb', '', '', '1', '', '', '', '0', '186', null, 'Mb', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4222', 'storm', 'storm.yaml', '0', 'topology', 'input', 'topology.component.resources.offheap.memory.mb', '', '', '0', '', '', '', '0', '187', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4223', 'storm', 'storm.yaml', '10', 'topology', 'input', 'topology.component.cpu.pcore.percent', '', '', '0', '', '', '', '0', '188', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4224', 'storm', 'storm.yaml', '768', 'topology', 'input', 'topology.worker.max.heap.size.mb', '', '', '1', '^\\S*$', '不能为空', '设置应用于Topology,限定Worker最大可用堆内存数。', '1', '189', null, 'Mb', '1', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4225', 'storm', 'storm.yaml', 'org.apache.storm.scheduler.resource.strategies.scheduling.DefaultResourceAwareStrategy', 'topology', 'input', 'topology.scheduler.strategy', '', '', '0', '', '', '', '0', '190', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4226', 'storm', 'storm.yaml', 'org.apache.storm.scheduler.resource.strategies.eviction.DefaultEvictionStrategy', 'topology', 'input', 'resource.aware.scheduler.eviction.strategy', '', '', '0', '', '', '', '0', '191', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4227', 'storm', 'storm.yaml', 'org.apache.storm.scheduler.resource.strategies.priority.DefaultSchedulingPriorityStrategy', 'topology', 'input', 'resource.aware.scheduler.priority.strategy', '', '', '0', '', '', '', '0', '192', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4228', 'storm', 'storm.yaml', '/tmp/dev-storm-zookeeper', 'topology', 'input', 'dev.zookeeper.path', '', '', '0', '', '', '', '0', '193', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4229', 'storm', 'storm.yaml', 'localhost', 'topology', 'input', 'pacemaker.host', '', '', '0', '', '', '', '0', '194', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('423', 'kafka', 'server.properties', '-1', 'proxy', 'input', 'broker.id', '', '', '0', '', '', '', '0', '96', null, '', '0', 'int', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4230', 'storm', 'storm.yaml', '6699', 'topology', 'input', 'pacemaker.port', '', '', '0', '', '', '', '0', '195', null, '', '0', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4231', 'storm', 'storm.yaml', '10', 'topology', 'input', 'pacemaker.base.threads', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置pacemaker线程个数。', '1', '196', null, '', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4232', 'storm', 'storm.yaml', '50', 'topology', 'input', 'pacemaker.max.threads', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置Pacemaker应该使用的最大线程数。', '1', '197', null, '', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4233', 'storm', 'storm.yaml', '10', 'topology', 'input', 'pacemaker.thread.timeout', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置pacemaker线程超时时间。', '1', '198', null, '秒', '1', 'int', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4234', 'storm', 'storm.yaml', '-Xmx1024m', 'topology', 'input', 'pacemaker.childopts', '', '', '0', '', '', '', '0', '199', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4235', 'storm', 'storm.yaml', 'NONE', 'topology', 'input', 'pacemaker.auth.method', '', '', '0', '', '', '', '0', '200', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4236', 'storm', 'storm.yaml', '[]', 'topology', 'input', 'pacemaker.kerberos.users', '', '', '0', '', '', '', '0', '201', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('4237', 'storm', 'storm.yaml', 'org.apache.storm.daemon.metrics.reporters.JmxPreparableReporter', 'topology', 'input', 'storm.daemon.metrics.reporter.plugins', '', '', '0', '', '', '', '0', '202', null, '', '0', 'String', '1.2.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('424', 'kafka', 'server.properties', '\"\"', 'proxy', 'input', 'host.name', '', '', '0', '', '', '', '0', '97', null, '', '0', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('425', 'kafka', 'server.properties', '/tmp/kafka-logs', 'proxy', 'input', 'log.dir', '', '', '0', '', '', '', '0', '98', null, '', '0', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('426', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'log.dirs', '', '', '0', '', '', '', '0', '99', null, '', '0', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('427', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'zookeeper.connection.timeout.ms', '', '', '1000', '', '', '', '0', '100', null, '秒', '0', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('428', 'kafka', 'server.properties', '6', 'proxy', 'input', 'zookeeper.session.timeout.ms', '', '', '1000', '', '', '', '0', '101', null, '秒', '0', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('429', 'kafka', 'server.properties', 'false', 'proxy', 'radio', 'zookeeper.set.acl', '', '', '0', '', '', '', '0', '102', null, '', '0', 'boolean', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('43', 'kafka', 'server.properties', '500', 'proxy', 'input', 'queued.max.requests', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置请求队列大小。', '2', '70', null, '', '1', 'int', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('430', 'kafka', 'server.properties', 'class org.apache.kafka.common.security.auth.DefaultPrincipalBuilde', 'proxy', 'input', 'principal.builder.class', '', '', '0', '', '', '', '0', '103', null, '', '0', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('431', 'kafka', 'server.properties', '/usr/bin/kinit', 'proxy', 'input', 'sasl.kerberos.kinit.cmd', '', '', '0', '', '', '', '0', '104', null, '', '0', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('432', 'kafka', 'server.properties', '60000', 'proxy', 'input', 'sasl.kerberos.min.time.before.relogin', '', '', '0', '', '', '', '0', '105', null, '', '0', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('433', 'kafka', 'server.properties', '[DEFAULT]', 'proxy', 'input', 'sasl.kerberos.principal.to.local.rules', '', '', '0', '', '', '', '0', '106', null, '', '0', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('434', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'sasl.kerberos.service.name', '', '', '0', '', '', '', '0', '107', null, '', '0', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('435', 'kafka', 'server.properties', '0.05', 'proxy', 'input', 'sasl.kerberos.ticket.renew.jitter', '', '', '0', '', '', '', '0', '108', null, '', '0', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('436', 'kafka', 'server.properties', '0.8', 'proxy', 'input', 'sasl.kerberos.ticket.renew.window.factor', '', '', '0', '', '', '', '0', '109', null, '', '0', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('437', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'ssl.cipher.suites', '', '', '0', '', '', '', '0', '110', null, '', '0', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('438', 'kafka', 'server.properties', 'none', 'proxy', 'input', 'ssl.client.auth', '', '', '0', '', '', '', '0', '111', null, '', '0', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('439', 'kafka', 'server.properties', '[TLSv1.2, TLSv1.1, TLSv1]', 'proxy', 'input', 'ssl.enabled.protocols', '', '', '0', '', '', '', '0', '112', null, '', '0', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('44', 'kafka', 'server.properties', '9223372036854775807', 'proxy', 'input', 'quota.consumer.default', '', '', '0', '^[1-9]|([1-9]d+)$', '输入必须大于0的整数', '设置每秒消费数据受限大小，仅仅在未配置动态配额属性时使用。', '2', '71', null, '', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('440', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'ssl.key.password', '', '', '0', '', '', '', '0', '113', null, '', '0', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('441', 'kafka', 'server.properties', 'SunX509', 'proxy', 'input', 'ssl.keymanager.algorithm', '', '', '0', '', '', '', '0', '114', null, '', '0', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('442', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'ssl.keystore.location', '', '', '0', '', '', '', '0', '115', null, '', '0', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('443', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'ssl.keystore.password', '', '', '0', '', '', '', '0', '116', null, '', '0', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('444', 'kafka', 'server.properties', 'JKS', 'proxy', 'input', 'ssl.keystore.type', '', '', '0', '', '', '', '0', '117', null, '', '0', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('445', 'kafka', 'server.properties', 'TLS', 'proxy', 'input', 'ssl.protocol', '', '', '0', '', '', '', '0', '118', null, '', '0', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('446', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'ssl.provider', '', '', '0', '', '', '', '0', '119', null, '', '0', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('447', 'kafka', 'server.properties', 'PKIX', 'proxy', 'input', 'ssl.trustmanager.algorithm', '', '', '0', '', '', '', '0', '120', null, '', '0', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('448', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'ssl.truststore.location', '', '', '0', '', '', '', '0', '121', null, '', '0', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('449', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'ssl.truststore.password', '', '', '0', '', '', '', '0', '122', null, '', '0', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('45', 'kafka', 'server.properties', '9223372036854775807', 'proxy', 'input', 'quota.producer.default', '', '', '0', '^[1-9]|([1-9]d+)$', '输入必须大于0的整数', '设置每秒生产数据受限大小，仅仅在未配置动态配额属性时使用。', '2', '72', null, '', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('450', 'kafka', 'server.properties', 'JKS', 'proxy', 'input', 'ssl.truststore.type', '', '', '0', '', '', '', '0', '123', null, '', '0', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('451', 'kafka', 'server.properties', '\"\"', 'proxy', 'input', 'authorizer.class.name', '', '', '0', '', '', '', '0', '124', null, '', '0', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('452', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'ssl.endpoint.identification.algorithm', '', '', '0', '', '', '', '0', '125', null, '', '0', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('453', 'kafka', 'server.properties', '2', 'proxy', 'input', 'zookeeper.sync.time.ms', '', '', '1000', '', '', '', '0', '126', null, '秒', '0', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('454', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'broker.rack', '', '', '0', '', '', 'Rack of the broker. This will be used in rack aware replication assignment for fault tolerance. Examples: `RACK1`, `us-east-1d`', '0', '127', null, '', '0', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('455', 'kafka', 'server.properties', '0', 'proxy', 'input', 'log.cleaner.min.compaction.lag.ms', '', '', '1', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置消息在日志中保持未压缩的最短时间，仅适用于正在压缩的日志。', '2', '128', null, '单位:毫秒', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('456', 'kafka', 'server.properties', '0.10.1-IV2', 'proxy', 'input', 'log.message.format.version', '', '', '0', '', '', 'Specify the message format version the broker will use to append messages to the logs. The value should be a valid ApiVersion. Some examples are: 0.8.2, 0.9.0.0, 0.10.0, check ApiVersion for more details. By setting a particular message format version, the user is certifying that all the existing messages on disk are smaller or equal than the specified version. Setting this value incorrectly will cause consumers with older versions to break as they will receive messages with a format that they don\'t understand.', '0', '129', null, '', '0', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('457', 'kafka', 'server.properties', '9.223372036854776e15', 'proxy', 'input', 'log.message.timestamp.difference.max.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置接受消息时间戳与消息创建间戳的最大时间差。', '0', '130', null, '秒', '0', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('458', 'kafka', 'server.properties', 'CreateTime', 'proxy', 'radio', 'log.message.timestamp.type', '', '{\"CreateTime\":\"CreateTime\",\"LogAppendTime\":\"LogAppendTime\"}', '0', 'LogAppendTime|CreateTime', '必须输入LogAppendTime或者CreateTime', '设置日志消息的时间戳类型。', '2', '131', null, '', '1', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('459', 'kafka', 'server.properties', '10', 'proxy', 'input', 'replica.fetch.response.max.bytes', '', '', '1048576', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置备份数据获取数据的响应数据大小。', '2', '132', null, '单位:Mb', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('46', 'kafka', 'server.properties', '1', 'proxy', 'input', 'replica.fetch.max.bytes', '', '', '1048576', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置数据备份每次获取数据大小的最大值。', '2', '73', null, 'Mb', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('460', 'kafka', 'server.properties', '[GSSAPI]', 'proxy', 'input', 'sasl.enabled.mechanisms', '', '', '0', '', '', 'The list of SASL mechanisms enabled in the Kafka server. The list may contain any mechanism for which a security provider is available. Only GSSAPI is enabled by default.', '0', '133', null, '', '0', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('461', 'kafka', 'server.properties', 'GSSAPI', 'proxy', 'input', 'sasl.mechanism.inter.broker.protocol', '', '', '0', '', '', 'SASL mechanism used for inter-broker communication. Default is GSSAPI.', '0', '134', null, '', '0', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('462', 'kafka', 'server.properties', '11', 'proxy', 'input', 'replication.quota.window.num', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置保留在内存中备份配额的样本数。', '2', '135', null, '', '1', 'int', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('463', 'kafka', 'server.properties', '1', 'proxy', 'input', 'replication.quota.window.size.seconds', '', '', '0', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置每个样本备份配额的时间跨度。', '2', '136', null, '', '1', 'long', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('464', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'ssl.secure.random.implementation', '', '', '0', '', '', 'The SecureRandom PRNG implementation to use for SSL cryptography operations.', '0', '137', null, '', '0', 'String', '2.11-0.10.1.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('465', 'kafka', 'server.properties', '', 'proxy', 'input', 'zookeeper.connect', '', '', '0', '', '', 'Zookeeper host string', '0', '15', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('466', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'advertised.host.name', '', '', '0', '', '', 'Hostname to publish to ZooKeeper for clients to use. In IaaS environments, this may need to be different from the interface to which the broker binds. If this is not set, it will use the value for \"host.name\" if configured. Otherwise it will use the value returned from java.net.InetAddress.getCanonicalHostName().', '0', '16', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('467', 'kafka', 'server.properties', '10', 'proxy', 'input', 'leader.imbalance.per.broker.percentage', '', '', '0', '^(([1-9]\\d?)|100)$', '输入必须在1到100之间', '设置每个broker自动平衡百分比。', '2', '17', null, '', '1', 'int', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('468', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'listeners', '', '', '0', '', '', 'Listener List - Comma-separated list of URIs we will listen on and their protocols. Specify hostname as 0.0.0.0 to bind to all interfaces. Leave hostname empty to bind to default interface. Examples of legal listener lists: PLAINTEXT://myhost:9092,TRACE://:9091 PLAINTEXT://0.0.0.0:9092, TRACE://localhost:9093\n', '0', '18', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('469', 'kafka', 'server.properties', '9223372036854775807', 'proxy', 'input', 'log.flush.interval.messages', '', '', '0', '^[1-9]|([1-9]d+)$', '输入必须大于0的整数', '设置日志进行持久化操作的消息记录数间隔。', '2', '19', null, '', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('47', 'kafka', 'server.properties', '1', 'proxy', 'input', 'replica.fetch.min.bytes', '', '', '0', '^([1-9]\\d{0,17}|1000000000000000000)$', '输入值必须在1到1000000000000000000', '设置数据备份每次获取数据大小的最小值,如果leader中尚未同步的数据不足此值,将会阻塞,直到满足条件。', '2', '74', null, 'byte', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('470', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'log.flush.interval.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志进行持久化操作的时间间隔。', '2', '20', null, '秒', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('471', 'kafka', 'server.properties', '60', 'proxy', 'input', 'log.flush.offset.checkpoint.interval.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志刷新检测点的时间间隔。', '2', '21', null, '秒', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('472', 'kafka', 'server.properties', '9.223372036854776e15', 'proxy', 'input', 'log.flush.scheduler.interval.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置周期性持久操作的时间间隔。', '0', '22', null, '秒', '0', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('473', 'kafka', 'server.properties', '-1', 'proxy', 'input', 'log.retention.bytes', '', '', '1', '', '', '设置分区日志保留文件的大小，-1表示没有限制大小。', '0', '23', null, 'byte', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('474', 'kafka', 'server.properties', '168', 'proxy', 'input', 'log.retention.hours', '', '', '1', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志保存时间（单位：小时）。', '1', '13', null, '小时', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('475', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'log.retention.minutes', '', '', '1', '^null|([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志保存时间（单位：分钟）。', '2', '24', null, '分钟', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('476', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'log.retention.ms', '', '', '1000', '^null|([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志保存时间（单位：秒）。', '2', '25', null, '秒', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('477', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'advertised.listeners', '', '', '0', '', '', 'Listeners to publish to ZooKeeper for clients to use, if different than the listeners above. In IaaS environments, this may need to be different from the interface to which the broker binds. If this is not set, the value for \"listeners\" will be used.\n', '0', '26', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('478', 'kafka', 'server.properties', '168', 'proxy', 'input', 'log.roll.hours', '', '', '1', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置新日志生成时间间隔（单位：小时），次于 log.roll.ms 属性。', '2', '27', null, '小时', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('479', 'kafka', 'server.properties', '0', 'proxy', 'input', 'log.roll.jitter.hours', '', '', '1', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志切分段的时间（单位：小时 )，次要 log.roll.jitter.ms 属性。', '2', '28', null, '小时', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('48', 'kafka', 'server.properties', '500', 'proxy', 'input', 'replica.fetch.wait.max.ms', '', '', '1', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置数据备份获取数据的最大等待时间。', '2', '75', null, '毫秒', '1', 'int', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('480', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'log.roll.jitter.ms', '', '', '1000', '^null|([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志切分段的时间（单位：秒）。如果未设置该属性，则使用 log.roll.jitter.hours 的属性值。', '2', '29', null, '秒', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('481', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'log.roll.ms', '', '', '1000', '^null|([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置新日志生成时间间隔（单位：秒），如果未设置该属性，则使用 log.roll.hours 的属性值。', '2', '30', null, '秒', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('482', 'kafka', 'server.properties', '1024', 'proxy', 'input', 'log.segment.bytes', '', '', '1048576', '^([1-9]\\d{0,2})$|^([1]\\d{0,3}|2000)$', '输入值必须在1到2000', '设置日志段文件大小。', '1', '14', null, 'Mb', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('483', 'kafka', 'server.properties', '60', 'proxy', 'input', 'log.segment.delete.delay.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志段文件删除需要等待的时间。', '2', '31', null, '秒', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('484', 'kafka', 'server.properties', '1000012', 'proxy', 'input', 'message.max.bytes', '', '', '1', '^([1-9]\\d{0,17}|1000000000000000000)$', '输入值必须在1到1000000000000000000', '设置消息的最大数据大小，且不要大于fetch.message.max.bytes属性的值。', '2', '32', null, 'byte', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('485', 'kafka', 'server.properties', '1', 'proxy', 'input', 'min.insync.replicas', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置副本同步最小数量。', '2', '33', null, '', '1', 'int', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('486', 'kafka', 'server.properties', '8', 'proxy', 'input', 'num.io.threads', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置服务器用来处理请求的I/O线程的数目。', '1', '1', null, '', '1', 'int', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('487', 'kafka', 'server.properties', '3', 'proxy', 'input', 'num.network.threads', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置服务器用来处理网络请求的网络线程数目。', '1', '2', null, '', '1', 'int', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('488', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'advertised.port', '', '', '0', '', '', 'The port to publish to ZooKeeper for clients to use. In IaaS environments, this may need to be different from the port to which the broker binds. If this is not set, it will publish the same port that the broker binds to.\n', '0', '34', null, '', '0', 'int', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('489', 'kafka', 'server.properties', '1', 'proxy', 'input', 'num.recovery.threads.per.data.dir', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置每个数据目录用于日志恢复启动和关闭冲洗时的线程数量。', '1', '3', null, '', '1', 'int', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('49', 'kafka', 'server.properties', '5', 'proxy', 'input', 'replica.high.watermark.checkpoint.interval.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置每个备份将最高水位进行持久的间隔时间。', '2', '76', null, '秒', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('490', 'kafka', 'server.properties', '1', 'proxy', 'input', 'num.replica.fetchers', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置leader进行备份消息的线程数。', '2', '35', null, '', '1', 'int', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('491', 'kafka', 'server.properties', '4', 'proxy', 'input', 'offset.metadata.max.bytes', '', '', '1024', '^([1-9]\\d{0,17}|1000000000000000000)$', '输入值必须在1到1000000000000000000', '设置消费者保存元数据的最大的数据量。', '2', '36', null, 'Kb', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('492', 'kafka', 'server.properties', '-1', 'proxy', 'input', 'offsets.commit.required.acks', '', '', '0', '^-1|([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间或者为-1', '设置消息提交进行确认的数目。', '2', '37', null, '', '1', 'int', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('493', 'kafka', 'server.properties', '5', 'proxy', 'input', 'offsets.commit.timeout.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置消息提交超时时间。', '2', '38', null, '秒', '1', 'int', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('494', 'kafka', 'server.properties', '5', 'proxy', 'input', 'offsets.load.buffer.size', '', '', '1048576', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置读取消息的缓存大小。', '2', '39', null, 'Mb', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('495', 'kafka', 'server.properties', '600', 'proxy', 'input', 'offsets.retention.check.interval.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置消息保留检测的间隔时间。', '2', '40', null, '秒', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('496', 'kafka', 'server.properties', '24', 'proxy', 'input', 'offsets.retention.minutes', '', '', '60', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置消息的保留时间。', '2', '41', null, '小时', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('497', 'kafka', 'server.properties', '0', 'proxy', 'radio', 'offsets.topic.compression.codec', '', '{\"0\":\"0\",\"1\":\"1\",\"2\":\"2\"}', '0', '', '', '设置消息的压缩格式。0表示不压缩，1表示用gzip压缩，2表示用snappy压缩。', '2', '42', null, '', '1', 'int', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('498', 'kafka', 'server.properties', '50', 'proxy', 'input', 'offsets.topic.num.partitions', '', '', '0', '', '', 'The number of partitions for the offset commit topic (should not change after deployment)\n', '0', '43', null, '', '0', 'int', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('499', 'kafka', 'server.properties', 'true', 'proxy', 'radio', 'auto.create.topics.enable', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', '', '', 'Enable auto creation of topic on the server', '0', '44', null, '', '0', 'boolean', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('5', 'kafka', 'server.properties', 'true', 'proxy', 'radio', 'auto.leader.rebalance.enable', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', '', '', '设置自动leader平衡功能。true表示启用，false不是不启用。', '2', '77', null, '', '1', 'boolean', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('50', 'kafka', 'server.properties', '10', 'proxy', 'input', 'replica.lag.time.max.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置备份响应leader最长等待时间。', '2', '78', null, '秒', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('500', 'kafka', 'server.properties', '3', 'proxy', 'input', 'offsets.topic.replication.factor', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置话题消息备份个数。如果broker比复制因子少，该备份因子将以较少的副本创建。', '1', '4', null, '', '1', 'int', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('5000', 'memcached', 'memconf', '', '', 'radio', '-M', '关闭LRU功能', '{\"是\":\"ture\",\"否\":\"false\"}', '0', '^\\S*$', '不能为空，请选择', '使用本选项那么将关闭LRU功能', '1', '1', '', '', '1', 'String', '1.5.9');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('5001', 'memcached', 'memconf', '1024', '', 'input', '-c', '连接数', '', '0', '^[1-9]|([1-9]\\d+)$', '\"-c \"请输入不小于1的整数。示例：1024', '最多允许多少个客户端同时在线', '1', '2', '', '', '1', 'String', '1.5.9');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('5002', 'memcached', 'memconf', '', '', 'radio', '-k', '锁定内存', '{\"是\":\"true\",\"否\":\"false\"}', '0', '^\\S*$', '不能为空，请选择', '将memcached使用到的内存锁定在内存中，不准OS把memcached的内存移动到虚拟内存', '1', '3', '', '', '1', 'String', '1.5.9');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('5003', 'memcached', 'memconf', '', '', '', '-v', '日志等级', '', '0', '', '', '输出memcached运行时的一些信息。-v -vv 输出的信息依次增加。', '0', '4', '', '', '0', 'String', '1.5.9');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('5004', 'memcached', 'memconf', '1.25', '', 'input', '-f', '扩容因子', '', '0', '^[1-9].\\d+$', '\"-f \"请输入1.0-10.0之间的浮点数。示例: 1.25', 'item的扩容因子。默认值为1.25。该选项的参数值可以是小数但必须大于1.0', '1', '5', '', '', '1', 'String', '1.5.9');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('5005', 'memcached', 'memconf', '48', '', 'input', '-n', 'item存储', '', '0', '^[1-9]|([1-9]\\d+)$', '\"-n \"请输入不小于1的整数。示例：48', '设置最小的item能存储多少字节的数据', '1', '6', '', '字节', '1', 'String', '1.5.9');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('5006', 'memcached', 'memconf', '20', '', 'input', '-R', '线程设置', '', '0', '^[1-9]|([1-9]\\d+)$', '\"-R \"请输入不小于1的整数。示例：20', 'worker线程连续为某个客户端执行命令的最大命令数', '1', '7', '', '', '1', 'String', '1.5.9');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('5007', 'memcached', 'memconf', '', '', '', '-l', '监控IP地址', '', '0', '', '', 'memcached绑定的ip地址。如果不设置这个选项，那么memcached将使用INADDR_ANY。如果想指定多个IP地址，那么该选项的参数可以由多个ip组成，ip之间用逗号分隔。', '0', '8', '', '', '0', '', '1.5.9');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('5008', 'memcached', 'memconf', '', '', '', '-d', '守护进程', '', '0', '', '', '以守护进程的形式运行memcached', '0', '9', '', '', '0', '', '1.5.9');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('5009', 'memcached', 'memconf', '', '', '', '-m', '指定内存', '', '0', '', '', '指定内存大小', '0', '10', '', '', '0', '', '1.5.9');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('501', 'kafka', 'server.properties', '100', 'proxy', 'input', 'offsets.topic.segment.bytes', '', '', '1048576', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置话题消息段文件大小。', '2', '45', null, 'Mb', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('5010', 'memcached', 'memconf', '', '', '', '-P', '保存pid文件', '', '0', '', '', '保存pid文件', '0', '11', '', '', '0', '', '1.5.9');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('5011', 'memcached', 'memconf', '', '', '', '-u', '用户', '', '0', '', '', '当以root用户启动memcached的时候需要指定memcached的所属用户，其他用户启动memcached不需要此选项', '0', '12', '', '', '0', '', '1.5.9');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('5012', 'memcached', 'memconf', '', '', '', '-p', '端口号', '', '0', '', '', 'Memcached监听的端口号', '0', '13', '', '', '0', '', '1.5.9');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('502', 'kafka', 'server.properties', '9092', 'proxy', 'input', 'port', '', '', '0', '', '', ' the port to listen and accept connections on', '0', '46', null, '', '0', 'int', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('503', 'kafka', 'server.properties', '500', 'proxy', 'input', 'queued.max.requests', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置请求队列大小。', '2', '47', null, '', '1', 'int', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('504', 'kafka', 'server.properties', '9223372036854775807', 'proxy', 'input', 'quota.consumer.default', '', '', '0', '^[1-9]|([1-9]d+)$', '输入必须大于0的整数', '设置每秒消费数据受限大小，仅仅在未配置动态配额属性时使用。', '2', '48', null, '', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('505', 'kafka', 'server.properties', '9223372036854775807', 'proxy', 'input', 'quota.producer.default', '', '', '0', '^[1-9]|([1-9]d+)$', '输入必须大于0的整数', '设置每秒生产数据受限大小，仅仅在未配置动态配额属性时使用。', '2', '49', null, '', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('506', 'kafka', 'server.properties', '1', 'proxy', 'input', 'replica.fetch.max.bytes', '', '', '1048576', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置数据备份每次获取数据大小的最大值。', '2', '50', null, 'Mb', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('507', 'kafka', 'server.properties', '1', 'proxy', 'input', 'replica.fetch.min.bytes', '', '', '0', '^([1-9]\\d{0,17}|1000000000000000000)$', '输入值必须在1到1000000000000000000', '设置数据备份每次获取数据大小的最小值,如果leader中尚未同步的数据不足此值,将会阻塞,直到满足条件。', '2', '51', null, 'byte', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('508', 'kafka', 'server.properties', '500', 'proxy', 'input', 'replica.fetch.wait.max.ms', '', '', '1', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置数据备份获取数据的最大等待时间。', '2', '52', null, '毫秒', '1', 'int', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('509', 'kafka', 'server.properties', '5', 'proxy', 'input', 'replica.high.watermark.checkpoint.interval.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置每个备份将最高水位进行持久的间隔时间。', '2', '53', null, '秒', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('51', 'kafka', 'server.properties', '64', 'proxy', 'input', 'replica.socket.receive.buffer.bytes', '', '', '1024', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置备份接受请求的缓存大小。', '2', '79', null, 'Kb', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('510', 'kafka', 'server.properties', 'true', 'proxy', 'radio', 'auto.leader.rebalance.enable', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', '', '', '设置自动leader平衡功能。true表示启用，false不是不启用。', '2', '54', null, '', '1', 'boolean', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('5100', 'postgresql', 'postgresql.conf', '100', null, 'text', 'max_connections', '最大连接数', 'NULL', '1', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', '指定数据库允许的最大并发连接数', '1', '1', 'NULL', 'NULL', '1', 'int', '10.5.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('5101', 'postgresql', 'postgresql.conf', '3', null, 'text', 'superuser_reserved_connections', '超级用户预保留的连接数', 'NULL', '1', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', '超级用户预保留的连接数', '2', '2', 'NULL', 'NULL', '1', 'int', '10.5.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('5102', 'postgresql', 'postgresql.conf', '128', null, 'text', 'shared_buffers', '共享内存缓冲区', 'NULL', '1', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', '共享内存缓冲区大小', '1', '3', 'M', 'M', '1', 'int', '10.5.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('5103', 'postgresql', 'postgresql.conf', '8', null, 'text', 'temp_buffers', '临时缓冲区', 'NULL', '1', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', '临时缓冲区大小', '1', '4', 'M', 'M', '1', 'int', '10.5.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('5104', 'postgresql', 'postgresql.conf', '0', null, 'text', 'max_prepared_transactions', '处于准备状态的最大事务数', 'NULL', '1', '^[0-9]|([1-9]\\d+)$', '请输入大于等于0的整数', '处于准备状态的最大事务数', '2', '5', 'NULL', 'NULL', '1', 'int', '10.5.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('5105', 'postgresql', 'postgresql.conf', '4', null, 'text', 'work_mem', '工作内存', 'NULL', '1', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', '工作内存大小', '1', '6', 'M', 'M', '1', 'int', '10.5.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('5106', 'postgresql', 'postgresql.conf', '64', null, 'text', 'maintenance_work_mem', '指定维护操作要使用的最大内存量', 'NULL', '1', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', '指定维护操作要使用的最大内存量，例如VACUUM，CREATE INDEX和ALTER TABLE ADD FOREIGN KEY', '2', '7', 'M', 'M', '1', 'int', '10.5.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('5107', 'postgresql', 'postgresql.conf', '2', null, 'text', 'max_stack_depth', '指定服务器执行堆栈的最大安全深度', 'NULL', '1', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', '指定服务器执行堆栈的最大安全深度', '2', '8', 'M', 'M', '1', 'int', '10.5.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('5108', 'postgresql', 'postgresql.conf', '1000', null, 'text', 'max_files_per_process', '允许每个服务器子进程的最大同时打开文件数', 'NULL', '1', '^[1-9]|([1-9]\\d+)$', '请输入大于1的整数', '允许每个服务器子进程的最大同时打开文件数', '1', '9', 'NULL', 'NULL', '1', 'int', '10.5.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('5109', 'postgresql', 'postgresql.conf', '4', null, 'text', 'effective_cache_size', '查询可以使用的最大内存', 'NULL', '1', '^[1-9]|([1-9]\\d+)$', '请输入大于1的整数', '优化器假设一个查询可以使用的最大内存', '1', '10', 'G', 'G', '1', 'int', '10.5.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('511', 'kafka', 'server.properties', '10', 'proxy', 'input', 'replica.lag.time.max.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置备份响应leader最长等待时间。', '2', '55', null, '秒', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('5110', 'postgresql', 'postgresql.conf', '768', null, 'text', 'wal_buffers', '日志缓冲区', 'NULL', '1', '^[1-9]|([1-10]\\d+)$', '请输入大于1的整数', '日志缓冲区大小', '1', '11', 'K', 'K', '1', 'int', '10.5.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('5111', 'postgresql', 'postgresql.conf', '3', null, 'text', 'checkpoint_segments', '自动触发检查点时,最大的WAL日志文件段的数量', 'NULL', '1', '(^[3-9][0-9]$)|(^[1-9]\\d{2,4}$)', '请输入30到86400的整数', '自动触发检查点时,最大的WAL日志文件段的数量', '1', '12', 'NULL', 'NULL', '1', 'int', '10.5.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('5112', 'postgresql', 'postgresql.conf', '300', null, 'text', 'checkpoint_timeout', '自动触发检查点之间的最长时间', 'NULL', '1', '^[1-9]|([1-10]\\d+)$', '请输入大于1的整数', '自动触发检查点之间的最长时间', '1', '13', 's', '秒', '1', 'int', '10.5.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('5113', 'postgresql', 'postgresql.conf', '0.5', null, 'text', 'checkpoint_completion_target', '完成检查点所需要的时间占检查点之间总时间的目标比例', 'NULL', '1', '^0\\.([1-9]|[0-9][1-9])$', '请输入大于0小于1的小数', '完成检查点所需要的时间占检查点之间总时间的目标比例', '2', '14', 'NULL', 'NULL', '1', 'long', '10.5.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('5114', 'postgresql', 'postgresql.conf', '0', null, 'text', 'commit_delay', '事务提交后，日志写到wal log上到wal_buffer写入到磁盘的时间间隔', 'NULL', '1', '^0|^([1-9]\\d{0,4}|100000)$', '请输入0到100000的整数', '事务提交后，日志写到wal log上到wal_buffer写入到磁盘的时间间隔', '2', '15', 'NULL', '微秒', '1', 'int', '10.5.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('5115', 'postgresql', 'postgresql.conf', '5', null, 'text', 'commit_siblings', '设置触发commit_delay的并发事务数', 'NULL', '1', '^([1-9]\\d{0,2}|1000)$', '请输入1到1000的整数', '设置触发commit_delay的并发事务数', '2', '16', 'NULL', 'NULL', '1', 'int', '10.5.1');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('512', 'kafka', 'server.properties', '64', 'proxy', 'input', 'replica.socket.receive.buffer.bytes', '', '', '1024', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置备份接受请求的缓存大小。', '2', '56', null, 'Kb', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('513', 'kafka', 'server.properties', '30', 'proxy', 'input', 'replica.socket.timeout.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置备份网络超时时间，至少等于replica.fetch.wait.max.ms属性值。', '2', '57', null, '秒', '1', 'int', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('514', 'kafka', 'server.properties', '30', 'proxy', 'input', 'request.timeout.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置等待请求响应的超时时间。', '2', '58', null, '秒', '1', 'int', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('515', 'kafka', 'server.properties', '100', 'proxy', 'input', 'socket.receive.buffer.bytes', '', '', '1024', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置接受数据缓冲区大小。', '1', '5', null, 'Kb', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('516', 'kafka', 'server.properties', '100', 'proxy', 'input', 'socket.request.max.bytes', '', '', '1048576', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置接受请求数据的最大大小，这是为了防止server跑光内存，不能大于Java堆的大小。', '1', '6', null, 'Mb', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('517', 'kafka', 'server.properties', '100', 'proxy', 'input', 'socket.send.buffer.bytes', '', '', '1024', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置服务端发送数据的缓冲区大小。', '1', '7', null, 'Kb', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('518', 'kafka', 'server.properties', 'true', 'proxy', 'radio', 'unclean.leader.election.enable', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', '', '', '设置开启在副本中选举leader, true表示开启，false表示不开启。', '2', '59', null, '', '1', 'boolean', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('519', 'kafka', 'server.properties', 'true', 'proxy', 'radio', 'broker.id.generation.enable', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', '', '', 'Enable automatic broker id generation on the server? When enabled the value configured for reserved.broker.max.id should be reviewed.\n', '0', '60', null, '', '0', 'boolean', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('52', 'kafka', 'server.properties', '30', 'proxy', 'input', 'replica.socket.timeout.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置备份网络超时时间，至少等于replica.fetch.wait.max.ms属性值。', '2', '80', null, '秒', '1', 'int', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('520', 'kafka', 'server.properties', '600', 'proxy', 'input', 'connections.max.idle.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置连接空闲的超时时间。', '2', '61', null, '秒', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('521', 'kafka', 'server.properties', '10', 'proxy', 'input', 'background.threads', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置后台任务处理的线程数。', '2', '62', null, '', '1', 'int', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('522', 'kafka', 'server.properties', 'true', 'proxy', 'radio', 'controlled.shutdown.enable', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', '', '', 'Enable controlled shutdown of the server', '0', '63', null, '', '0', 'boolean', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('523', 'kafka', 'server.properties', '3', 'proxy', 'input', 'controlled.shutdown.max.retries', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置控制关闭任务的最大重试次数。', '2', '64', null, '', '1', 'int', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('524', 'kafka', 'server.properties', '5', 'proxy', 'input', 'controlled.shutdown.retry.backoff.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置控制关闭任务失败重试的等待时间。', '2', '65', null, '秒', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('525', 'kafka', 'server.properties', '30', 'proxy', 'input', 'controller.socket.timeout.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置broker控制的网络超时时间。', '2', '66', null, '秒', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('526', 'kafka', 'server.properties', '1', 'proxy', 'input', 'default.replication.factor', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置分区默认的分区备份个数，不能大于集群中broker的个数。', '2', '67', null, '', '1', 'int', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('527', 'kafka', 'server.properties', '1000', 'proxy', 'input', 'fetch.purgatory.purge.interval.requests', '', '', '1', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置清除consumer历史获取request记录间隔时间。', '2', '68', null, '毫秒', '1', 'int', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('528', 'kafka', 'server.properties', '30', 'proxy', 'input', 'group.max.session.timeout.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置consumer允许的最大超时时间。', '2', '69', null, '秒', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('529', 'kafka', 'server.properties', '6', 'proxy', 'input', 'group.min.session.timeout.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置consumer允许的最小超时时间。', '2', '70', null, '秒', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('53', 'kafka', 'server.properties', '30', 'proxy', 'input', 'request.timeout.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置等待请求响应的超时时间。', '2', '81', null, '秒', '1', 'int', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('530', 'kafka', 'server.properties', '0.9.0.X', 'proxy', 'input', 'inter.broker.protocol.version', '', '', '0', '', '', 'Specify which version of the inter-broker protocol will be used. This is typically bumped after all brokers were upgraded to a new version\n', '0', '71', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('531', 'kafka', 'server.properties', '15', 'proxy', 'input', 'log.cleaner.backoff.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志清理需要等待的时间。', '2', '72', null, '秒', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('532', 'kafka', 'server.properties', 'producer', 'proxy', 'select', 'compression.type', '', '{\"producer\":\"producer\",\"uncompressed\":\"uncompressed\"}', '0', '', '', ' Specify the final compression type for a given topic. This configuration accepts the standard compression codecs (\'gzip\', \'snappy\', lz4). It additionally accepts \'uncompressed\' which is equivalent to no compression; and \'producer\' which means retain the original compression codec set by the producer.', '0', '73', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('533', 'kafka', 'server.properties', '134217728', 'proxy', 'input', 'log.cleaner.dedupe.buffer.size', '', '', '0', '', '', 'The total memory used for log deduplication across all cleaner threads\n', '0', '74', null, '', '0', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('534', 'kafka', 'server.properties', '24', 'proxy', 'input', 'log.cleaner.delete.retention.ms', '', '', '3600000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置保存压缩日志的最长时间。', '2', '75', null, '小时', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('535', 'kafka', 'server.properties', 'true', 'proxy', 'radio', 'log.cleaner.enable', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', '', '', '设置开启日志压缩功能。设置true表示开启日志压缩,否则不压缩。', '2', '76', null, '', '1', 'boolean', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('536', 'kafka', 'server.properties', '0.9', 'proxy', 'input', 'log.cleaner.io.buffer.load.factor', '', '', '0', '^\\S*$', '输入不能为空', '设置日志清理io缓冲区hash表增长因子。', '2', '77', null, '', '1', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('537', 'kafka', 'server.properties', '512', 'proxy', 'input', 'log.cleaner.io.buffer.size', '', '', '1024', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志清理io缓冲区大小。', '2', '78', null, 'Kb', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('538', 'kafka', 'server.properties', '1.7976931348623157E308', 'proxy', 'input', 'log.cleaner.io.max.bytes.per.second', '', '', '0', '^([1-9]\\d{0,17}|1000000000000000000)$', '输入值必须在1到1000000000000000000', '设置每秒日志清理数据受限大小。', '0', '79', null, '', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('539', 'kafka', 'server.properties', '0.5', 'proxy', 'input', 'log.cleaner.min.cleanable.ratio', '', '', '0', '^\\S*$', '输入不能为空', '设置日志清理最小可清理的百分比。', '2', '80', null, '', '1', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('54', 'kafka', 'server.properties', '100', 'proxy', 'input', 'socket.receive.buffer.bytes', '', '', '1024', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置接受数据缓冲区大小。', '1', '4', null, 'Kb', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('540', 'kafka', 'server.properties', '1', 'proxy', 'input', 'log.cleaner.threads', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置日志压缩运行的线程数。', '2', '81', null, '', '1', 'int', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('541', 'kafka', 'server.properties', 'delete', 'proxy', 'select', 'log.cleanup.policy', '', '{\"compact\":\"compact\",\"delete\":\"delete\"}', '0', 'compact|delete', '必须输入delete或者compact', '设置超出保留窗口的段清除策略。设置“delete\"表示删除， 设置“compact”表示压缩。', '2', '82', null, '', '1', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('542', 'kafka', 'server.properties', '4', 'proxy', 'input', 'log.index.interval.bytes', '', '', '1024', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置每次获取日志数据的索引数量大小。', '2', '83', null, 'Kb', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('543', 'kafka', 'server.properties', 'false', 'proxy', 'radio', 'delete.topic.enable', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', '', '', 'Enables delete topic. Delete topic through the admin tool will have no effect if this config is turned off\n', '0', '84', null, '', '0', 'boolean', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('544', 'kafka', 'server.properties', '10', 'proxy', 'input', 'log.index.size.max.bytes', '', '', '1048576', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置每个日志数据段文件的消息索引数量上限。当达到此上限将生成新消息段文件。', '2', '85', null, 'Mb', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('545', 'kafka', 'server.properties', 'false', 'proxy', 'radio', 'log.preallocate', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', '', '', '设置预先创建新文件属性，windows推荐使用。', '2', '86', null, '', '1', 'boolean', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('546', 'kafka', 'server.properties', '300', 'proxy', 'input', 'log.retention.check.interval.ms ', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志保留检测间隔时间。', '1', '12', null, '秒', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('547', 'kafka', 'server.properties', '2147483647', 'proxy', 'input', 'max.connections.per.ip', '', '', '0', '', '', '设置每个ip地址最大连接数目。', '0', '87', null, '', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('548', 'kafka', 'server.properties', '\"\"', 'proxy', 'input', 'max.connections.per.ip.overrides', '', '', '0', '^\\S*$', '输入不能为空', '设置每个 IP将覆盖默认的最大连接数。', '2', '88', null, '', '1', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('549', 'kafka', 'server.properties', '1', 'proxy', 'input', 'num.partitions', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置日志分区数量。', '1', '8', null, '', '1', 'int', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('55', 'kafka', 'server.properties', '100', 'proxy', 'input', 'socket.request.max.bytes', '', '', '1048576', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置接受请求数据的最大大小，这是为了防止server跑光内存，不能大于Java堆的大小。', '1', '5', null, 'Mb', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('550', 'kafka', 'server.properties', '1000', 'proxy', 'input', 'producer.purgatory.purge.interval.requests', '', '', '1', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置生产者请求清除时间。', '2', '89', null, '毫秒', '1', 'int', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('551', 'kafka', 'server.properties', '1', 'proxy', 'input', 'replica.fetch.backoff.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置备份数据失败的等待时间。', '2', '90', null, '秒', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('552', 'kafka', 'server.properties', '1000', 'proxy', 'input', 'reserved.broker.max.id', '', '', '0', '', '', 'Max number that can be used for a broker.id', '0', '91', null, '', '0', 'int', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('553', 'kafka', 'server.properties', 'PLAINTEXT', 'proxy', 'input', 'security.inter.broker.protocol', '', '', '0', '', '', 'Security protocol used to communicate between brokers', '0', '92', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('554', 'kafka', 'server.properties', '300', 'proxy', 'input', 'leader.imbalance.check.interval.seconds', '', '', '1', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置leader平衡检测的间隔时间。', '2', '93', null, '秒', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('555', 'kafka', 'server.properties', '[]', 'proxy', 'input', 'metric.reporters', '', '', '0', '[]|^\\S*$', '输入不能为空', '设置度量记录的类的列表。实现MetricReporter接口允许插入将被通知新度量标准创建的类。JmxReporter 始终包含在注册 JMX 统计信息中。', '2', '94', null, '', '1', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('556', 'kafka', 'server.properties', '2', 'proxy', 'input', 'metrics.num.samples', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置计算度量标准的样本数量。', '2', '95', null, '', '1', 'int', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('557', 'kafka', 'server.properties', '30', 'proxy', 'input', 'metrics.sample.window.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置计算度量标准的样本数量。', '2', '96', null, '秒', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('558', 'kafka', 'server.properties', '11', 'proxy', 'input', 'quota.window.num', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入值必须在1到1000000000', '设置内存中保留的样本数量。', '2', '97', null, '', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('559', 'kafka', 'server.properties', '1', 'proxy', 'input', 'quota.window.size.seconds', '', '', '1', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置每个样本的时间跨度。', '2', '98', null, '秒', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('56', 'kafka', 'server.properties', '100', 'proxy', 'input', 'socket.send.buffer.bytes', '', '', '1024', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置服务端发送数据的缓冲区大小。', '1', '6', null, 'Kb', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('560', 'kafka', 'server.properties', '-1', 'proxy', 'input', 'broker.id', '', '', '0', '', '', '', '0', '99', null, '', '0', 'int', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('561', 'kafka', 'server.properties', '\"\"', 'proxy', 'input', 'host.name', '', '', '0', '', '', '', '0', '100', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('562', 'kafka', 'server.properties', '/tmp/kafka-logs', 'proxy', 'input', 'log.dir', '', '', '0', '', '', '', '0', '101', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('563', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'log.dirs', '', '', '0', '', '', '', '0', '102', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('564', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'zookeeper.connection.timeout.ms', '', '', '1000', '', '', '', '0', '103', null, '秒', '0', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('565', 'kafka', 'server.properties', '6', 'proxy', 'input', 'zookeeper.session.timeout.ms', '', '', '1000', '', '', '', '0', '104', null, '秒', '0', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('566', 'kafka', 'server.properties', 'false', 'proxy', 'radio', 'zookeeper.set.acl', '', '', '0', '', '', '', '0', '105', null, '', '0', 'boolean', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('567', 'kafka', 'server.properties', 'class org.apache.kafka.common.security.auth.DefaultPrincipalBuilde', 'proxy', 'input', 'principal.builder.class', '', '', '0', '', '', '', '0', '106', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('568', 'kafka', 'server.properties', '/usr/bin/kinit', 'proxy', 'input', 'sasl.kerberos.kinit.cmd', '', '', '0', '', '', '', '0', '107', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('569', 'kafka', 'server.properties', '60000', 'proxy', 'input', 'sasl.kerberos.min.time.before.relogin', '', '', '0', '', '', '', '0', '108', null, '', '0', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('57', 'kafka', 'server.properties', 'true', 'proxy', 'radio', 'unclean.leader.election.enable', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', '', '', '设置开启在副本中选举leader, true表示开启，false表示不开启。', '2', '82', null, '', '1', 'boolean', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('570', 'kafka', 'server.properties', '[DEFAULT]', 'proxy', 'input', 'sasl.kerberos.principal.to.local.rules', '', '', '0', '', '', '', '0', '109', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('571', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'sasl.kerberos.service.name', '', '', '0', '', '', '', '0', '110', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('572', 'kafka', 'server.properties', '0.05', 'proxy', 'input', 'sasl.kerberos.ticket.renew.jitter', '', '', '0', '', '', '', '0', '111', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('573', 'kafka', 'server.properties', '0.8', 'proxy', 'input', 'sasl.kerberos.ticket.renew.window.factor', '', '', '0', '', '', '', '0', '112', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('574', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'ssl.cipher.suites', '', '', '0', '', '', '', '0', '113', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('575', 'kafka', 'server.properties', 'none', 'proxy', 'input', 'ssl.client.auth', '', '', '0', '', '', '', '0', '114', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('576', 'kafka', 'server.properties', '[TLSv1.2, TLSv1.1, TLSv1]', 'proxy', 'input', 'ssl.enabled.protocols', '', '', '0', '', '', '', '0', '115', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('577', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'ssl.key.password', '', '', '0', '', '', '', '0', '116', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('578', 'kafka', 'server.properties', 'SunX509', 'proxy', 'input', 'ssl.keymanager.algorithm', '', '', '0', '', '', '', '0', '117', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('579', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'ssl.keystore.location', '', '', '0', '', '', '', '0', '118', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('58', 'kafka', 'server.properties', 'true', 'proxy', 'radio', 'broker.id.generation.enable', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', '', '', 'Enable automatic broker id generation on the server? When enabled the value configured for reserved.broker.max.id should be reviewed.\n', '0', '83', null, '', '0', 'boolean', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('580', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'ssl.keystore.password', '', '', '0', '', '', '', '0', '119', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('581', 'kafka', 'server.properties', 'JKS', 'proxy', 'input', 'ssl.keystore.type', '', '', '0', '', '', '', '0', '120', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('582', 'kafka', 'server.properties', 'TLS', 'proxy', 'input', 'ssl.protocol', '', '', '0', '', '', '', '0', '121', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('583', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'ssl.provider', '', '', '0', '', '', '', '0', '122', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('584', 'kafka', 'server.properties', 'PKIX', 'proxy', 'input', 'ssl.trustmanager.algorithm', '', '', '0', '', '', '', '0', '123', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('585', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'ssl.truststore.location', '', '', '0', '', '', '', '0', '124', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('586', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'ssl.truststore.password', '', '', '0', '', '', '', '0', '125', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('587', 'kafka', 'server.properties', 'JKS', 'proxy', 'input', 'ssl.truststore.type', '', '', '0', '', '', '', '0', '126', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('588', 'kafka', 'server.properties', '\"\"', 'proxy', 'input', 'authorizer.class.name', '', '', '0', '', '', '', '0', '127', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('589', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'ssl.endpoint.identification.algorithm', '', '', '0', '', '', '', '0', '128', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('59', 'kafka', 'server.properties', '600', 'proxy', 'input', 'connections.max.idle.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置连接空闲的超时时间。', '2', '84', null, '秒', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('590', 'kafka', 'server.properties', '2', 'proxy', 'input', 'zookeeper.sync.time.ms', '', '', '1000', '', '', '', '0', '129', null, '秒', '0', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('591', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'broker.rack', '', '', '0', '', '', 'Rack of the broker. This will be used in rack aware replication assignment for fault tolerance. Examples: `RACK1`, `us-east-1d`', '0', '130', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('592', 'kafka', 'server.properties', '0', 'proxy', 'input', 'log.cleaner.min.compaction.lag.ms', '', '', '1', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置消息在日志中保持未压缩的最短时间，仅适用于正在压缩的日志。', '2', '131', null, '毫秒', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('593', 'kafka', 'server.properties', '1.0-IV0', 'proxy', 'input', 'log.message.format.version', '', '', '0', '', '', 'Specify the message format version the broker will use to append messages to the logs. The value should be a valid ApiVersion. Some examples are: 0.8.2, 0.9.0.0, 0.10.0, check ApiVersion for more details. By setting a particular message format version, the user is certifying that all the existing messages on disk are smaller or equal than the specified version. Setting this value incorrectly will cause consumers with older versions to break as they will receive messages with a format that they don\'t understand.', '0', '132', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('594', 'kafka', 'server.properties', '9.223372036854776e15', 'proxy', 'input', 'log.message.timestamp.difference.max.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置接受消息时间戳与消息创建间戳的最大时间差。', '0', '133', null, '秒', '0', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('595', 'kafka', 'server.properties', 'CreateTime', 'proxy', 'radio', 'log.message.timestamp.type', '', '{\"CreateTime\":\"CreateTime\",\"LogAppendTime\":\"LogAppendTime\"}', '0', 'LogAppendTime|CreateTime', '必须输入LogAppendTime或者CreateTime', '设置日志消息的时间戳类型。', '2', '134', null, '', '1', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('596', 'kafka', 'server.properties', '10', 'proxy', 'input', 'replica.fetch.response.max.bytes', '', '', '1048576', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置备份数据获取数据的响应数据大小。', '2', '135', null, 'Mb', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('597', 'kafka', 'server.properties', 'GSSAPI', 'proxy', 'input', 'sasl.enabled.mechanisms', '', '', '0', '', '', 'The list of SASL mechanisms enabled in the Kafka server. The list may contain any mechanism for which a security provider is available. Only GSSAPI is enabled by default.', '0', '136', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('598', 'kafka', 'server.properties', 'GSSAPI', 'proxy', 'input', 'sasl.mechanism.inter.broker.protocol', '', '', '0', '', '', 'SASL mechanism used for inter-broker communication. Default is GSSAPI.', '0', '137', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('599', 'kafka', 'server.properties', '11', 'proxy', 'input', 'replication.quota.window.num', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置保留在内存中备份配额的样本数。', '2', '138', null, '', '1', 'int', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('6', 'kafka', 'server.properties', '10', 'proxy', 'input', 'background.threads', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置后台任务处理的线程数。', '2', '85', null, '', '1', 'int', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('60', 'kafka', 'server.properties', 'true', 'proxy', 'radio', 'controlled.shutdown.enable', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', '', '', 'Enable controlled shutdown of the server', '0', '86', null, '', '0', 'boolean', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('600', 'kafka', 'server.properties', '1', 'proxy', 'input', 'replication.quota.window.size.seconds', '', '', '1', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置每个样本备份配额的时间跨度。', '2', '139', null, '秒', '1', 'int', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('601', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'ssl.secure.random.implementation', '', '', '0', '', '', 'The SecureRandom PRNG implementation to use for SSL cryptography operations.', '0', '140', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('602', 'kafka', 'server.properties', '60', 'proxy', 'input', 'log.flush.start.offset.checkpoint.interval.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置持久化日志起始检测点间隔时间。', '2', '141', null, '秒', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('603', 'kafka', 'server.properties', '15', 'proxy', 'input', 'transaction.max.timeout.ms', '', '', '60000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置事务最大超时时间。', '2', '142', null, '分钟', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('604', 'kafka', 'server.properties', '5', 'proxy', 'input', 'transaction.state.log.load.buffer.size', '', '', '1048576', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置事务状态日志加载缓冲区大小。', '2', '143', null, 'Mb', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('605', 'kafka', 'server.properties', '2', 'proxy', 'input', 'transaction.state.log.min.isr', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置事务状态日志最小备份同步队列大小。', '1', '9', null, '', '1', 'int', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('606', 'kafka', 'server.properties', '50', 'proxy', 'input', 'transaction.state.log.num.partitions', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置事务主题的分区数量，部署后不应更改。', '2', '144', null, '', '1', 'int', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('607', 'kafka', 'server.properties', '3', 'proxy', 'input', 'transaction.state.log.replication.factor', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置事务状态日志副本数目。', '1', '10', null, '', '1', 'int', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('608', 'kafka', 'server.properties', '100', 'proxy', 'input', 'transaction.state.log.segment.bytes', '', '', '1048576', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置事务状态日志段文件大小。', '2', '145', null, 'Mb', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('609', 'kafka', 'server.properties', '168', 'proxy', 'input', 'transactional.id.expiration.ms', '', '', '3600000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置事务id失效时间。', '2', '146', null, '小时', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('61', 'kafka', 'server.properties', '3', 'proxy', 'input', 'controlled.shutdown.max.retries', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置控制关闭任务的最大重试次数。', '2', '87', null, '', '1', 'int', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('610', 'kafka', 'server.properties', '1', 'proxy', 'input', 'delete.records.purgatory.purge.interval.requests', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置删除记录请求清除间隔时间。', '2', '147', null, '', '1', 'int', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('611', 'kafka', 'server.properties', '3', 'proxy', 'input', 'group.initial.rebalance.delay.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置消费组初始重新平衡需要的等待时间。', '1', '11', null, '秒', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('612', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'inter.broker.listener.name', '', '', '0', '', '', 'Name of listener used for communication between brokers. If this is unset, the listener name is defined by security.inter.broker.protocol. It is an error to set this and security.inter.broker.protocol properties at the same time.', '0', '148', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('613', 'kafka', 'server.properties', '-1', 'proxy', 'input', 'queued.max.request.bytes', '', '', '0', '', '', 'The number of queued bytes allowed before no more requests are read', '0', '149', null, 'byte', '0', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('614', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'alter.config.policy.class.name', '', '', '0', 'null|^\\S*$', '输入符合null或者非空字符', '设置更改配置策略类名。该类应该实现org.apache.kafka.server.policy.AlterConfigPolicy接口。', '2', '150', null, '', '1', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('615', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'create.topic.policy.class.name', '', '', '0', 'null|^\\S*$', '输入符合null或者非空字符', '设置创建主题策略类名。该类应该实现org.apache.kafka.server.policy.CreateTopicPolicy接口。', '2', '151', null, '', '1', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('616', 'kafka', 'server.properties', 'PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL', 'proxy', 'input', 'listener.security.protocol.map', '', '', '0', '', '', 'Map between listener names and security protocols. This must be defined for the same security protocol to be usable in more than one port or IP. For example, internal and external traffic can be separated even if SSL is required for both. Concretely, the user could define listeners with names INTERNAL and EXTERNAL and this property as: `INTERNAL:SSL,EXTERNAL:SSL`. As shown, key and value are separated by a colon and map entries are separated by commas. Each listener name should only appear once in the map. Different security (SSL and SASL) settings can be configured for each listener by adding a normalised prefix (the listener name is lowercased) to the config name. For example, to set a different keystore for the INTERNAL listener, a config with name `listener.name.internal.ssl.keystore.location` would be set. If the config for the listener name is not set, the config will fallback to the generic config (i.e. `ssl.keystore.location`).', '0', '152', null, '', '0', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('617', 'kafka', 'server.properties', 'INFO', 'proxy', 'input', 'metrics.recording.level', '', '', '0', '^\\S*$', '输入不能为空', '设置指标的最高记录级别。', '2', '153', null, '', '1', 'String', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('618', 'kafka', 'server.properties', '1', 'proxy', 'input', 'reconnect.backoff.max.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置连接失败进行重新连接需要的最大等待时间。', '2', '154', null, '秒', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('619', 'kafka', 'server.properties', '50', 'proxy', 'input', 'reconnect.backoff.ms', '', '', '1', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置连接失败进行重新连接需要的等待时间。', '2', '155', null, '毫秒', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('62', 'kafka', 'server.properties', '5', 'proxy', 'input', 'controlled.shutdown.retry.backoff.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置控制关闭任务失败重试的等待时间。', '2', '88', null, '秒', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('620', 'kafka', 'server.properties', '100', 'proxy', 'input', 'retry.backoff.ms', '', '', '1', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置失败请求进行重试需要的等待时间。', '2', '156', null, '毫秒', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('621', 'kafka', 'server.properties', '3600', 'proxy', 'input', 'transaction.remove.expired.transaction.cleanup.interval.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置因删除已到期的交易的间隔时间。', '2', '157', null, '秒', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('622', 'kafka', 'server.properties', '60', 'proxy', 'input', 'transaction.abort.timed.out.transaction.cleanup.interval.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置回滚已超时的事务的间隔时间。', '2', '158', null, '秒', '1', 'long', '2.11-1.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('623', 'storm', 'storm.yaml', '/usr/local/lib:/opt/local/lib:/usr/lib', 'storm', 'input', 'java.library.path', '', '', '0', '', '', '', '0', '1', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('624', 'storm', 'storm.yaml', 'storm-local', 'storm', 'input', 'storm.local.dir', '', '', '0', '', '', '', '0', '2', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('625', 'storm', 'storm.yaml', 'log4j2', 'storm', 'input', 'storm.log4j2.conf.dir', '', '', '0', '', '', '', '0', '3', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('626', 'storm', 'storm.yaml', 'localhost', 'storm', 'input', 'storm.zookeeper.servers', '', '', '0', '', '', '', '0', '4', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('627', 'storm', 'storm.yaml', '2181', 'storm', 'input', 'storm.zookeeper.port', '', '', '0', '', '', '', '0', '5', null, '', '0', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('628', 'storm', 'storm.yaml', '20', 'storm', 'input', 'storm.zookeeper.session.timeout', '', '', '1000', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置客户端连接Zookeeper超时时间。', '1', '6', null, '秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('629', 'storm', 'storm.yaml', '15', 'storm', 'input', 'storm.zookeeper.connection.timeout', '', '', '1000', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置连接Zookeeper超时时间。', '1', '7', null, '秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('63', 'kafka', 'server.properties', '30', 'proxy', 'input', 'controller.socket.timeout.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置broker控制的网络超时时间。', '2', '89', null, '秒', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('630', 'storm', 'storm.yaml', '5', 'storm', 'input', 'storm.zookeeper.retry.times', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置连接Zookeeper重试次数。', '1', '8', null, '', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('631', 'storm', 'storm.yaml', '1000', 'storm', 'input', 'storm.zookeeper.retry.interval', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置连接Zookeeper重试间隔。', '1', '9', null, '', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('632', 'storm', 'storm.yaml', '30', 'storm', 'input', 'storm.zookeeper.retry.intervalceiling.millis', '', '', '1000', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置重试时间间隔最长时间。', '1', '10', null, '秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('633', 'storm', 'storm.yaml', 'null', 'storm', 'input', 'storm.zookeeper.auth.user', '', '', '0', '', '', '', '0', '11', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('634', 'storm', 'storm.yaml', 'null', 'storm', 'input', 'storm.zookeeper.auth.password', '', '', '0', '', '', '', '0', '12', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('635', 'storm', 'storm.yaml', '8080', 'storm', 'input', 'storm.exhibitor.port', '', '', '0', '', '', '', '0', '13', null, '', '0', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('636', 'storm', 'storm.yaml', '/exhibitor/v1/cluster/list', 'storm', 'input', 'storm.exhibitor.poll.uripath', '', '', '0', '', '', '', '0', '14', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('637', 'storm', 'storm.yaml', 'distributed', 'storm', 'radio', 'storm.cluster.mode', '', '{\"distributed\":\"distributed\",\"local\":\"local\"}', '0', '^\\S*$', '不能为空', '设置集群运行模式([distributed|local])。', '1', '15', null, '', '1', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('638', 'storm', 'storm.yaml', 'false', 'storm', 'radio', 'storm.local.mode.zmq', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '设置Local模式是否使用ZeroMQ。', '1', '16', null, '', '1', 'boolean', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('639', 'storm', 'storm.yaml', 'org.apache.storm.security.auth.SimpleTransportPlugin', 'storm', 'input', 'storm.thrift.transport', '', '', '0', '', '', '', '0', '17', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('64', 'kafka', 'server.properties', '1', 'proxy', 'input', 'default.replication.factor', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置分区默认的分区备份个数，不能大于集群中broker的个数。', '2', '90', null, '', '1', 'int', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('640', 'storm', 'storm.yaml', 'org.apache.storm.security.auth.DefaultPrincipalToLocal', 'storm', 'input', 'storm.principal.tolocal', '', '', '0', '', '', '', '0', '18', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('641', 'storm', 'storm.yaml', 'org.apache.storm.security.auth.ShellBasedGroupsMapping', 'storm', 'input', 'storm.group.mapping.service', '', '', '0', '', '', '', '0', '19', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('642', 'storm', 'storm.yaml', 'null', 'storm', 'input', 'storm.group.mapping.service.params', '', '', '0', '', '', '', '0', '20', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('643', 'storm', 'storm.yaml', 'org.apache.storm.messaging.netty.Context', 'storm', 'input', 'storm.messaging.transport', '', '', '0', '', '', '', '0', '21', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('644', 'storm', 'storm.yaml', '5', 'storm', 'input', 'storm.nimbus.retry.times', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置nimbus操作重试次数。', '1', '22', null, '', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('645', 'storm', 'storm.yaml', '2', 'storm', 'input', 'storm.nimbus.retry.interval.millis', '', '', '1000', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置重试间隔。', '1', '23', null, '秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('646', 'storm', 'storm.yaml', '60', 'storm', 'input', 'storm.nimbus.retry.intervalceiling.millis', '', '', '1000', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置最大重试时间。', '1', '24', null, '秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('647', 'storm', 'storm.yaml', '[]', 'storm', 'input', 'storm.auth.simple-white-list.users', '', '', '0', '', '', '', '0', '25', null, '', '0', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('648', 'storm', 'storm.yaml', '[]', 'storm', 'input', 'storm.auth.simple-acl.users', '', '', '0', '', '', '', '0', '26', null, '', '0', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('649', 'storm', 'storm.yaml', '[]', 'storm', 'input', 'storm.auth.simple-acl.users.commands', '', '', '0', '', '', '', '0', '27', null, '', '0', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('65', 'kafka', 'server.properties', '1000', 'proxy', 'input', 'fetch.purgatory.purge.interval.requests', '', '', '1', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置清除consumer历史获取request记录间隔时间。', '2', '91', null, '毫秒', '1', 'int', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('650', 'storm', 'storm.yaml', '[]', 'storm', 'input', 'storm.auth.simple-acl.admins', '', '', '0', '', '', '', '0', '28', null, '', '0', 'long', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('651', 'storm', 'storm.yaml', 'org.apache.storm.cluster_state.zookeeper_state_factory', 'storm', 'input', 'storm.cluster.state.store', '', '', '0', '', '', '', '0', '29', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('652', 'storm', 'storm.yaml', 'org.apache.storm.serialization.GzipThriftSerializationDelegate', 'storm', 'input', 'storm.meta.serialization.delegate', '', '', '0', '', '', '', '0', '30', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('653', 'storm', 'storm.yaml', 'org.apache.storm.codedistributor.LocalFileSystemCodeDistributor', 'storm', 'input', 'storm.codedistributor.class', '', '', '0', '', '', '', '0', '31', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('654', 'storm', 'storm.yaml', 'workers-artifacts', 'storm', 'input', 'storm.workers.artifacts.dir', '', '', '0', '', '', '', '0', '32', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('655', 'storm', 'storm.yaml', 'healthchecks', 'storm', 'input', 'storm.health.check.dir', '', '', '0', '', '', '', '0', '33', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('656', 'storm', 'storm.yaml', '5', 'storm', 'input', 'storm.health.check.timeout.ms', '', '', '1000', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置健康检查超时时间。', '1', '34', null, '秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('657', 'storm', 'storm.yaml', 'false', 'storm', 'radio', 'storm.disable.symlinks', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '', '0', '35', null, '', '0', 'boolean', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('658', 'storm', 'storm.yaml', '/storm', 'storm', 'input', 'storm.zookeeper.root', '', '', '0', '', '', '', '0', '36', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('659', 'storm', 'storm.yaml', '[\"localhost\"]', 'nimbus', 'input', 'nimbus.seeds', '', '', '0', '', '', '', '0', '37', null, '', '0', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('66', 'kafka', 'server.properties', '30', 'proxy', 'input', 'group.max.session.timeout.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置consumer允许的最大超时时间。', '2', '92', null, '秒', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('660', 'storm', 'storm.yaml', '6627', 'nimbus', 'input', 'nimbus.thrift.port', '', '', '0', '', '', '', '0', '38', null, '', '0', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('661', 'storm', 'storm.yaml', '64', 'nimbus', 'input', 'nimbus.thrift.threads', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置nimbus thrift线程数目。', '1', '39', null, '', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('662', 'storm', 'storm.yaml', '1048576', 'nimbus', 'input', 'nimbus.thrift.max_buffer_size', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置nimbus thrift最大缓冲大小。', '1', '40', null, '', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('663', 'storm', 'storm.yaml', '-Xmx1024m', 'nimbus', 'input', 'nimbus.childopts', '', '', '0', '', '', '', '0', '41', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('664', 'storm', 'storm.yaml', '30', 'nimbus', 'input', 'nimbus.task.timeout.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置task心跳超时时间。', '1', '42', null, '秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('665', 'storm', 'storm.yaml', '60', 'nimbus', 'input', 'nimbus.supervisor.timeout.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置supervisor的心跳超时时间。', '1', '43', null, '秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('666', 'storm', 'storm.yaml', '10', 'nimbus', 'input', 'nimbus.monitor.freq.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置nimbus检查心跳和重分配任务的时间间隔。', '1', '44', null, '秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('667', 'storm', 'storm.yaml', '600', 'nimbus', 'input', 'nimbus.cleanup.inbox.freq.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置多久时间启动清理 inbox 文件的线程。', '1', '45', null, '秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('668', 'storm', 'storm.yaml', '3600', 'nimbus', 'input', 'nimbus.inbox.jar.expiration.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置jar 过期时间。', '1', '46', null, '秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('669', 'storm', 'storm.yaml', '120', 'nimbus', 'radio', 'nimbus.code.sync.freq.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置同步一次未执行的拓扑的代码时间。', '1', '47', null, '秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('67', 'kafka', 'server.properties', '6', 'proxy', 'input', 'group.min.session.timeout.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置consumer允许的最小超时时间。', '2', '93', null, '秒', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('670', 'storm', 'storm.yaml', '120', 'nimbus', 'input', 'nimbus.task.launch.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置task启动时的一个特殊超时时间。', '1', '48', null, '秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('671', 'storm', 'storm.yaml', '600', 'nimbus', 'input', 'nimbus.file.copy.expiration.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置nimbus判断上传/下载链接的超时时间。', '1', '49', null, '秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('672', 'storm', 'storm.yaml', 'org.apache.storm.nimbus.DefaultTopologyValidator', 'nimbus', 'input', 'nimbus.topology.validator', '', '', '0', '^\\S*$', '不能为空', '设置控制该拓扑是否可以执行。', '0', '50', null, '', '1', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('673', 'storm', 'storm.yaml', '1', 'nimbus', 'input', 'topology.min.replication.count', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置nimbus seeds中拓扑代码的备份达到最小数目。', '1', '51', null, '', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('674', 'storm', 'storm.yaml', '60', 'nimbus', 'input', 'topology.max.replication.wait.time.sec', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置代码备份在nimbus list中达到topology.min.replication.count最大等待时间。', '1', '52', null, '秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('675', 'storm', 'storm.yaml', '600', 'nimbus', 'input', 'nimbus.credential.renewers.freq.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置nimbus凭证重新申请的频率。', '1', '53', null, '秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('676', 'storm', 'storm.yaml', '100000', 'nimbus', 'input', 'nimbus.queue.size', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置nimbus队列大小。', '1', '54', null, '', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('677', 'storm', 'storm.yaml', 'false', 'nimbus', 'radio', 'scheduler.display.resource', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '设置是否在UI 页面上显示所有的资源容量和预定的使用情况。', '1', '55', null, '', '1', 'boolean', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('678', 'storm', 'storm.yaml', '0.0.0.0', 'ui', 'radio', 'ui.host', '', '', '0', 'true|false', '值必须是true或者false', '', '0', '56', null, '', '0', 'boolean', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('679', 'storm', 'storm.yaml', '8080', 'ui', 'input', 'ui.port', '', '', '0', '', '', '', '0', '57', null, '', '0', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('68', 'kafka', 'server.properties', '0.9.0.X', 'proxy', 'input', 'inter.broker.protocol.version', '', '', '0', '', '', 'Specify which version of the inter-broker protocol will be used. This is typically bumped after all brokers were upgraded to a new version\n', '0', '94', null, '', '0', 'String', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('680', 'storm', 'storm.yaml', '-Xmx768m', 'ui', 'input', 'ui.childopts', '', '', '0', '', '', '', '0', '58', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('681', 'storm', 'storm.yaml', 'true', 'ui', 'radio', 'ui.actions.enabled', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '设置开启UI操作功能。', '1', '59', null, '', '1', 'boolean', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('682', 'storm', 'storm.yaml', 'null', 'ui', 'input', 'ui.filter', '', '', '0', '^\\S*$', '不能为空', '设置实现用于验证 / 过滤 UI 请求的 javax.servlet.Filter 的类。', '1', '60', null, '', '1', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('683', 'storm', 'storm.yaml', 'null', 'ui', 'input', 'ui.filter.params', '', '', '0', '^\\S*$', '不能为空', '设置javax.servlet.Filter 的初始化参数。', '1', '61', null, '', '1', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('684', 'storm', 'storm.yaml', 'null', 'ui', 'input', 'ui.users', '', '', '0', '^\\S*$', '不能为空', '设置UI用户。', '1', '62', null, '', '1', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('685', 'storm', 'storm.yaml', '4', 'ui', 'input', 'ui.header.buffer.bytes', '', '', '1024', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置UI 的头缓冲区的大小。', '1', '63', null, 'Kb', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('686', 'storm', 'storm.yaml', 'org.apache.storm.security.auth.DefaultHttpCredentialsPlugin', 'ui', 'input', 'ui.http.creds.plugin', '', '', '0', '', '', '', '0', '64', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('687', 'storm', 'storm.yaml', 'DENY', 'ui', 'input', 'ui.http.x-frame-options', '', '', '0', '', '', '', '0', '65', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('688', 'storm', 'storm.yaml', '20', 'ui', 'input', 'ui.pagination', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置Storm UI 下拉式分页值。', '1', '66', null, '', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('689', 'storm', 'storm.yaml', '8000', 'ui', 'input', 'logviewer.port', '', '', '0', '', '', '', '0', '67', null, '', '0', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('69', 'kafka', 'server.properties', '15', 'proxy', 'input', 'log.cleaner.backoff.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志清理需要等待的时间。', '2', '95', null, '秒', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('690', 'storm', 'storm.yaml', '-Xmx128m', 'ui', 'input', 'logviewer.childopts', '', '', '0', '', '', '', '0', '68', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('691', 'storm', 'storm.yaml', '168', 'ui', 'input', 'logviewer.cleanup.age.mins', '', '', '60', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置上次修改日志以供日志考虑进行清理的时间。', '1', '69', null, '分钟', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('692', 'storm', 'storm.yaml', 'A1', 'ui', 'input', 'logviewer.appender.name', '', '', '0', '^\\S*$', '不能为空', '设置日志查看器用于确定日志目录的 Appender 名称。', '1', '70', null, '', '1', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('693', 'storm', 'storm.yaml', '4096', 'ui', 'input', 'logviewer.max.sum.worker.logs.size.mb', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置所有工作日志文件的最大字节数可占用 MB。', '1', '71', null, 'Mb', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('694', 'storm', 'storm.yaml', '2048', 'ui', 'input', 'logviewer.max.per.worker.logs.size.mb', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置每个worker文件的最大字节数可能占用 MB。', '1', '72', null, 'Mb', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('695', 'storm', 'storm.yaml', 'null', 'ui', 'input', 'logs.users', '', '', '0', '', '', '', '0', '73', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('696', 'storm', 'storm.yaml', '3772', 'ui', 'input', 'drpc.port', '', '', '0', '', '', '', '0', '74', null, '', '0', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('697', 'storm', 'storm.yaml', '64', 'ui', 'input', 'drpc.worker.threads', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置DRPC 节俭服务器工作线程数。', '1', '75', null, '', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('698', 'storm', 'storm.yaml', '1048576', 'ui', 'input', 'drpc.max_buffer_size', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置drpc最大缓冲大小。', '1', '76', null, '', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('699', 'storm', 'storm.yaml', '128', 'ui', 'input', 'drpc.queue.size', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置drpc队列大小。', '1', '77', null, '', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('7', 'kafka', 'server.properties', 'producer', 'proxy', 'select', 'compression.type', '', '{\"producer\":\"producer\",\"uncompressed\":\"uncompressed\"}', '0', '', '', ' Specify the final compression type for a given topic. This configuration accepts the standard compression codecs (\'gzip\', \'snappy\', lz4). It additionally accepts \'uncompressed\' which is equivalent to no compression; and \'producer\' which means retain the original compression codec set by the producer.', '0', '96', null, '', '0', 'String', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('70', 'kafka', 'server.properties', '134217728', 'proxy', 'input', 'log.cleaner.dedupe.buffer.size', '', '', '0', '', '', 'The total memory used for log deduplication across all cleaner threads\n', '0', '97', null, '', '0', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('700', 'storm', 'storm.yaml', '3773', 'ui', 'input', 'drpc.invocations.port', '', '', '0', '', '', '', '0', '78', null, '', '0', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('701', 'storm', 'storm.yaml', '64', 'ui', 'input', 'drpc.invocations.threads', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置DRPC调用节俭服务器工作线程。', '1', '79', null, '', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('702', 'storm', 'storm.yaml', '600', 'ui', 'input', 'drpc.request.timeout.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置DRPC服务器内的DRPC请求超时时间。', '1', '80', null, '秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('703', 'storm', 'storm.yaml', '-Xmx768m', 'ui', 'input', 'drpc.childopts', '', '', '0', '', '', '', '0', '81', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('704', 'storm', 'storm.yaml', '3774', 'ui', 'input', 'drpc.http.port', '', '', '0', '', '', '', '0', '82', null, '', '0', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('705', 'storm', 'storm.yaml', '-1', 'ui', 'input', 'drpc.https.port', '', '', '0', '', '', '', '0', '83', null, '', '0', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('706', 'storm', 'storm.yaml', '\"\"', 'ui', 'input', 'drpc.https.keystore.password', '', '', '0', '', '', '', '0', '84', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('707', 'storm', 'storm.yaml', 'JKS', 'ui', 'input', 'drpc.https.keystore.type', '', '', '0', '', '', '', '0', '85', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('708', 'storm', 'storm.yaml', 'org.apache.storm.security.auth.DefaultHttpCredentialsPlugin', 'ui', 'input', 'drpc.http.creds.plugin', '', '', '0', '', '', '', '0', '86', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('709', 'storm', 'storm.yaml', 'drpc-auth-acl.yaml', 'ui', 'input', 'drpc.authorizer.acl.filename', '', '', '0', '', '', '', '0', '87', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('71', 'kafka', 'server.properties', '24', 'proxy', 'input', 'log.cleaner.delete.retention.ms', '', '', '3600000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置保存压缩日志的最长时间。', '2', '98', null, '小时', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('710', 'storm', 'storm.yaml', 'false', 'ui', 'radio', 'drpc.authorizer.acl.strict', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '', '0', '88', null, '', '0', 'boolean', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('711', 'storm', 'storm.yaml', '/transactional', 'ui', 'input', 'transactional.zookeeper.root', '', '', '0', '', '', '', '0', '89', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('712', 'storm', 'storm.yaml', 'null', 'ui', 'input', 'transactional.zookeeper.servers', '', '', '0', '', '', '', '0', '90', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('713', 'storm', 'storm.yaml', 'null', 'ui', 'input', 'transactional.zookeeper.port', '', '', '0', '', '', '', '0', '91', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('714', 'storm', 'storm.yaml', 'org.apache.storm.blobstore.NimbusBlobStore', 'blobstore', 'input', 'supervisor.blobstore.class', '', '', '0', '', '', '', '0', '92', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('715', 'storm', 'storm.yaml', '5', 'blobstore', 'input', 'supervisor.blobstore.download.thread.count', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置主管应该使用什么blobstore下载并行数。', '1', '93', null, '', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('716', 'storm', 'storm.yaml', '3', 'blobstore', 'input', 'supervisor.blobstore.download.max_retries', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置管理员允许下载blob的最大重试次数。', '1', '94', null, '', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('717', 'storm', 'storm.yaml', '10', 'blobstore', 'input', 'supervisor.localizer.cache.target.size.mb', '', '', '1024', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置分布式缓存目标大小。', '1', '95', null, 'Gb', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('718', 'storm', 'storm.yaml', '10', 'blobstore', 'input', 'supervisor.localizer.cleanup.interval.ms', '', '', '60000', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置分布式缓存清理间隔。', '1', '96', null, '分钟', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('719', 'storm', 'storm.yaml', 'org.apache.storm.blobstore.LocalFsBlobStore', 'blobstore', 'input', 'nimbus.blobstore.class', '', '', '0', '', '', '', '0', '97', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('72', 'kafka', 'server.properties', 'true', 'proxy', 'radio', 'log.cleaner.enable', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', '', '', '设置开启日志压缩功能。设置true表示开启日志压缩,否则不压缩。', '2', '99', null, '', '1', 'boolean', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('720', 'storm', 'storm.yaml', '600', 'blobstore', 'input', 'nimbus.blobstore.expiration.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置在使用 blob 存储操作期间。', '1', '98', null, '秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('721', 'storm', 'storm.yaml', '64', 'blobstore', 'input', 'storm.blobstore.inputstream.buffer.size.bytes', '', '', '1024', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置blobstore上传的缓冲区大小。', '1', '99', null, 'Kb', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('722', 'storm', 'storm.yaml', 'org.apache.storm.blobstore.NimbusBlobStore', 'blobstore', 'input', 'client.blobstore.class', '', '', '0', '', '', '', '0', '100', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('723', 'storm', 'storm.yaml', '3', 'blobstore', 'input', 'storm.blobstore.replication.factor', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置在HDFS Blobstore实现中blob的复制因子。', '1', '101', null, '', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('724', 'storm', 'storm.yaml', 'false', 'blobstore', 'radio', 'storm.blobstore.acl.validation.enabled', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '', '0', '102', null, '', '0', 'boolean', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('725', 'storm', 'storm.yaml', '-', 'supervisor', 'radio', 'supervisor.slots.ports', '', '', '0', 'true|false', '值必须是true或者false', '', '0', '103', null, '', '0', 'boolean', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('726', 'storm', 'storm.yaml', '-Xmx256m', 'supervisor', 'input', 'supervisor.childopts', '', '', '0', '^\\S*$', '不能为空', '设置storm-deploy中用来配置supervisor守护进程的jvm选项。', '0', '104', null, '', '1', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('727', 'storm', 'storm.yaml', 'false', 'supervisor', 'radio', 'supervisor.run.worker.as.user', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '设置是否应该尝试将worker作为激活用户来运行。', '1', '105', null, '', '1', 'boolean', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('728', 'storm', 'storm.yaml', '120', 'supervisor', 'input', 'supervisor.worker.start.timeout.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置·supervisor初始启动时,worker的心跳超时时间。', '1', '106', null, '秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('729', 'storm', 'storm.yaml', '30', 'supervisor', 'input', 'supervisor.worker.timeout.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置supervisor中的worker心跳超时时间。', '1', '107', null, '秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('73', 'kafka', 'server.properties', '0.9', 'proxy', 'input', 'log.cleaner.io.buffer.load.factor', '', '', '0', '^\\S*$', '输入不能为空', '设置日志清理io缓冲区hash表增长因子。', '2', '100', null, '', '1', 'String', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('730', 'storm', 'storm.yaml', '3', 'supervisor', 'input', 'supervisor.worker.shutdown.sleep.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置supervisor shutdown worker需要等待的时间。', '1', '108', null, '秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('731', 'storm', 'storm.yaml', '3', 'supervisor', 'input', 'supervisor.monitor.frequency.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置supervisor检查worker心跳的频率。', '1', '109', null, '秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('732', 'storm', 'storm.yaml', '5', 'supervisor', 'input', 'supervisor.heartbeat.frequency.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置supervisor心跳发送频率。', '1', '110', null, '秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('733', 'storm', 'storm.yaml', 'true', 'supervisor', 'radio', 'supervisor.enable', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '设置supervisor是否应当运行分配给他的workers。', '1', '111', null, '', '1', 'boolean', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('734', 'storm', 'storm.yaml', '[]', 'supervisor', 'input', 'supervisor.supervisors', '', '', '0', '^\\S*$', '不能为空', '', '0', '112', null, '', '1', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('735', 'storm', 'storm.yaml', '[]', 'supervisor', 'input', 'supervisor.supervisors.commands', '', '', '0', '^\\S*$', '不能为空', '', '0', '113', null, '', '1', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('736', 'storm', 'storm.yaml', '3072', 'supervisor', 'input', 'supervisor.memory.capacity.mb', '', '', '1', '^\\S*$', '不能为空', '设置主管允许给其worker的Memory资源总量。', '1', '114', null, 'Mb', '1', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('737', 'storm', 'storm.yaml', '400', 'supervisor', 'input', 'supervisor.cpu.capacity', '', '', '0', '^\\S*$', '不能为空', '设置主管允许给其worker的CPU资源总量。', '1', '115', null, '', '1', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('738', 'storm', 'storm.yaml', '768', 'worker', 'input', 'worker.heap.memory.mb', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置worker进程默认堆内存大小。', '1', '116', null, 'Mb', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('739', 'storm', 'storm.yaml', '-Xmx%HEAP-MEM%m -XX:+PrintGCDetails -Xloggc:artifacts/gc.log -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=10 -XX:GCLogFileSize=1M -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=artifacts/heapdump', 'worker', 'input', 'worker.childopts', '', '', '0', '', '', '', '0', '117', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('74', 'kafka', 'server.properties', '512', 'proxy', 'input', 'log.cleaner.io.buffer.size', '', '', '1024', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志清理io缓冲区大小。', '2', '101', null, 'Kb', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('740', 'storm', 'storm.yaml', '\"\"', 'worker', 'input', 'worker.gc.childopts', '', '', '0', '', '', '', '0', '118', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('741', 'storm', 'storm.yaml', 'false', 'worker', 'radio', 'worker.profiler.enabled', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '', '0', '119', null, '', '0', 'boolean', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('742', 'storm', 'storm.yaml', '-XX:+UnlockCommercialFeatures -XX:+FlightRecorder', 'worker', 'input', 'worker.profiler.childopts', '', '', '0', '', '', '', '0', '120', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('743', 'storm', 'storm.yaml', 'flight.bash', 'worker', 'input', 'worker.profiler.command', '', '', '0', '', '', '', '0', '121', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('744', 'storm', 'storm.yaml', '1', 'worker', 'input', 'worker.heartbeat.frequency.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置worker的心跳发送时间间隔。', '1', '122', null, '秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('745', 'storm', 'storm.yaml', '30', 'worker', 'input', 'worker.log.level.reset.poll.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置多久工作一次应检查动态日志级别超时以便过期的时间。', '1', '123', null, '秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('746', 'storm', 'storm.yaml', '1', 'worker', 'input', 'topology.worker.receiver.thread.count', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置每个worker设置的receiver线程个数。', '1', '124', null, '', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('747', 'storm', 'storm.yaml', '3', 'worker', 'input', 'task.heartbeat.frequency.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置task汇报状态心跳时间间隔。', '1', '125', null, '秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('748', 'storm', 'storm.yaml', '10', 'worker', 'input', 'task.refresh.poll.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置task与其他tasks之间链接同步的频率。', '1', '126', null, '秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('749', 'storm', 'storm.yaml', '30', 'worker', 'input', 'task.credentials.poll.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置最差情况下,任务应该同步一次证书的时间。', '1', '127', null, '秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('75', 'kafka', 'server.properties', '1.7976931348623157E308', 'proxy', 'input', 'log.cleaner.io.max.bytes.per.second', '', '', '0', '^([1-9]\\d{0,17}|1000000000000000000)$', '输入值必须在1到1000000000000000000', '设置每秒日志清理数据受限大小。', '0', '102', null, '', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('750', 'storm', 'storm.yaml', '30', 'worker', 'input', 'task.backpressure.poll.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置查询ZK更改后的拓扑背压标志的时间。', '1', '128', null, '秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('751', 'storm', 'storm.yaml', 'false', 'worker', 'radio', 'topology.backpressure.enable', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '设置是否为特定拓扑启用背压。', '1', '129', null, '', '1', 'boolean', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('752', 'storm', 'storm.yaml', '0.9', 'worker', 'input', 'backpressure.disruptor.high.watermark', '', '', '0', '^\\S*$', '不能为空', '这表示中断队列中的元组拥塞。', '1', '130', null, '', '1', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('753', 'storm', 'storm.yaml', '0.4', 'worker', 'input', 'backpressure.disruptor.low.watermark', '', '', '0', '^\\S*$', '不能为空', '这表示状态:干扰队列已经离开拥挤。', '1', '131', null, '', '1', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('754', 'storm', 'storm.yaml', '1', 'worker', 'input', 'zmq.threads', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置每个worker进程内zeromq通讯用到的线程数。', '1', '132', null, '', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('755', 'storm', 'storm.yaml', '5', 'worker', 'input', 'zmq.linger.millis', '', '', '1000', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置当连接关闭时,链接尝试重新发送消息到目标主机的持续时长。', '1', '133', null, '秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('756', 'storm', 'storm.yaml', '0', 'worker', 'input', 'zmq.hwm', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置zmq的指定网络通信设置高水平标记。', '1', '134', null, '', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('757', 'storm', 'storm.yaml', '1', 'worker', 'input', 'storm.messaging.netty.server_worker_threads', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置接收消息线程数。', '1', '135', null, '', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('758', 'storm', 'storm.yaml', '1', 'worker', 'input', 'storm.messaging.netty.client_worker_threads', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置发送消息线程的数量。', '1', '136', null, '', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('759', 'storm', 'storm.yaml', '5242880', 'worker', 'input', 'storm.messaging.netty.buffer_size', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置每次批量发送的Tuple序列化之后的Task Message消息大小。', '1', '137', null, '', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('76', 'kafka', 'server.properties', '0.5', 'proxy', 'input', 'log.cleaner.min.cleanable.ratio', '', '', '0', '^\\S*$', '输入不能为空', '设置日志清理最小可清理的百分比。', '2', '103', null, '', '1', 'String', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('760', 'storm', 'storm.yaml', '300', 'worker', 'input', 'storm.messaging.netty.max_retries', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置netty buffer大小。', '1', '138', null, '', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('761', 'storm', 'storm.yaml', '1000', 'worker', 'input', 'storm.messaging.netty.max_wait_ms', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置对等体将等待的最大毫秒数(基于netty)。', '1', '139', null, '', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('762', 'storm', 'storm.yaml', '100', 'worker', 'input', 'storm.messaging.netty.min_wait_ms', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置对等体将等待的最小毫秒数(基于netty)。', '1', '140', null, '', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('763', 'storm', 'storm.yaml', '262144', 'worker', 'input', 'storm.messaging.netty.transfer.batch.size', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置每次Netty Client向Netty Server发送数据的大小。', '1', '141', null, '', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('764', 'storm', 'storm.yaml', '500', 'worker', 'input', 'storm.messaging.netty.socket.backlog', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置积压值以指定通道绑定到本地地址的时间(基于Netty消息传递)。', '1', '142', null, '', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('765', 'storm', 'storm.yaml', 'false', 'worker', 'radio', 'storm.messaging.netty.authentication', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '设置从客户端worker进程到服务器工作进程的Netty消息传递是否需要身份验证。', '1', '143', null, '', '1', 'boolean', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('766', 'storm', 'storm.yaml', 'org.apache.storm.networktopography.DefaultRackDNSToSwitchMapping', 'worker', 'input', 'storm.network.topography.plugin', '', '', '0', '', '', '', '0', '144', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('767', 'storm', 'storm.yaml', '120', 'worker', 'input', 'storm.group.mapping.service.cache.duration.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置将缓存用户组秒数组映射服务的最大数量。', '1', '145', null, '秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('768', 'storm', 'storm.yaml', 'true', 'topology', 'radio', 'topology.enable.message.timeouts', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '设置是否保证数据完全处理。', '1', '146', null, '', '1', 'boolean', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('769', 'storm', 'storm.yaml', 'false', 'topology', 'radio', 'topology.debug', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '设置是否Storm将记录发射的每条信息。', '1', '147', null, '', '1', 'boolean', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('77', 'kafka', 'server.properties', '1', 'proxy', 'input', 'log.cleaner.threads', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置日志压缩运行的线程数。', '2', '104', null, '', '1', 'int', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('770', 'storm', 'storm.yaml', '1', 'topology', 'input', 'topology.workers', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置执行该topology集群中应当启动的进程数量。', '1', '148', null, '', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('771', 'storm', 'storm.yaml', 'null', 'topology', 'input', 'topology.acker.executors', '', '', '0', '^\\S*$', '不能为空', '设置Acker进程个数。', '1', '149', null, '', '1', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('772', 'storm', 'storm.yaml', '0', 'topology', 'input', 'topology.eventlogger.executors', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置Event Logger进程个数。', '1', '150', null, '', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('773', 'storm', 'storm.yaml', 'null', 'topology', 'input', 'topology.tasks', '', '', '0', '^\\S*$', '不能为空', '设置task数目。', '1', '151', null, '', '1', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('774', 'storm', 'storm.yaml', '30', 'topology', 'input', 'topology.message.timeout.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置在一个topology中能够允许的最大组件并行度。', '1', '152', null, '秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('775', 'storm', 'storm.yaml', 'org.apache.storm.multilang.JsonSerializer', 'topology', 'input', 'topology.multilang.serializer', '', '', '0', '^\\S*$', '不能为空', '设置用于shell组件和非JVM进程之间进行通信的序列化程序。', '0', '153', null, '', '1', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('776', 'storm', 'storm.yaml', '100', 'topology', 'input', 'topology.shellbolt.max.pending', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置一个ShellBolt中的最大待处理元组。', '1', '154', null, '', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('777', 'storm', 'storm.yaml', 'false', 'topology', 'radio', 'topology.skip.missing.kryo.registrations', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '设置Storm是否应该跳过它不能识别的kryo序列化方案。', '1', '155', null, '', '1', 'boolean', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('778', 'storm', 'storm.yaml', 'null', 'topology', 'input', 'topology.max.task.parallelism', '', '', '0', '^\\S*$', '不能为空', '设置一个topology中能够允许的最大组件并行度。', '1', '156', null, '', '1', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('779', 'storm', 'storm.yaml', 'null', 'topology', 'input', 'topology.max.spout.pending', '', '', '0', '^\\S*$', '不能为空', '设置一个spout task中处于pending状态的最大的tuples数量。', '1', '157', null, '', '1', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('78', 'kafka', 'server.properties', 'delete', 'proxy', 'select', 'log.cleanup.policy', '', '{\"compact\":\"compact\",\"delete\":\"delete\"}', '0', 'compact|delete', '必须输入delete或者compact', '设置超出保留窗口的段清除策略。设置“delete\"表示删除， 设置“compact”表示压缩。', '2', '105', null, '', '1', 'String', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('780', 'storm', 'storm.yaml', '60', 'topology', 'input', 'topology.state.synchronization.timeout.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置组件同步状态源的最大超时时间(保留选项,暂未使用)。', '1', '158', null, '秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('781', 'storm', 'storm.yaml', '0.05', 'topology', 'input', 'topology.stats.sample.rate', '', '', '0', '^\\S*$', '不能为空', '设置用来产生task统计信息的tuples抽样百分比。', '1', '159', null, '', '1', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('782', 'storm', 'storm.yaml', '60', 'topology', 'input', 'topology.builtin.metrics.bucket.size.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置Storm Worker进程的JVM参数。', '1', '160', null, '秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('783', 'storm', 'storm.yaml', 'true', 'topology', 'radio', 'topology.fall.back.on.java.serialization', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '设置topology中是否使用java的序列化方案。', '1', '161', null, '', '1', 'boolean', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('784', 'storm', 'storm.yaml', 'null', 'topology', 'input', 'topology.worker.childopts', '', '', '0', '^\\S*$', '不能为空', '设置worker子进程的拓扑特定选项。', '1', '162', null, '', '1', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('785', 'storm', 'storm.yaml', '-Xmx64m', 'topology', 'input', 'topology.worker.logwriter.childopts', '', '', '0', '^\\S*$', '不能为空', '设置worker的日志记录过程的拓扑特定选项。', '0', '163', null, '', '1', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('786', 'storm', 'storm.yaml', '1024', 'topology', 'input', 'topology.executor.receive.buffer.size', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置executor线程的接收队列大小(2 的倍数)。', '1', '164', null, '', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('787', 'storm', 'storm.yaml', '1024', 'topology', 'input', 'topology.executor.send.buffer.size', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置executor线程的发送队列大小(2 的倍数)。', '1', '165', null, '', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('788', 'storm', 'storm.yaml', '1024', 'topology', 'input', 'topology.transfer.buffer.size', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0，且是2的指数', '设置worker进程中向外发送消息的缓存大小。', '1', '166', null, '', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('789', 'storm', 'storm.yaml', 'null', 'topology', 'input', 'topology.tick.tuple.freq.secs', '', '', '1', '^\\S*$', '不能为空', '设置topology定时消息发送的频率。', '1', '167', null, '秒', '1', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('79', 'kafka', 'server.properties', '4', 'proxy', 'input', 'log.index.interval.bytes', '', '', '1024', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置每次获取日志数据的索引数量大小。', '2', '106', null, 'Kb', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('790', 'storm', 'storm.yaml', '4', 'topology', 'input', 'topology.worker.shared.thread.pool.size', '', '', '0', '', '', '', '0', '168', null, '', '0', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('791', 'storm', 'storm.yaml', 'org.apache.storm.spout.SleepSpoutWaitStrategy', 'topology', 'input', 'topology.spout.wait.strategy', '', '', '0', '', '', '', '0', '169', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('792', 'storm', 'storm.yaml', '1', 'topology', 'input', 'topology.sleep.spout.wait.strategy.time.ms', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置SleepEmptyEmitStrategy应为其休眠的毫秒数。', '1', '170', null, '毫秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('793', 'storm', 'storm.yaml', '10', 'topology', 'input', 'topology.error.throttle.interval.secs', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置用于确定是否限制报告给Zookeeper错误的时间间隔。', '1', '171', null, '秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('794', 'storm', 'storm.yaml', '5', 'topology', 'input', 'topology.max.error.report.per.interval', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置拓扑任务每个时间间隔的错误最大汇报数。', '1', '172', null, '', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('795', 'storm', 'storm.yaml', 'org.apache.storm.serialization.DefaultKryoFactory', 'topology', 'input', 'topology.kryo.factory', '', '', '0', '', '', '', '0', '173', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('796', 'storm', 'storm.yaml', 'org.apache.storm.serialization.types.ListDelegateSerializer', 'topology', 'input', 'topology.tuple.serializer', '', '', '0', '', '', '', '0', '174', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('797', 'storm', 'storm.yaml', '500', 'topology', 'input', 'topology.trident.batch.emit.interval.millis', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置Trident拓扑中可以发出批次的次数。', '1', '175', null, '毫秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('798', 'storm', 'storm.yaml', 'false', 'topology', 'radio', 'topology.testing.always.try.serialize', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '设置是否尝试序列化所有元组(即使是本地传输)。', '1', '176', null, '', '1', 'boolean', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('799', 'storm', 'storm.yaml', 'null', 'topology', 'input', 'topology.classpath', '', '', '0', '', '', '', '0', '177', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('8', 'kafka', 'server.properties', 'false', 'proxy', 'radio', 'delete.topic.enable', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', '', '', 'Enables delete topic. Delete topic through the admin tool will have no effect if this config is turned off\n', '0', '107', null, '', '0', 'boolean', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('80', 'kafka', 'server.properties', '10', 'proxy', 'input', 'log.index.size.max.bytes', '', '', '1048576', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置每个日志数据段文件的消息索引数量上限。当达到此上限将生成新消息段文件。', '2', '108', null, 'Mb', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('800', 'storm', 'storm.yaml', 'null', 'topology', 'input', 'topology.environment', '', '', '0', '', '', '', '0', '178', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('801', 'storm', 'storm.yaml', 'false', 'topology', 'radio', 'topology.bolts.outgoing.overflow.buffer.enable', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '', '0', '179', null, '', '0', 'boolean', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('802', 'storm', 'storm.yaml', '1', 'topology', 'input', 'topology.disruptor.wait.timeout.millis', '', '', '1000', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置cpu使用权衡时间。', '1', '180', null, '秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('803', 'storm', 'storm.yaml', '100', 'topology', 'input', 'topology.disruptor.batch.size', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置发送到下一个线程之前要批量处理的元组数量。', '1', '181', null, '', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('804', 'storm', 'storm.yaml', '1', 'topology', 'input', 'topology.disruptor.batch.timeout.millis', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置批次在发送到下一个线程之前的最大时间。', '1', '182', null, '毫秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('805', 'storm', 'storm.yaml', 'false', 'topology', 'radio', 'topology.disable.loadaware.messaging', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', 'true|false', '值必须是true或者false', '设置是否禁用加载感知分组支持。', '1', '183', null, '', '1', 'boolean', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('806', 'storm', 'storm.yaml', '1', 'topology', 'input', 'topology.state.checkpoint.interval.ms', '', '', '1000', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置用于指定IStatefulBolt涉及螺栓时保存拓扑状态的检查点间隔的拓扑配置。', '1', '184', null, '秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('807', 'storm', 'storm.yaml', '29', 'topology', 'input', 'topology.priority', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置拓扑的优先级。', '1', '185', null, '', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('808', 'storm', 'storm.yaml', '128', 'topology', 'input', 'topology.component.resources.onheap.memory.mb', '', '', '1', '', '', '', '0', '186', null, 'Mb', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('809', 'storm', 'storm.yaml', '0', 'topology', 'input', 'topology.component.resources.offheap.memory.mb', '', '', '0', '', '', '', '0', '187', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('81', 'kafka', 'server.properties', 'false', 'proxy', 'radio', 'log.preallocate', '', '{\"true\":\"true\",\"false\":\"false\"}', '0', '', '', '设置预先创建新文件属性，windows推荐使用。', '2', '109', null, '', '1', 'boolean', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('810', 'storm', 'storm.yaml', '10', 'topology', 'input', 'topology.component.cpu.pcore.percent', '', '', '0', '', '', '', '0', '188', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('811', 'storm', 'storm.yaml', '768', 'topology', 'input', 'topology.worker.max.heap.size.mb', '', '', '1', '^\\S*$', '不能为空', '设置应用于Topology,限定Worker最大可用堆内存数。', '1', '189', null, 'Mb', '1', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('812', 'storm', 'storm.yaml', 'org.apache.storm.scheduler.resource.strategies.scheduling.DefaultResourceAwareStrategy', 'topology', 'input', 'topology.scheduler.strategy', '', '', '0', '', '', '', '0', '190', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('813', 'storm', 'storm.yaml', 'org.apache.storm.scheduler.resource.strategies.eviction.DefaultEvictionStrategy', 'topology', 'input', 'resource.aware.scheduler.eviction.strategy', '', '', '0', '', '', '', '0', '191', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('814', 'storm', 'storm.yaml', 'org.apache.storm.scheduler.resource.strategies.priority.DefaultSchedulingPriorityStrategy', 'topology', 'input', 'resource.aware.scheduler.priority.strategy', '', '', '0', '', '', '', '0', '192', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('815', 'storm', 'storm.yaml', '/tmp/dev-storm-zookeeper', 'topology', 'input', 'dev.zookeeper.path', '', '', '0', '', '', '', '0', '193', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('816', 'storm', 'storm.yaml', 'localhost', 'topology', 'input', 'pacemaker.host', '', '', '0', '', '', '', '0', '194', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('817', 'storm', 'storm.yaml', '6699', 'topology', 'input', 'pacemaker.port', '', '', '0', '', '', '', '0', '195', null, '', '0', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('818', 'storm', 'storm.yaml', '10', 'topology', 'input', 'pacemaker.base.threads', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置pacemaker线程个数。', '1', '196', null, '', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('819', 'storm', 'storm.yaml', '50', 'topology', 'input', 'pacemaker.max.threads', '', '', '0', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置Pacemaker应该使用的最大线程数。', '1', '197', null, '', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('82', 'kafka', 'server.properties', '300', 'proxy', 'input', 'log.retention.check.interval.ms ', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置日志保留检测间隔时间。', '1', '12', null, '秒', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('820', 'storm', 'storm.yaml', '10', 'topology', 'input', 'pacemaker.thread.timeout', '', '', '1', '^[1-9]|([1-9]\\d+)$', '值必须大于0的整数', '设置pacemaker线程超时时间。', '1', '198', null, '秒', '1', 'int', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('821', 'storm', 'storm.yaml', '-Xmx1024m', 'topology', 'input', 'pacemaker.childopts', '', '', '0', '', '', '', '0', '199', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('822', 'storm', 'storm.yaml', 'NONE', 'topology', 'input', 'pacemaker.auth.method', '', '', '0', '', '', '', '0', '200', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('823', 'storm', 'storm.yaml', '[]', 'topology', 'input', 'pacemaker.kerberos.users', '', '', '0', '', '', '', '0', '201', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('824', 'storm', 'storm.yaml', 'org.apache.storm.daemon.metrics.reporters.JmxPreparableReporter', 'topology', 'input', 'storm.daemon.metrics.reporter.plugins', '', '', '0', '', '', '', '0', '202', null, '', '0', 'String', '1.0.2');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('825', 'redis', 'redis.conf', '127.0.0.1', '网络', 'input', 'bind', '绑定IP', null, '0', null, null, '绑定IP,如果有多个用空格分隔', '0', '1', null, null, '0', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('826', 'redis', 'redis.conf', 'no', '网络', null, 'protected-mode', '保护模式', null, '0', null, null, null, '0', '2', null, null, '0', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('827', 'redis', 'redis.conf', '6379', '网络', null, 'port', '端口号', null, '0', null, null, null, '0', '3', null, null, '0', 'int', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('828', 'redis', 'redis.conf', '511', '网络', 'input', 'tcp-backlog', 'tcp监听最大数', null, '0', null, null, 'TCP监听的最大数，这里需要注意，如果链接过多，需要调整的话，同时需要调整/proc/sys/net/core/somaxconn下的配置，否则linux下会默认使用此配置调正到最低。', '2', '4', null, null, '1', 'int', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('829', 'redis', 'redis.conf', '0', '网络', 'input', 'timeout', '客户端超时时间', null, '0', '^([1-9]|0|[1-9]\\d+)$', '请输入0或大于0的整数', '设置客户端的超时时间，单位为秒，如果客户端在此时间内没有发出新的请求，就关闭连接。默认为0就是不管它。', '1', '5', null, null, '1', 'int', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('83', 'kafka', 'server.properties', '2147483647', 'proxy', 'input', 'max.connections.per.ip', '', '', '0', '', '', '设置每个ip地址最大连接数目。', '2', '110', null, '', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('830', 'redis', 'redis.conf', '300', '网络', 'input', 'tcp-keepalive', 'tcp检查客户端', null, '0', '^([1-9]|[1-9]\\d+)$', '请输入大于0的整数', 'TCP检测，也就是说每过300秒检测一次客户端是否还有效，避免服务器长时间阻塞。', '1', '6', null, null, '1', 'int', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('831', 'redis', 'redis.conf', 'no', '基本设置', null, 'daemonize', '守护进程', null, '0', 'yes|no', '请输入yes或者no', null, '0', '7', null, null, '0', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('832', 'redis', 'redis.conf', 'no', '基本设置', null, 'supervised', '进程管理方式', null, '0', 'yes|no', '请输入yes或者no', null, '0', '8', null, null, '0', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('833', 'redis', 'redis.conf', './redis.pid', '基本设置', 'input', 'pidfile', 'pid文件', null, '0', null, null, null, '0', '9', null, null, '0', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('834', 'redis', 'redis.conf', 'notice', '基本设置', 'radio', 'loglevel', '日志级别', '{\"debug\":\"debug\",\"varbose\":\"varbose\",\"notice\":\"notice\",\"warning\":\"warning\"}', '0', '^\\S*$', '请选择，不能为空', 'debug：记录很多信息，用于开发和测试；?varbose：有用的信息，不像debug会记录那么多；?notice：普通的verbose，常用于生产环境；?warning：只有非常重要或者严重的信息会记录到日志；', '2', '10', null, null, '1', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('835', 'redis', 'redis.conf', null, '基本设置', null, 'logfile', '日志文件名', null, '0', null, null, null, '0', '11', null, null, '0', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('836', 'redis', 'redis.conf', '16', '基本设置', null, 'databases', '数据库个数', null, '0', null, null, null, '0', '12', null, null, '0', 'int', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('837', 'redis', 'redis.conf', 'yes', '基本设置', null, 'always-show-logo', '启动时显示logo', null, '0', null, null, null, '0', '13', null, null, '0', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('838', 'redis', 'redis.conf', '900 1|300 10|60 10000', '快照文件', 'input', 'save', '持久化规则', null, '0', null, '请参考redis官网了解配置格式', '设置 Redis 进行数据库镜像的频率，默认配置表示900秒内1个key变化、300内秒十个key变化、60秒内1万个key变化，则备份内存数据到磁盘。', '1', '13', null, null, '1', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('84', 'kafka', 'server.properties', '\"\"', 'proxy', 'input', 'max.connections.per.ip.overrides', '', '', '0', '^\\S*$', '输入不能为空', '设置每个 IP将覆盖默认的最大连接数。', '2', '111', null, '', '1', 'String', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('841', 'redis', 'redis.conf', 'yes', '快照文件', null, 'stop-writes-on-bgsave-error', '持久化出错可继续提供服务', null, '0', null, null, null, '0', '17', null, null, '0', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('842', 'redis', 'redis.conf', 'yes', '快照文件', null, 'rdbcompression', '支持压缩', null, '0', null, null, null, '0', '18', null, null, '0', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('843', 'redis', 'redis.conf', 'yes', '快照文件', null, 'rdbchecksum', '支持CRC64检测', null, '0', null, null, null, '0', '19', null, null, '0', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('844', 'redis', 'redis.conf', 'dump.rdb', '快照文件', null, 'dbfilename', '备份文件名', null, '0', null, null, null, '0', '20', null, null, '0', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('845', 'redis', 'redis.conf', './data', '快照文件', null, 'dir', '备份目录', null, '0', null, null, null, '0', '21', null, null, '0', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('846', 'redis', 'redis.conf', '<masterip> <masterport>', '从节点', null, 'slaveof', 'master地址', null, '0', null, null, null, '0', '22', null, null, '0', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('847', 'redis', 'redis.conf', '<master-password>', '从节点', null, 'masterauth', 'master密码', null, '0', null, null, null, '0', '23', null, null, '0', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('848', 'redis', 'redis.conf', 'yes', '从节点', null, 'slave-serve-stale-data', '持续提供服务', null, '0', null, null, null, '0', '24', null, null, '0', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('849', 'redis', 'redis.conf', 'yes', '从节点', null, 'slave-read-only', '只读', null, '0', null, null, null, '0', '25', null, null, '0', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('85', 'kafka', 'server.properties', '1', 'proxy', 'input', 'num.partitions', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置日志分区数量。', '1', '7', null, '', '1', 'int', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('850', 'redis', 'redis.conf', 'no', '从节点', null, 'repl-diskless-sync', null, null, '0', null, null, null, '0', '26', null, null, '0', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('851', 'redis', 'redis.conf', '5', '从节点', null, 'repl-diskless-sync-delay', null, null, '0', null, null, null, '0', '27', null, null, '0', 'int', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('852', 'redis', 'redis.conf', '10', '从节点', null, 'repl-ping-slave-period', null, null, '0', null, null, null, '0', '28', null, null, '0', 'int', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('853', 'redis', 'redis.conf', '60', '从节点', null, 'repl-timeout', null, null, '0', null, null, null, '0', '29', null, null, '0', 'int', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('854', 'redis', 'redis.conf', 'no', '从节点', null, 'repl-disable-tcp-nodelay', null, null, '0', null, null, null, '0', '30', null, null, '0', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('855', 'redis', 'redis.conf', '1mb', '从节点', null, 'repl-backlog-size', null, null, '0', null, null, null, '0', '31', null, null, '0', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('856', 'redis', 'redis.conf', '3600', '从节点', null, 'repl-backlog-ttl', null, null, '0', null, null, null, '0', '32', null, null, '0', 'int', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('857', 'redis', 'redis.conf', '100', '从节点', null, 'slave-priority', null, null, '0', null, null, null, '0', '33', null, null, '0', 'int', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('858', 'redis', 'redis.conf', '3', '从节点', null, 'min-slaves-to-write', null, null, '0', null, null, null, '0', '34', null, null, '0', 'int', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('859', 'redis', 'redis.conf', '10', '从节点', null, 'min-slaves-max-lag', null, null, '0', null, null, null, '0', '35', null, null, '0', 'int', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('86', 'kafka', 'server.properties', '1000', 'proxy', 'input', 'producer.purgatory.purge.interval.requests', '', '', '1', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置生产者请求清除时间。', '2', '112', null, '毫秒', '1', 'int', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('860', 'redis', 'redis.conf', '5.5.5.5', '从节点', null, 'slave-announce-ip', null, null, '0', null, null, null, '0', '36', null, null, '0', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('861', 'redis', 'redis.conf', '1234', '从节点', null, 'slave-announce-port', null, null, '0', null, null, null, '0', '37', null, null, '0', 'int', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('862', 'redis', 'redis.conf', 'foobared', '安全设置', null, 'requirepass', '密码', null, '0', null, null, null, '0', '38', null, null, '0', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('863', 'redis', 'redis.conf', null, '安全设置', 'input', 'rename-command', '重命名命令', null, '0', null, '命令请参考redis官网', '请输入要屏蔽的命令，用空格分隔，示例:command1|command2', '1', '38', null, null, '1', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('864', 'redis', 'redis.conf', '10000', '连接数', 'input', 'maxclients', '最大连接数', null, '0', '^([1-9]|[1-9]\\d+)$', '请输入大于0的整数', '限制同时连接的客户数量。当连接数超过这个值时，redis 将不再接收其他连接请求，客户端尝试连接时将收到error 信息。默认为10000，要考虑系统文件描述符限制，不宜过大，浪费文件描述符，具体多少根据具体情况而定。', '1', '40', null, null, '1', 'int', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('865', 'redis', 'redis.conf', '<bytes>', '内存设置', null, 'maxmemory', '最大内存限制', null, '0', null, null, null, '0', '41', null, null, '0', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('866', 'redis', 'redis.conf', 'noeviction', '内存设置', 'radio', 'maxmemory-policy', '清理规则', '{\"volatile-lru\":\"volatile-lru\",\"allkeys-lru\":\"allkeys-lru\",\"volatile-lfu\":\"volatile-lfu\",\"allkeys-lfu\":\"allkeys-lfu\",\"volatile-random\":\"volatile-random\",\"allkeys-random\":\"allkeys-random\",\"volatile-ttl\":\"volatile-ttl\",\"noeviction\":\"noeviction\"}', '0', '^\\S*$', '请选择，不能为空', 'volatile-lru -> 使用 LRU 算法移除包含过期设置的 key 。\nnoeviction -> 不让任何 key 过期，只是给写入操作返回一个错误。\nallkeys-lru -> 根据 LRU 算法移除所有的 key 。\nvolatile-random -> 对”过期集合”中的数据采取”随即选取”算法,并移除选中的K-V,直到”内存足够”为止. 如果如果”过期集合”中全部移除全部移除仍不能满足,将OOM\nallkeys-random -> 对所有的数据,采取”随机选取”算法,并移除选中的K-V,直到”内存足够”为止\nvolatile-ttl ->对”过期集合”中的数据采取TTL算法(最小存活时间),移除即将过期的数据.', '2', '42', null, null, '1', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('867', 'redis', 'redis.conf', '5', '内存设置', 'input', 'maxmemory-samples', 'LRU算法取样数', null, '0', '^[1-9]|10$', '请输入1到10的整数', 'LRU算法取样', '2', '43', null, null, '1', 'int', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('868', 'redis', 'redis.conf', 'no', '异步操作', null, 'lazyfree-lazy-eviction', null, null, '0', null, null, null, '0', '44', null, null, '0', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('869', 'redis', 'redis.conf', 'no', '异步操作', null, 'lazyfree-lazy-expire', null, null, '0', null, null, null, '0', '45', null, null, '0', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('87', 'kafka', 'server.properties', '1', 'proxy', 'input', 'replica.fetch.backoff.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置备份数据失败的等待时间。', '2', '113', null, '秒', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('870', 'redis', 'redis.conf', 'no', '异步操作', null, 'lazyfree-lazy-server-del', null, null, '0', null, null, null, '0', '46', null, null, '0', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('871', 'redis', 'redis.conf', 'no', '异步操作', null, 'slave-lazy-flush', null, null, '0', null, null, null, '0', '47', null, null, '0', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('872', 'redis', 'redis.conf', 'no', 'AOF设置', 'radio', 'appendonly', '开启aof', '{\"是\":\"yes\",\"否\":\"no\"}', '0', 'yes|no', '请输入yes或者no', '开启aof', '1', '48', null, null, '1', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('873', 'redis', 'redis.conf', 'appendonly.aof', 'AOF设置', null, 'appendfilename', 'aof文件名', null, '0', null, null, null, '0', '49', null, null, '0', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('874', 'redis', 'redis.conf', 'everysec', 'AOF设置', 'input', 'appendfsync', '备份规则', '{\"always\":\"always\",\"everysec\":\"everysec\",\"no\":\"no\"}', '0', '^\\S*$', '请选择，不能为空', '设置对appendonly.aof 文件进行同步的频率。always 表示每次有写操作都进行同步，everysec 表示对写操作进行累积，每秒同步一次。no不主动fsync，由OS自己来完成。这个需要根据实际业务场景进行配置。', '2', '50', null, null, '1', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('875', 'redis', 'redis.conf', 'no', 'AOF设置', 'radio', 'no-appendfsync-on-rewrite', '持续同步', '{\"是\":\"yes\",\"否\":\"no\"}', '0', 'yes|no', '请输入yes或者no', '在aof rewrite期间,是否对aof新记录的append暂缓使用文件同步策略,主要考虑磁盘IO开支和请求阻塞时间。默认为no,表示”不暂缓”,新的aof记录仍然会被立即同步。', '2', '51', null, null, '1', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('876', 'redis', 'redis.conf', '100', 'AOF设置', 'input', 'auto-aof-rewrite-percentage', '触发重写aof文件比例', null, '0', '^[1-9]\\d[0]?$', '请输入10到100的整数', '当Aof log增长超过指定比例时，重写log file， 设置为0表示不自动重写Aof 日志，重写是为了使aof体积保持最小，而确保保存最完整的数据。', '2', '52', null, null, '1', 'int', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('877', 'redis', 'redis.conf', '64', 'AOF设置', 'input', 'auto-aof-rewrite-min-size', '出发重写aof的最小尺寸', null, '1047576', '^[1-9]|([1-10]\\d+)$', '请输入大于0的整数', '触发aof rewrite的最小文件尺寸。', '2', '53', 'mb', 'mb', '1', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('878', 'redis', 'redis.conf', 'yes', 'AOF设置', 'radio', 'aof-load-truncated', '启动加载被截断的aof文件', '{\"是\":\"yes\",\"否\":\"no\"}', '0', 'yes|no', '请输入yes或者no', 'redis在启动的时候可以加载被截断的AOF文件，默认启用。', '2', '54', null, null, '1', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('879', 'redis', 'redis.conf', 'no', 'AOF设置', 'radio', 'aof-use-rdb-preamble', 'RDB-AOF 混合持久化', '{\"是\":\"yes\",\"否\":\"no\"}', '0', 'yes|no', '请输入yes或者no', 'Redis 4.0 新增了 RDB-AOF 混合持久化格式， 这是一个可选的功能， 在开启了这个功能之后， AOF 重写产生的文件将同时包含 RDB 格式的内容和 AOF 格式的内容， 其中 RDB 格式的内容用于记录已有的数据， 而 AOF 格式的内存则用于记录最近发生了变化的数据， 这样 Redis 就可以同时兼有 RDB 持久化和 AOF 持久化的优点 —— 既能够快速地生成重写文件， 也能够在出现问题时， 快速地载入数据。', '2', '55', null, null, '1', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('88', 'kafka', 'server.properties', '1000', 'proxy', 'input', 'reserved.broker.max.id', '', '', '0', '', '', 'Max number that can be used for a broker.id', '0', '114', null, '', '0', 'int', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('880', 'redis', 'redis.conf', '5000', 'LUA脚本', 'input', 'lua-time-limit', 'lua脚本运行最大时间', null, '0', '^[1-9]|0|([1-9]\\d+)$', '请输入0或大于0的整数', 'lua脚本运行的最大时间', '2', '56', null, '毫秒', '1', 'int', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('881', 'redis', 'redis.conf', '10000', '慢日志记录', 'input', 'slowlog-log-slower-than', '慢日志时间', null, '0', '^[1-9]|([1-9]\\d+)$', '请输入大于0的整数', '“慢操作日志”记录,单位:微秒(百万分之一秒,1000 * 1000),如果操作时间超过此值,将会把command信息”记录”起来.(内存,非文件)。其中”操作时间”不包括网络IO开支,只包括请求达到server后进行”内存实施”的时间.”0”表示记录全部操作。', '2', '57', null, '微秒', '1', 'int', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('882', 'redis', 'redis.conf', '128', '慢日志记录', 'input', 'slowlog-max-len', '记录条数', null, '0', '^[1-9]|([1-10]\\d+)$', '请输入大于1的整数', '“慢操作日志”保留的最大条数,”记录”将会被队列化,如果超过了此长度,旧记录将会被移除。可以通过”SLOWLOG args”查看慢记录的信息(SLOWLOG get 10,SLOWLOG reset)。', '2', '58', null, null, '1', 'int', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('883', 'redis', 'redis.conf', '0', '延迟监控', 'input', 'latency-monitor-threshold', '延迟监控', null, '0', '^[1-9]|0|([1-9]\\d+)$', '请输入0或大于0的整数', '延迟监控，用于记录等于或超过了指定时间的操作，默认是关闭状态，即值为0。', '2', '59', null, null, '1', 'int', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('884', 'redis', 'redis.conf', null, '事件通知', 'input', 'notify-keyspace-events', '键空间通知', null, '0', null, '请参考redis官网了解配置格式', '客户端可以通过订阅/发布(Pub/Sub)机制，接收那些以某种方式改变了Redis数据空间的事件通知。', '2', '60', null, null, '1', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('885', 'redis', 'redis.conf', '512', '数据结构', 'input', 'hash-max-ziplist-entries', null, null, '0', '^[1-9]|([1-10]\\d+)$', '请输入大于0的整数', 'ziplist中允许存储的最大条目个数，默认为512', '2', '61', null, null, '1', 'int', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('886', 'redis', 'redis.conf', '64', '数据结构', 'input', 'hash-max-ziplist-value', null, null, '0', '^[1-9]|([1-10]\\d+)$', '请输入大于0的整数', 'ziplist中允许条目value值最大字节数，默认为64', '2', '62', null, null, '1', 'int', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('887', 'redis', 'redis.conf', '-2', '数据结构', 'input', 'list-max-ziplist-size', null, null, '0', '^-[1-5]$', '请输入-1到-5的整数', '设置ziplist的合理长度', '2', '63', null, null, '1', 'int', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('888', 'redis', 'redis.conf', '0', '数据结构', 'input', 'list-compress-depth', null, null, '0', '^[0-3]$', '请输入0到3的整数', 'list结构压缩级别', '2', '64', null, null, '1', 'int', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('889', 'redis', 'redis.conf', '512', '数据结构', 'input', 'set-max-intset-entries', null, null, '0', '^[1-9]|([1-10]\\d+)$', '请输入大于0的整数', 'intset中允许保存的最大条目个数,如果达到阀值,intset将会被重构为hashtable', '2', '65', null, null, '1', 'int', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('89', 'kafka', 'server.properties', 'PLAINTEXT', 'proxy', 'input', 'security.inter.broker.protocol', '', '', '0', '', '', 'Security protocol used to communicate between brokers', '0', '115', null, '', '0', 'String', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('890', 'redis', 'redis.conf', '128', '数据结构', 'input', 'zset-max-ziplist-entries', null, null, '0', '^[1-9]|([1-10]\\d+)$', '请输入大于0的整数', 'ziplist中允许存储的最大条目个数，默认为128', '2', '66', null, null, '1', 'int', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('891', 'redis', 'redis.conf', '64', '数据结构', 'input', 'zset-max-ziplist-value', null, null, '0', '^[1-9]|([1-10]\\d+)$', '请输入大于0的整数', 'ziplist中允许条目value值最大字节数，默认为64', '2', '67', null, null, '1', 'int', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('892', 'redis', 'redis.conf', '3000', '数据结构', null, 'hll-sparse-max-bytes', null, null, '0', null, null, null, '0', '68', null, null, '0', 'int', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('893', 'redis', 'redis.conf', 'yes', '数据结构', null, 'activerehashing', null, null, '0', null, null, null, '0', '69', null, null, '0', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('894', 'redis', 'redis.conf', 'normal 0 0 0', '数据结构', 'input', 'client-output-buffer-limit', null, null, '0', '^\\S*$', '请参考redis官网了解配置格式', '客户端buffer控制。', '2', '70', null, null, '1', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('895', 'redis', 'redis.conf', 'slave 256m 64m 60', '数据结构', 'input', 'client-output-buffer-limit', null, null, '0', '^\\S*$', '请参考redis官网了解配置格式', '客户端buffer控制。', '2', '71', null, null, '1', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('896', 'redis', 'redis.conf', 'pubsub 32mb 8mb 60', '数据结构', 'input', 'client-output-buffer-limit', null, null, '0', '^\\S*$', '请参考redis官网了解配置格式', '客户端buffer控制。', '2', '72', null, null, '1', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('897', 'redis', 'redis.conf', '512mb', '数据结构', null, '#proto-max-bulk-len', null, null, '0', null, null, null, '0', '73', null, null, '0', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('898', 'redis', 'redis.conf', '10', '数据结构', 'input', 'hz', null, null, '0', '^[1-9]|([1-10]\\d+)$', '请输入大于0的整数', 'hz默认设为10，提高它的值将会占用更多的cpu，当然相应的redis将会更快的处理同时到期的许多key，以及更精确的去处理超时。hz的取值范围是1~500，通常不建议超过100，只有在请求延时非常低的情况下可以将值提升到100。', '2', '74', null, null, '1', 'int', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('899', 'redis', 'redis.conf', 'yes', '数据结构', 'radio', 'aof-rewrite-incremental-fsync', null, '{\"是\":\"yes\",\"否\":\"no\"}', '0', null, null, 'aof rewrite过程中,是否采取增量文件同步策略,默认为“yes”。 rewrite过程中,每32M数据进行一次文件同步,这样可以减少aof大文件写入对磁盘的操作次数', '2', '75', null, null, '1', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('9', 'kafka', 'server.properties', '300', 'proxy', 'input', 'leader.imbalance.check.interval.seconds', '', '', '1', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置leader平衡检测的间隔时间。', '2', '116', null, '秒', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('90', 'kafka', 'server.properties', '[]', 'proxy', 'input', 'metric.reporters', '', '', '0', '[]|^\\S*$', '输入不能为空', '设置度量记录的类的列表。实现MetricReporter接口允许插入将被通知新度量标准创建的类。JmxReporter 始终包含在注册 JMX 统计信息中。', '2', '117', null, '', '1', 'String', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('900', 'redis', 'redis.conf', '10', '数据结构', null, 'lfu-log-factor', null, null, '0', null, null, null, '0', '76', null, null, '0', 'int', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('901', 'redis', 'redis.conf', '1', '数据结构', null, 'lfu-decay-time', null, null, '0', null, null, null, '0', '77', null, null, '0', 'int', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('902', 'redis', 'redis.conf', 'yes', '整理碎片', null, 'activedefrag', null, null, '0', null, null, null, '0', '78', null, null, '0', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('903', 'redis', 'redis.conf', '100mb', '整理碎片', null, 'active-defrag-ignore-bytes', null, null, '0', null, null, null, '0', '79', null, null, '0', 'String', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('904', 'redis', 'redis.conf', '10', '整理碎片', null, 'active-defrag-threshold-lower', null, null, '0', null, null, null, '0', '80', null, null, '0', 'int', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('905', 'redis', 'redis.conf', '100', '整理碎片', null, 'active-defrag-threshold-upper', null, null, '0', null, null, null, '0', '81', null, null, '0', 'int', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('906', 'redis', 'redis.conf', '25', '整理碎片', null, 'active-defrag-cycle-min', null, null, '0', null, null, null, '0', '82', null, null, '0', 'int', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('907', 'redis', 'redis.conf', '75', '整理碎片', null, 'active-defrag-cycle-max', null, null, '0', null, null, null, '0', '83', null, null, '0', 'int', '4.0.8');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('908', 'redis', 'redis.conf', '127.0.0.1', '网络', null, 'bind', '绑定IP', null, '0', null, null, null, '0', '1', null, null, '0', 'String', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('909', 'redis', 'redis.conf', 'no', '网络', null, 'protected-mode', '保护模式', null, '0', null, null, null, '0', '2', null, null, '0', 'String', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('91', 'kafka', 'server.properties', '2', 'proxy', 'input', 'metrics.num.samples', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入必须在1到1000000000之间', '设置计算度量标准的样本数量。', '2', '118', null, '', '1', 'int', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('910', 'redis', 'redis.conf', '6379', '网络', null, 'port', '端口号', null, '0', null, null, null, '0', '3', null, null, '0', 'int', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('911', 'redis', 'redis.conf', '511', '网络', 'input', 'tcp-backlog', 'tcp监听最大数', null, '0', null, null, 'TCP监听的最大数，这里需要注意，如果链接过多，需要调整的话，同时需要调整/proc/sys/net/core/somaxconn下的配置，否则linux下会默认使用此配置调正到最低。', '0', '4', null, null, '0', 'int', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('912', 'redis', 'redis.conf', '0', '网络', 'input', 'timeout', '客户端超时时间', null, '0', '^([1-9]|0|[1-9]\\d+)$', '请输入0或大于0的整数', '设置客户端的超时时间，单位为秒，如果客户端在此时间内没有发出新的请求，就关闭连接。默认为0就是不管它。', '1', '5', null, null, '1', 'int', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('913', 'redis', 'redis.conf', '300', '网络', 'input', 'tcp-keepalive', 'tcp检查客户端', null, '0', '^([1-9]|[1-9]\\d+)$', '请输入大于0的整数', 'TCP检测，也就是说每过300秒检测一次客户端是否还有效，避免服务器长时间阻塞。', '1', '6', null, null, '1', 'int', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('914', 'redis', 'redis.conf', 'no', '基本设置', null, 'daemonize', '守护进程', null, '0', 'yes|no', '请输入yes或者no', null, '0', '7', null, null, '0', 'String', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('915', 'redis', 'redis.conf', 'no', '基本设置', null, 'supervised', '进程管理方式', null, '0', 'yes|no', '请输入yes或者no', null, '0', '8', null, null, '0', 'String', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('916', 'redis', 'redis.conf', './redis.pid', '基本设置', 'input', 'pidfile', 'pid文件', null, '0', null, null, null, '0', '9', null, null, '0', 'String', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('917', 'redis', 'redis.conf', 'notice', '基本设置', 'radio', 'loglevel', '日志级别', '{\"debug\":\"debug\",\"varbose\":\"varbose\",\"notice\":\"notice\",\"warning\":\"warning\"}', '0', '^\\S*$', '请选择，不能为空', 'debug：记录很多信息，用于开发和测试；?varbose：有用的信息，不像debug会记录那么多；?notice：普通的verbose，常用于生产环境；?warning：只有非常重要或者严重的信息会记录到日志；', '2', '10', null, null, '1', 'String', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('918', 'redis', 'redis.conf', null, '基本设置', null, 'logfile', '日志文件名', null, '0', null, null, null, '0', '11', null, null, '0', 'String', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('919', 'redis', 'redis.conf', '16', '基本设置', null, 'databases', '数据库个数', null, '0', null, null, null, '0', '12', null, null, '0', 'int', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('92', 'kafka', 'server.properties', '30', 'proxy', 'input', 'metrics.sample.window.ms', '', '', '1000', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置计算度量标准的样本数量。', '2', '119', null, '秒', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('920', 'redis', 'redis.conf', '900 1|300 10|60 10000', '快照文件', 'input', 'save', '持久化规则', null, '0', '', '请参考redis官网了解配置格式', '设置 Redis 进行数据库镜像的频率，默认配置表示900秒内1个key变化、300内秒十个key变化、60秒内1万个key变化，则备份内存数据到磁盘。', '2', '13', null, null, '1', 'String', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('923', 'redis', 'redis.conf', 'yes', '快照文件', null, 'stop-writes-on-bgsave-error', '持久化出错可继续提供服务', null, '0', null, null, null, '0', '16', null, null, '0', 'String', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('924', 'redis', 'redis.conf', 'yes', '快照文件', null, 'rdbcompression', '支持压缩', null, '0', null, null, null, '0', '17', null, null, '0', 'String', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('925', 'redis', 'redis.conf', 'yes', '快照文件', null, 'rdbchecksum', '支持CRC64检测', null, '0', null, null, null, '0', '18', null, null, '0', 'String', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('926', 'redis', 'redis.conf', 'dump.rdb', '快照文件', null, 'dbfilename', '备份文件名', null, '0', null, null, null, '0', '19', null, null, '0', 'String', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('927', 'redis', 'redis.conf', './data', '快照文件', null, 'dir', '备份目录', null, '0', null, null, null, '0', '20', null, null, '0', 'String', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('928', 'redis', 'redis.conf', '<masterip> <masterport>', '从节点', null, 'slaveof', 'master地址', null, '0', null, null, null, '0', '21', null, null, '0', 'String', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('929', 'redis', 'redis.conf', '<master-password>', '从节点', null, 'masterauth', 'master密码', null, '0', null, null, null, '0', '22', null, null, '0', 'String', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('93', 'kafka', 'server.properties', '11', 'proxy', 'input', 'quota.window.num', '', '', '0', '^([1-9]\\d{0,9}|1000000000)$', '输入值必须在1到1000000000', '设置内存中保留的样本数量。', '2', '120', null, '', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('930', 'redis', 'redis.conf', 'yes', '从节点', null, 'slave-serve-stale-data', '持续提供服务', null, '0', null, null, null, '0', '23', null, null, '0', 'String', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('931', 'redis', 'redis.conf', 'yes', '从节点', null, 'slave-read-only', '只读', null, '0', null, null, null, '0', '24', null, null, '0', 'String', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('932', 'redis', 'redis.conf', 'no', '从节点', null, 'repl-diskless-sync', null, null, '0', null, null, null, '0', '25', null, null, '0', 'String', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('933', 'redis', 'redis.conf', '5', '从节点', null, 'repl-diskless-sync-delay', null, null, '0', null, null, null, '0', '26', null, null, '0', 'int', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('934', 'redis', 'redis.conf', '10', '从节点', null, 'repl-ping-slave-period', null, null, '0', null, null, null, '0', '27', null, null, '0', 'int', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('935', 'redis', 'redis.conf', '60', '从节点', null, 'repl-timeout', null, null, '0', null, null, null, '0', '28', null, null, '0', 'int', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('936', 'redis', 'redis.conf', 'no', '从节点', null, 'repl-disable-tcp-nodelay', null, null, '0', null, null, null, '0', '29', null, null, '0', 'String', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('937', 'redis', 'redis.conf', '1mb', '从节点', null, 'repl-backlog-size', null, null, '0', null, null, null, '0', '30', null, null, '0', 'String', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('938', 'redis', 'redis.conf', '3600', '从节点', null, 'repl-backlog-ttl', null, null, '0', null, null, null, '0', '31', null, null, '0', 'int', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('939', 'redis', 'redis.conf', '100', '从节点', null, 'slave-priority', null, null, '0', null, null, null, '0', '32', null, null, '0', 'int', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('94', 'kafka', 'server.properties', '1', 'proxy', 'input', 'quota.window.size.seconds', '', '', '1', '^([1-9]\\d{0,3}|10000)$', '输入值必须在1到10000', '设置每个样本的时间跨度。', '2', '121', null, '秒', '1', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('940', 'redis', 'redis.conf', '3', '从节点', null, 'min-slaves-to-write', null, null, '0', null, null, null, '0', '33', null, null, '0', 'int', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('941', 'redis', 'redis.conf', '10', '从节点', null, 'min-slaves-max-lag', null, null, '0', null, null, null, '0', '34', null, null, '0', 'int', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('942', 'redis', 'redis.conf', '5.5.5.5', '从节点', null, 'slave-announce-ip', null, null, '0', null, null, null, '0', '35', null, null, '0', 'String', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('943', 'redis', 'redis.conf', '1234', '从节点', null, 'slave-announce-port', null, null, '0', null, null, null, '0', '36', null, null, '0', 'int', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('944', 'redis', 'redis.conf', 'foobared', '安全设置', null, 'requirepass', '密码', null, '0', null, null, null, '0', '37', null, null, '0', 'String', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('945', 'redis', 'redis.conf', null, '安全设置', 'input', 'rename-command', '重命名命令', null, '0', null, '命令请参考redis官网', '请输入要屏蔽的命令，用空格分隔，示例:command1|command2', '1', '38', null, null, '1', 'String', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('946', 'redis', 'redis.conf', '10000', 'LIMITS', 'input', 'maxclients', '最大连接数', null, '0', '^([1-9]|[1-9]\\d+)$', '请输入大于0的整数', '限制同时连接的客户数量。当连接数超过这个值时，redis 将不再接收其他连接请求，客户端尝试连接时将收到error 信息。默认为10000，要考虑系统文件描述符限制，不宜过大，浪费文件描述符，具体多少根据具体情况而定。', '1', '39', null, null, '1', 'int', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('947', 'redis', 'redis.conf', '<bytes>', 'LIMITS', null, 'maxmemory', '最大内存限制', null, '0', null, null, null, '0', '40', null, null, '0', 'String', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('948', 'redis', 'redis.conf', 'noeviction', 'LIMITS', 'radio', 'maxmemory-policy', '清理规则', '{\"noeviction\":\"noeviction\",\"allkeys-lru\":\"allkeys-lru\",\"volatile-lru\":\"volatile-lru\",\"allkeys-random\":\"allkeys-random\",\"volatile-random\":\"volatile-random\",\"volatile-ttl\":\"volatile-ttl\"}', '0', '^\\S*$', '请选择，不能为空', 'volatile-lru -> 使用 LRU 算法移除包含过期设置的 key 。\nnoeviction -> 不让任何 key 过期，只是给写入操作返回一个错误。\nallkeys-lru -> 根据 LRU 算法移除所有的 key 。\nvolatile-random -> 对”过期集合”中的数据采取”随即选取”算法,并移除选中的K-V,直到”内存足够”为止. 如果如果”过期集合”中全部移除全部移除仍不能满足,将OOM\nallkeys-random -> 对所有的数据,采取”随机选取”算法,并移除选中的K-V,直到”内存足够”为止\nvolatile-ttl ->对”过期集合”中的数据采取TTL算法(最小存活时间),移除即将过期的数据.', '2', '41', null, null, '1', 'String', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('949', 'redis', 'redis.conf', '5', 'LIMITS', 'input', 'maxmemory-samples', 'LRU算法取样数', null, '0', '^[1-9]|10$', '请输入1到10的整数', 'LRU算法取样', '2', '42', null, null, '1', 'int', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('95', 'kafka', 'server.properties', '-1', 'proxy', 'input', 'broker.id', '', '', '0', '', '', '', '0', '122', null, '', '0', 'int', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('950', 'redis', 'redis.conf', 'yes', 'AOF设置', 'radio', 'appendonly', '开启aof', '{\"是\":\"yes\",\"否\":\"no\"}', '0', 'yes|no', '请输入yes或者no', '开启aof', '1', '43', null, null, '1', 'String', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('951', 'redis', 'redis.conf', 'appendonly.aof', 'AOF设置', null, 'appendfilename', 'aof文件名', null, '0', null, null, null, '2', '44', null, null, '1', 'String', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('952', 'redis', 'redis.conf', 'everysec', 'AOF设置', 'radio', 'appendfsync', '备份规则', '{\"always\":\"always\",\"everysec\":\"everysec\",\"no\":\"no\"}', '0', '^\\S*$', '请选择，不能为空', '设置对appendonly.aof 文件进行同步的频率。always 表示每次有写操作都进行同步，everysec 表示对写操作进行累积，每秒同步一次。no不主动fsync，由OS自己来完成。这个需要根据实际业务场景进行配置。', '2', '45', null, null, '1', 'String', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('953', 'redis', 'redis.conf', 'no', 'AOF设置', 'radio', 'no-appendfsync-on-rewrite', '持续同步', '{\"是\":\"yes\",\"否\":\"no\"}', '0', 'yes|no', '请输入yes或者no', '在aof rewrite期间,是否对aof新记录的append暂缓使用文件同步策略,主要考虑磁盘IO开支和请求阻塞时间。默认为no,表示”不暂缓”,新的aof记录仍然会被立即同步。', '2', '46', null, null, '1', 'String', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('954', 'redis', 'redis.conf', '100', 'AOF设置', 'input', 'auto-aof-rewrite-percentage', '触发重写aof文件比例', null, '0', '^[1-9]\\d[0]?$', '请输入10到100的整数', '当Aof log增长超过指定比例时，重写log file， 设置为0表示不自动重写Aof 日志，重写是为了使aof体积保持最小，而确保保存最完整的数据。', '2', '47', null, null, '1', 'int', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('955', 'redis', 'redis.conf', '64', 'AOF设置', 'input', 'auto-aof-rewrite-min-size', '出发重写aof的最小尺寸', null, '1047576', '^[1-9]|([1-10]\\d+)$', '请输入大于0的整数', '触发aof rewrite的最小文件尺寸。', '2', '48', 'mb', 'mb', '1', 'String', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('956', 'redis', 'redis.conf', 'yes', 'AOF设置', 'radio', 'aof-load-truncated', '启动加载被截断的aof文件', '{\"是\":\"yes\",\"否\":\"no\"}', '0', 'yes|no', '请输入yes或者no', 'redis在启动的时候可以加载被截断的AOF文件，默认启用。', '2', '49', null, null, '1', 'String', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('957', 'redis', 'redis.conf', '5000', 'LUA脚本', 'input', 'lua-time-limit', 'lua脚本运行最大时间', null, '0', '^[1-9]|0|([1-9]\\d+)$', '请输入0或大于0的整数', 'lua脚本运行的最大时间', '2', '50', null, '毫秒', '1', 'int', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('958', 'redis', 'redis.conf', '10000', '慢日志记录', 'input', 'slowlog-log-slower-than', '慢日志时间', null, '0', '^[1-9]|0|([1-9]\\d+)$', '请输入大于0的整数', '“慢操作日志”记录,单位:微秒(百万分之一秒,1000 * 1000),如果操作时间超过此值,将会把command信息”记录”起来.(内存,非文件)。其中”操作时间”不包括网络IO开支,只包括请求达到server后进行”内存实施”的时间.”0”表示记录全部操作。', '2', '51', null, '微秒', '1', 'int', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('959', 'redis', 'redis.conf', '128', '慢日志记录', 'input', 'slowlog-max-len', '记录条数', null, '0', '^[1-9]|([1-9]\\d+)$', '请输入大于1的整数', '“慢操作日志”保留的最大条数,”记录”将会被队列化,如果超过了此长度,旧记录将会被移除。可以通过”SLOWLOG args”查看慢记录的信息(SLOWLOG get 10,SLOWLOG reset)。', '2', '52', null, null, '1', 'int', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('96', 'kafka', 'server.properties', '\"\"', 'proxy', 'input', 'host.name', '', '', '0', '', '', '', '0', '123', null, '', '0', 'String', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('960', 'redis', 'redis.conf', '0', '延迟监控', 'input', 'latency-monitor-threshold', '延迟监控', null, '0', '^[1-9]|([1-10]\\d+)$', '请输入0或大于0的整数', '延迟监控，用于记录等于或超过了指定时间的操作，默认是关闭状态，即值为0。', '2', '53', null, null, '1', 'int', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('961', 'redis', 'redis.conf', null, '事件通知', 'input', 'notify-keyspace-events', '键空间通知', null, '0', '^[1-9]|0|([1-9]\\d+)$', '请参考redis官网了解配置格式', '客户端可以通过订阅/发布(Pub/Sub)机制，接收那些以某种方式改变了Redis数据空间的事件通知。', '2', '54', null, null, '0', 'String', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('962', 'redis', 'redis.conf', '512', '数据结构', 'input', 'hash-max-ziplist-entries', null, null, '0', '^[1-9]|([1-10]\\d+)$', '请输入大于0的整数', 'ziplist中允许存储的最大条目个数，默认为512', '2', '55', null, null, '1', 'int', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('963', 'redis', 'redis.conf', '64', '数据结构', 'input', 'hash-max-ziplist-value', null, null, '0', '^[1-9]|([1-10]\\d+)$', '请输入大于0的整数', 'ziplist中允许条目value值最大字节数，默认为64', '2', '56', null, null, '1', 'int', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('964', 'redis', 'redis.conf', '-2', '数据结构', 'input', 'list-max-ziplist-size', null, null, '0', '^-[1-5]$', '请输入-1到-5的整数', '设置ziplist的合理长度', '2', '57', null, null, '1', 'int', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('965', 'redis', 'redis.conf', '0', '数据结构', 'input', 'list-compress-depth', null, null, '0', '^[0-3]$', '请输入0到3的整数', 'list结构压缩级别', '2', '58', null, null, '1', 'int', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('966', 'redis', 'redis.conf', '512', '数据结构', 'input', 'set-max-intset-entries', null, null, '0', '^[1-9]|([1-10]\\d+)$', '请输入大于0的整数', 'intset中允许保存的最大条目个数,如果达到阀值,intset将会被重构为hashtable', '2', '59', null, null, '1', 'int', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('967', 'redis', 'redis.conf', '128', '数据结构', 'input', 'zset-max-ziplist-entries', null, null, '0', '^[1-9]|([1-10]\\d+)$', '请输入大于0的整数', 'ziplist中允许存储的最大条目个数，默认为128', '2', '60', null, null, '1', 'int', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('968', 'redis', 'redis.conf', '64', '数据结构', 'input', 'zset-max-ziplist-value', null, null, '0', '^[1-9]|([1-10]\\d+)$', '请输入大于0的整数', 'ziplist中允许条目value值最大字节数，默认为64', '2', '61', null, null, '1', 'int', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('969', 'redis', 'redis.conf', '3000', '数据结构', null, 'hll-sparse-max-bytes', null, null, '0', null, null, null, '0', '62', null, null, '0', 'int', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('97', 'kafka', 'server.properties', '/tmp/kafka-logs', 'proxy', 'input', 'log.dir', '', '', '0', '', '', '', '0', '124', null, '', '0', 'String', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('970', 'redis', 'redis.conf', 'yes', '数据结构', null, 'activerehashing', null, null, '0', null, null, null, '0', '63', null, null, '0', 'String', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('971', 'redis', 'redis.conf', 'normal 0 0 0', '数据结构', 'input', 'client-output-buffer-limit', null, null, '0', '^\\S*$', '请参考redis官网了解配置格式', '客户端buffer控制。', '2', '64', null, null, '1', 'String', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('972', 'redis', 'redis.conf', 'slave 256mb 64mb 60', '数据结构', 'input', 'client-output-buffer-limit', null, null, '0', '^\\S*$', '请参考redis官网了解配置格式', '客户端buffer控制。', '2', '65', null, null, '1', 'String', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('973', 'redis', 'redis.conf', 'pubsub 32mb 8mb 60', '数据结构', 'input', 'client-output-buffer-limit', null, null, '0', '^\\S*$', '请参考redis官网了解配置格式', '客户端buffer控制。', '2', '66', null, null, '1', 'String', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('974', 'redis', 'redis.conf', '10', '数据结构', 'input', 'hz', null, null, '0', '^[1-9]|([1-10]\\d+)$', '请输入大于0的整数', 'hz默认设为10，提高它的值将会占用更多的cpu，当然相应的redis将会更快的处理同时到期的许多key，以及更精确的去处理超时。hz的取值范围是1~500，通常不建议超过100，只有在请求延时非常低的情况下可以将值提升到100。', '2', '67', null, null, '1', 'int', '3.2.11');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('975', 'redis', 'redis.conf', 'no', '基本设置', null, 'daemonize', '守护进程', null, '0', null, null, null, '0', '1', null, null, '0', 'String', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('976', 'redis', 'redis.conf', './redis.pid', '基本设置', null, 'pidfile', 'pid文件', null, '0', null, null, null, '0', '2', null, null, '0', 'String', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('977', 'redis', 'redis.conf', '6379', '基本设置', null, 'port', '端口号', null, '0', null, null, null, '0', '3', null, null, '0', 'int', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('978', 'redis', 'redis.conf', '511', '基本设置', 'input', 'tcp-backlog', 'tcp监听最大数', null, '0', null, null, 'TCP监听的最大数，这里需要注意，如果链接过多，需要调整的话，同时需要调整/proc/sys/net/core/somaxconn下的配置，否则linux下会默认使用此配置调正到最低。', '2', '4', null, null, '0', 'int', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('979', 'redis', 'redis.conf', '0', '基本设置', 'input', 'timeout', '客户端超时时间', null, '0', '^([1-9]|0|[1-9]\\d+)$', '请输入0或大于0的整数', '设置客户端的超时时间，单位为秒，如果客户端在此时间内没有发出新的请求，就关闭连接。默认为0就是不管它。', '1', '5', null, null, '1', 'int', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('98', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'log.dirs', '', '', '0', '', '', '', '0', '125', null, '', '0', 'String', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('980', 'redis', 'redis.conf', '0', '基本设置', 'input', 'tcp-keepalive', 'tcp检查客户端', null, '0', '^([1-9]|[1-9]\\d+)$', '请输入大于0的整数', 'TCP检测，也就是说每过300秒检测一次客户端是否还有效，避免服务器长时间阻塞。', '1', '6', null, null, '1', 'int', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('981', 'redis', 'redis.conf', 'notice', '基本设置', 'radio', 'loglevel', '日志级别', '{\"debug\":\"debug\",\"varbose\":\"varbose\",\"notice\":\"notice\",\"warning\":\"warning\"}', '0', '^\\S*$', '请选择，不能为空', 'debug：记录很多信息，用于开发和测试；?varbose：有用的信息，不像debug会记录那么多；?notice：普通的verbose，常用于生产环境；?warning：只有非常重要或者严重的信息会记录到日志；', '2', '7', null, null, '1', 'String', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('982', 'redis', 'redis.conf', null, '基本设置', null, 'logfile', '日志文件名', null, '0', null, null, null, '0', '8', null, null, '0', 'String', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('983', 'redis', 'redis.conf', 'no', '基本设置', null, 'syslog-enabled', null, null, '0', null, null, null, '0', '9', null, null, '0', null, '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('984', 'redis', 'redis.conf', 'redis', '基本设置', null, 'syslog-ident', null, null, '0', null, null, null, '0', '10', null, null, '0', null, '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('985', 'redis', 'redis.conf', 'local0', '基本设置', null, 'syslog-facility', null, null, '0', null, null, null, '0', '11', null, null, '0', null, '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('986', 'redis', 'redis.conf', '16', '基本设置', null, 'databases', '数据库个数', null, '0', null, null, null, '0', '12', null, null, '0', 'int', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('987', 'redis', 'redis.conf', '900 1|300 10|60 10000', '快照文件', 'input', 'save', '持久化规则', null, '0', null, '请参考redis官网了解配置格式', '设置 Redis 进行数据库镜像的频率，默认配置表示900秒内1个key变化、300内秒十个key变化、60秒内1万个key变化，则备份内存数据到磁盘。', '1', '13', null, null, '1', 'String', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('99', 'kafka', 'server.properties', 'null', 'proxy', 'input', 'zookeeper.connection.timeout.ms', '', '', '1000', '', '', '', '0', '126', null, '秒', '0', 'long', '2.11-0.9.0.0');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('990', 'redis', 'redis.conf', 'yes', '快照文件', null, 'stop-writes-on-bgsave-error', '持久化出错可继续提供服务', null, '0', null, null, null, '0', '16', null, null, '0', 'String', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('991', 'redis', 'redis.conf', 'yes', '快照文件', null, 'rdbcompression', '支持压缩', null, '0', null, null, null, '0', '17', null, null, '0', 'String', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('992', 'redis', 'redis.conf', 'yes', '快照文件', null, 'rdbchecksum', '支持CRC64检测', null, '0', null, null, null, '0', '18', null, null, '0', 'String', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('993', 'redis', 'redis.conf', 'dump.rdb', '快照文件', null, 'dbfilename', '备份文件名', null, '0', null, null, null, '0', '19', null, null, '0', 'String', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('994', 'redis', 'redis.conf', './data', '快照文件', null, 'dir', '备份目录', null, '0', null, null, null, '0', '20', null, null, '0', 'String', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('995', 'redis', 'redis.conf', '<masterip> <masterport>', '从节点', null, 'slaveof', 'master地址', null, '0', null, null, null, '0', '21', null, null, '0', 'String', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('996', 'redis', 'redis.conf', '<master-password>', '从节点', null, 'masterauth', 'master密码', null, '0', null, null, null, '0', '22', null, null, '0', 'String', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('997', 'redis', 'redis.conf', 'yes', '从节点', null, 'slave-serve-stale-data', '持续提供服务', null, '0', null, null, null, '0', '23', null, null, '0', 'String', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('998', 'redis', 'redis.conf', 'yes', '从节点', null, 'slave-read-only', '只读', null, '0', null, null, null, '0', '24', null, null, '0', 'String', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('999', 'redis', 'redis.conf', 'no', '从节点', null, 'repl-diskless-sync', null, null, '0', null, null, null, '0', '25', null, null, '0', 'String', '2.8.24');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('6000', 'mysql', 'my.cnf', '0', 'mysqld', 'text', 'expire_logs_days', 'binlog日志文件保留时间', 'NULL', '1', '^(0|[1-9]\\d*)$', '请输入0或大于0的整数', '请输入0或大于0的整数', '2', '1005', 'NULL', 'NULL', '1', 'int', '5.6');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('6001', 'mysql', 'my.cnf', '0', 'mysqld', 'text', 'expire_logs_days', 'binlog日志文件保留时间', 'NULL', '1', '^(0|[1-9]\\d*)$', '请输入0或大于0的整数', '请输入0或大于0的整数', '2', '1005', 'NULL', 'NULL', '1', 'int', '5.7');
INSERT INTO `bdos_stateful_service_component_default_config` (`id`, `app_type`, `cnf_file`, `def_value`, `group`, `input_type`, `key`, `name`, `optional`, `product`, `regx`, `regx_remark`, `remark`, `show_level`, `sort`, `unit`, `unit_remark`, `update_enable`, `value_type`, `version`) VALUES ('6002', 'mysql', 'my.cnf', '0', 'mysqld', 'text', 'expire_logs_days', 'binlog日志文件保留时间', 'NULL', '1', '^(0|[1-9]\\d*)$', '请输入0或大于0的整数', '请输入0或大于0的整数', '2', '1005', 'NULL', 'NULL', '1', 'int', '8.0');


-- -----------------------------------------------------------
-- 新增初始化服务数据库信息
-- -----------------------------------------------------------
-- ----------------------------
-- Table structure for bdos_service
-- ----------------------------
DROP TABLE IF EXISTS `bdos_service`;
CREATE TABLE `bdos_service` (
  `id` varchar(255) COLLATE utf8_bin NOT NULL,
  `cmd` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `cpu` double DEFAULT NULL,
  `create_time` datetime DEFAULT NULL,
  `created_by` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `description` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `env` longtext COLLATE utf8_bin,
  `hpa` longtext COLLATE utf8_bin,
  `image_version_id` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `instance` int(11) DEFAULT NULL,
  `is_pod_mutex` bit(1) DEFAULT NULL,
  `is_restart_effect` bit(1) DEFAULT NULL,
  `is_used_apm` bit(1) DEFAULT NULL,
  `memory` double DEFAULT NULL,
  `port_and_protocol` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `project_id` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `service_name` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `status` tinyint(4) DEFAULT NULL,
  `tenant_name` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `update_time` datetime DEFAULT NULL,
  `event_logs` longtext COLLATE utf8_bin DEFAULT NULL,
  `image_id` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

-- ----------------------------
-- Records of bdos_service
-- ----------------------------

INSERT INTO `bdos`.`bdos_service` (`id`, `cmd`, `cpu`, `create_time`, `created_by`, `description`, `env`, `hpa`, `image_version_id`, `instance`, `is_pod_mutex`, `is_restart_effect`, `is_used_apm`, `memory`, `port_and_protocol`, `project_id`, `service_name`, `status`, `tenant_name`, `update_time`, `event_logs`, `image_id`) VALUES ('402882526b6f837d016b73fe609200a4', '', '2', '2019-06-20 16:26:19', 'bcos', 'cas', NULL, NULL, '402882526b6f837d016b73e8fbf2007f', '1', NULL, '\0', '', '4', '{\"8080\":\"TCP\"}', '91bfde4111ca4012b9118eef1d4d7540', 'cas', '3', 'bcos', NULL, NULL, NULL);
INSERT INTO `bdos`.`bdos_service` (`id`, `cmd`, `cpu`, `create_time`, `created_by`, `description`, `env`, `hpa`, `image_version_id`, `instance`, `is_pod_mutex`, `is_restart_effect`, `is_used_apm`, `memory`, `port_and_protocol`, `project_id`, `service_name`, `status`, `tenant_name`, `update_time`, `event_logs`, `image_id`) VALUES ('402882526b6f837d016b73ffcaf400aa', '', '2', '2019-06-20 16:27:51', 'bcos', 'security', NULL, NULL, '402882526b6f837d016b73ea00cd0087', '1', NULL, '\0', '', '4', '{\"8080\":\"TCP\"}', '91bfde4111ca4012b9118eef1d4d7540', 'security', '3', 'bcos', NULL, NULL, NULL);
INSERT INTO `bdos`.`bdos_service` (`id`, `cmd`, `cpu`, `create_time`, `created_by`, `description`, `env`, `hpa`, `image_version_id`, `instance`, `is_pod_mutex`, `is_restart_effect`, `is_used_apm`, `memory`, `port_and_protocol`, `project_id`, `service_name`, `status`, `tenant_name`, `update_time`, `event_logs`, `image_id`) VALUES ('402882526b6f837d016b7401791200b0', '', '2', '2019-06-20 16:29:42', 'bcos', 'portal', NULL, NULL, '402882526b6f837d016b73eada170090', '1', NULL, '\0', '', '4', '{\"8080\":\"TCP\"}', '91bfde4111ca4012b9118eef1d4d7540', 'portal', '3', 'bcos', NULL, NULL, NULL);
INSERT INTO `bdos`.`bdos_service` (`id`, `cmd`, `cpu`, `create_time`, `created_by`, `description`, `env`, `hpa`, `image_version_id`, `instance`, `is_pod_mutex`, `is_restart_effect`, `is_used_apm`, `memory`, `port_and_protocol`, `project_id`, `service_name`, `status`, `tenant_name`, `update_time`, `event_logs`, `image_id`) VALUES ('402882526b6f837d016b74029d1500b5', '', '2', '2019-06-20 16:30:56', 'bcos', 'bpm', NULL, NULL, '402882526b6f837d016b73f1a43d009d', '1', NULL, '\0', '', '4', '{\"8080\":\"TCP\"}', '91bfde4111ca4012b9118eef1d4d7540', 'bpm', '3', 'bcos', NULL, NULL, NULL);
INSERT INTO `bdos`.`bdos_service` (`id`, `cmd`, `cpu`, `create_time`, `created_by`, `description`, `env`, `hpa`, `image_version_id`, `instance`, `is_pod_mutex`, `is_restart_effect`, `is_used_apm`, `memory`, `port_and_protocol`, `project_id`, `service_name`, `status`, `tenant_name`, `update_time`, `event_logs`, `image_id`) VALUES ('402882526b6f837d016b7404154d00ba', '', '6', '2019-06-20 16:32:33', 'bcos', 'bconsole', NULL, NULL, '402882526b6f837d016b73ef4cf0009b', '1', NULL, '\0', '', '10', '{\"8080\":\"TCP\"}', '91bfde4111ca4012b9118eef1d4d7540', 'bconsole', '3', 'bcos', '2019-06-20 18:07:42', NULL, NULL);
INSERT INTO `bdos`.`bdos_service` (`id`, `cmd`, `cpu`, `create_time`, `created_by`, `description`, `env`, `hpa`, `image_version_id`, `instance`, `is_pod_mutex`, `is_restart_effect`, `is_used_apm`, `memory`, `port_and_protocol`, `project_id`, `service_name`, `status`, `tenant_name`, `update_time`, `event_logs`, `image_id`) VALUES ('402882526b6f837d016b741a8ecf00d2', '', '4', '2019-06-20 16:57:05', 'bcos', 'bdos', '{\"MYSQL_PASSWORD\":\"{{mysql.password}}\",\"MYSQL_PORT\":\"{{mysql.port}}\",\"MYSQL_NAME\":\"{{mysql.databases.bdos}}\",\"MYSQL_IP\":\"{{mysql.ip}}\",\"MYSQL_USERNAME\":\"{{mysql.username}}\",\"LOG_LEVEL\":\"{{log_level}}\"}', NULL, '402882526b6f837d016b7406d41100c2', '1', NULL, '\0', '', '4', '{\"8080\":\"TCP\"}', '91bfde4111ca4012b9118eef1d4d7540', 'bdos', '3', 'bcos', '2019-06-20 17:00:49', NULL, NULL);
INSERT INTO `bdos`.`bdos_service` (`id`, `cmd`, `cpu`, `create_time`, `created_by`, `description`, `env`, `hpa`, `image_version_id`, `instance`, `is_pod_mutex`, `is_restart_effect`, `is_used_apm`, `memory`, `port_and_protocol`, `project_id`, `service_name`, `status`, `tenant_name`, `update_time`, `event_logs`, `image_id`) VALUES ('402883b26afc7bca016b06ae8bbc0129', '', '1', '2019-05-30 11:00:30', 'bcos', 'blogic', NULL, NULL, '402883b26afc7bca016b077284f50131', '1', NULL, '\0', '', '4', '{\"8080\":\"TCP\"}', '91bfde4111ca4012b9118eef1d4d7540', 'blogic', '3', 'bcos', '2019-05-30 14:37:35', NULL, NULL);
INSERT INTO `bdos`.`bdos_service` (`id`, `cmd`, `cpu`, `create_time`, `created_by`, `description`, `env`, `hpa`, `image_version_id`, `instance`, `is_pod_mutex`, `is_restart_effect`, `is_used_apm`, `memory`, `port_and_protocol`, `project_id`, `service_name`, `status`, `tenant_name`, `update_time`, `event_logs`, `image_id`) VALUES ('402883b26afc7bca016b079a594b013d', '', '2', '2019-05-30 15:18:04', 'bcos', 'pinpoint', NULL, NULL, '402883b26afc7bca016b078463f30139', '1', NULL, '\0', '', '4', '{\"8080\":\"TCP\",\"9994\":\"TCP\",\"9995\":\"UDP\",\"9996\":\"UDP\"}', '91bfde4111ca4012b9118eef1d4d7540', 'pinpoint', '3', 'bcos', NULL, NULL, NULL);
INSERT INTO `bdos`.`bdos_service` (`id`, `cmd`, `cpu`, `create_time`, `created_by`, `description`, `env`, `hpa`, `image_version_id`, `instance`, `is_pod_mutex`, `is_restart_effect`, `is_used_apm`, `memory`, `port_and_protocol`, `project_id`, `service_name`, `status`, `tenant_name`, `update_time`, `event_logs`, `image_id`) VALUES ('402882b36beaea0c016befb53e2300ad', '', '1', '2019-07-14 16:59:20', 'bcos', 'bdocs', NULL, NULL, '402882b36beaea0c016befaf02bb00a8', '1', NULL, '\0', '', '1', '{\"8080\":\"TCP\"}', '91bfde4111ca4012b9118eef1d4d7540', 'bdocs', '3', 'bcos', NULL, NULL, NULL);

-- ----------------------------
-- Records of bdos_image
-- ----------------------------

INSERT INTO `bdos`.`bdos_image` (`id`, `ci_type`, `create_time`, `created_by`, `description`, `image_name`, `image_size`, `image_type`, `image_version`, `ports`, `project_id`, `tenant_name`, `version_num`) VALUES ('402882526b6f837d016b73e8fbf1007e', '2', '2019-06-20 16:02:57', 'bcos', NULL, 'cas', '676.569719', '2', 'v1.4.0', '8080', NULL, 'library', '1');
INSERT INTO `bdos`.`bdos_image` (`id`, `ci_type`, `create_time`, `created_by`, `description`, `image_name`, `image_size`, `image_type`, `image_version`, `ports`, `project_id`, `tenant_name`, `version_num`) VALUES ('402882526b6f837d016b73ea00cd0086', '2', '2019-06-20 16:04:03', 'bcos', NULL, 'security', '676.133428', '2', 'v1.4.0', '8080', NULL, 'library', '1');
INSERT INTO `bdos`.`bdos_image` (`id`, `ci_type`, `create_time`, `created_by`, `description`, `image_name`, `image_size`, `image_type`, `image_version`, `ports`, `project_id`, `tenant_name`, `version_num`) VALUES ('402882526b6f837d016b73eada17008f', '2', '2019-06-20 16:04:59', 'bcos', NULL, 'portal', '731.660619', '2', 'v1.4.0', '8080', NULL, 'library', '1');
INSERT INTO `bdos`.`bdos_image` (`id`, `ci_type`, `create_time`, `created_by`, `description`, `image_name`, `image_size`, `image_type`, `image_version`, `ports`, `project_id`, `tenant_name`, `version_num`) VALUES ('402882526b6f837d016b73ef4cf0009a', '1', '2019-06-20 16:09:51', 'bcos', NULL, 'bconsole', '1062.860535', '2', 'v1.4.0', '8080', NULL, 'library', '1');
INSERT INTO `bdos`.`bdos_image` (`id`, `ci_type`, `create_time`, `created_by`, `description`, `image_name`, `image_size`, `image_type`, `image_version`, `ports`, `project_id`, `tenant_name`, `version_num`) VALUES ('402882526b6f837d016b73f1a43d009c', '2', '2019-06-20 16:12:24', 'bcos', NULL, 'bpm', '782.542126', '2', 'v1.0.0', '8080', NULL, 'library', '1');
INSERT INTO `bdos`.`bdos_image` (`id`, `ci_type`, `create_time`, `created_by`, `description`, `image_name`, `image_size`, `image_type`, `image_version`, `ports`, `project_id`, `tenant_name`, `version_num`) VALUES ('402882526b6f837d016b7406d41100c1', '2', '2019-06-20 16:35:33', 'bcos', NULL, 'bdos', '1408.695968', '2', 'v1.0.4', '8080', NULL, 'library', '1');
INSERT INTO `bdos`.`bdos_image` (`id`, `ci_type`, `create_time`, `created_by`, `description`, `image_name`, `image_size`, `image_type`, `image_version`, `ports`, `project_id`, `tenant_name`, `version_num`) VALUES ('402883b26afc7bca016b069af62c0124', '2', '2019-07-01 19:39:46', 'bcos', NULL, 'blogic', '718.913678', '2', 'v0.9.2', '', NULL, 'library', '3');
INSERT INTO `bdos`.`bdos_image` (`id`, `ci_type`, `create_time`, `created_by`, `description`, `image_name`, `image_size`, `image_type`, `image_version`, `ports`, `project_id`, `tenant_name`, `version_num`) VALUES ('402883b26afc7bca016b078463f20138', '2', '2019-05-30 14:54:05', 'bcos', NULL, 'pinpoint', '685.167432', '2', 'v1.7.4', '', NULL, 'library', '1');
INSERT INTO `bdos`.`bdos_image` (`id`, `ci_type`, `create_time`, `created_by`, `description`, `image_name`, `image_size`, `image_type`, `image_version`, `ports`, `project_id`, `tenant_name`, `version_num`) VALUES ('402882b36beaea0c016befaf02ba00a7', '2', '2019-07-14 16:58:34', 'bcos', NULL, 'bdocs', '594.29171', '2', 'v0.1.0', '8080', NULL, 'library', '1');

-- ----------------------------
-- Records of bdos_image_version
-- ----------------------------

INSERT INTO `bdos`.`bdos_image_version` (`id`, `ci_type`, `create_time`, `created_by`, `image_id`, `image_size`, `image_type`, `image_version`, `ports`, `project_id`) VALUES ('402882526b6f837d016b73e8fbf2007f', '2', '2019-06-20 16:02:57', 'bcos', '402882526b6f837d016b73e8fbf1007e', '676.569719', '2', 'v1.4.0', '8080', NULL);
INSERT INTO `bdos`.`bdos_image_version` (`id`, `ci_type`, `create_time`, `created_by`, `image_id`, `image_size`, `image_type`, `image_version`, `ports`, `project_id`) VALUES ('402882526b6f837d016b73ea00cd0087', '2', '2019-06-20 16:04:03', 'bcos', '402882526b6f837d016b73ea00cd0086', '676.133428', '2', 'v1.4.0', '8080', NULL);
INSERT INTO `bdos`.`bdos_image_version` (`id`, `ci_type`, `create_time`, `created_by`, `image_id`, `image_size`, `image_type`, `image_version`, `ports`, `project_id`) VALUES ('402882526b6f837d016b73eada170090', '2', '2019-06-20 16:04:59', 'bcos', '402882526b6f837d016b73eada17008f', '731.660619', '2', 'v1.4.0', '8080', NULL);
INSERT INTO `bdos`.`bdos_image_version` (`id`, `ci_type`, `create_time`, `created_by`, `image_id`, `image_size`, `image_type`, `image_version`, `ports`, `project_id`) VALUES ('402882526b6f837d016b73ef4cf0009b', '1', '2019-06-20 16:09:51', 'bcos', '402882526b6f837d016b73ef4cf0009a', '1062.860535', '2', 'v1.4.0', '8080', NULL);
INSERT INTO `bdos`.`bdos_image_version` (`id`, `ci_type`, `create_time`, `created_by`, `image_id`, `image_size`, `image_type`, `image_version`, `ports`, `project_id`) VALUES ('402882526b6f837d016b73f1a43d009d', '2', '2019-06-20 16:12:24', 'bcos', '402882526b6f837d016b73f1a43d009c', '782.542126', '2', 'v1.0.0', '8080', NULL);
INSERT INTO `bdos`.`bdos_image_version` (`id`, `ci_type`, `create_time`, `created_by`, `image_id`, `image_size`, `image_type`, `image_version`, `ports`, `project_id`) VALUES ('402882526b6f837d016b7406d41100c2', '2', '2019-06-20 16:35:33', 'bcos', '402882526b6f837d016b7406d41100c1', '1408.695968', '2', 'v1.0.4', '8080', NULL);
INSERT INTO `bdos`.`bdos_image_version` (`id`, `ci_type`, `create_time`, `created_by`, `image_id`, `image_size`, `image_type`, `image_version`, `ports`, `project_id`) VALUES ('402883b26afc7bca016b077284f50131', '2', '2019-05-30 14:34:34', 'bcos', '402883b26afc7bca016b069af62c0124', '718.988953', '2', 'v0.9.2', '8080', NULL);
INSERT INTO `bdos`.`bdos_image_version` (`id`, `ci_type`, `create_time`, `created_by`, `image_id`, `image_size`, `image_type`, `image_version`, `ports`, `project_id`) VALUES ('402883b26afc7bca016b078463f30139', '2', '2019-05-30 14:54:05', 'bcos', '402883b26afc7bca016b078463f20138', '685.167432', '2', 'v1.7.4', '8080', NULL);
INSERT INTO `bdos`.`bdos_image_version` (`id`, `ci_type`, `create_time`, `created_by`, `image_id`, `image_size`, `image_type`, `image_version`, `ports`, `project_id`) VALUES ('402882b36beaea0c016befaf02bb00a8', '2', '2019-07-14 16:58:34', 'bcos', '402882b36beaea0c016befaf02ba00a7', '594.29171', '2', 'v0.1.0', '8080', NULL);

-- ----------------------------
-- Table structure for service_hostpath
-- ----------------------------
DROP TABLE IF EXISTS `bdos_service_hostpath`;
CREATE TABLE `bdos_service_hostpath` (
  `id` varchar(255) COLLATE utf8_bin NOT NULL,
  `host_path` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `mount_path` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `service_id` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

-- ----------------------------
-- Records of service_hostpath
-- ----------------------------

INSERT INTO `bdos`.`bdos_service_hostpath` (`id`, `host_path`, `mount_path`, `service_id`) VALUES ('1', '/mnt/mycephfs', '/mnt/mycephfs', '402881966ae40c68016ae7bb1a80007c');
INSERT INTO `bdos`.`bdos_service_hostpath` (`id`, `host_path`, `mount_path`, `service_id`) VALUES ('2', '/data01', '/etc/docker/certs.d/', '402881966ae40c68016ae7bb1a80007c');
INSERT INTO `bdos`.`bdos_service_hostpath` (`id`, `host_path`, `mount_path`, `service_id`) VALUES ('3', '/etc/ceph', '/etc/ceph', '402881966ae40c68016ae7bb1a80007c');

-- ----------------------------
-- Table structure for bdos_config_template
-- ----------------------------
DROP TABLE IF EXISTS `bdos_config_template`;
CREATE TABLE `bdos_config_template` (
  `id` varchar(255) NOT NULL,
  `config_data` longtext COLLATE utf8_bin,
  `create_time` datetime DEFAULT NULL,
  `created_by` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `file_number` int(11) DEFAULT NULL,
  `project_id` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `template_name` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `tenant_name` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `update_time` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of bdos_config_template
-- ----------------------------

INSERT INTO `bdos`.`bdos_config_template` (`id`, `config_data`, `create_time`, `created_by`, `file_number`, `project_id`, `template_name`, `tenant_name`, `update_time`) VALUES ('402881966ae40c68016ae7b4cb280076', '{application.properties: \"server.port = 8080\\nspring.mvc.view.prefix=/WEB-INF/pages/\\nspring.mvc.view.suffix=.jsp\\nserver.context-path=/xbconsole\\nserver.session.timeout\r\n    = 3600\\n#国际化\\nspring.messages.encoding=UTF-8\\nspring.messages.basename=i18n/messages\\n\\njs.casServerUrlPrefix=/cas\\njs.serverName=bcos.bonc.pro\\njs.securityServiceURL=/security\\njs.portalUrl=/portal\\n\\nbase.platform.enable=true\\nbase.platform.quartzConfigInit=true\\nbase.platform.skipUrls=.*/v1/serflow.*,.*/mall/.*,.*/login/toLogin,.*/login/actionLogin,.*/resources/.*,.*/ApisEmploy/*,.*/error,.*/v1/component/.*,.*/api/product/.*,.*/v1/mall/.*,.*/v1/feedback/.*,/resources/.*,/,.*/api/.*,.*/tenantId/.*,,.*/productOrder/.*,.*/bpmOrderProcess/.*,.*/monitor/api/machine/get,.*/apisEmploy/.*,.*/soap/.*,.*/rest/.*,/out.jsp,/noauth,/index.jsp,/ssoerror.html,/monitor.jsp,/struts/.*,.*/ruleTypeList,.*/ruleType,.*/monitor,.*css$,.*js$,.*jpg$,.*jpeg$,.*bmp$,.*png$,.*gif$,.*ico$,/dockingController/updateApiState,/propconfig/.*\\n\\nbase.platform.sso.name=SsoCasFilter\\n#base.platform.sso.serverName=http://bconsole:8080\\nbase.platform.sso.serverName=bconsole:8080\\nbase.platform.sso.casServerUrlPrefix=http://cas:8080/cas\\nbase.platform.sso.casServerLoginUrl=http://cas:8080/cas/login\\nbase.platform.sso.singleSignOut=true\\n\\nbase.platform.sso.loginUserHandle=com.bonc.security.sso.SSOAuthHandle\\n#base.platform.sso.loginUserHandle=com.ssoConfig.filter.DemoAuthHandleImpl\\nbase.platform.sso.analogLoginCASCheck=\\nbase.platform.sso.characterEncoding=UTF-8\\nbase.platform.sso.encoding=UTF-8\\nbase.platform.sso.order=1\\n\\nbase.platform.loginHandlerConf.name\r\n    = LoginHandlerFilter\\nbase.platform.loginHandlerConf.order = 2\\nbase.platform.loginHandlerConf.bcmTenantInfoUrl\r\n    = http://bdos:8080/bdos/v1/tenant\\n\\n#防xss攻击的链接过滤\\n#防xss攻击的链接过滤\\nbase.platform.xss.xssUrl\r\n    = /v1/pageModel/.*,/v1/pageModule/.*,/v1/pageRes/.*,/v1/pageType/.*,.*\\\\\\\\.(css|js|jpg|jpeg|bmp|png|gif|ico|htm|aspx)$\r\n    \\   \\n\\nsystem.login.skipUrl =/v1/serflow/**,/v1/serflow/component/**,/v1/serflow/service/**,/servflow/v1/api/**,/v1/component/**,/,/v1/mall/**,/v1/pro/**,/v1/feedback/**,**/productInfosByCat,/login/toLogin,/login/actionLogin,/user/findCurUser,/resources/**,/v1/tenantId/*/svcorders,/v1/sqlQuery/*,/apisEmploy/**,/*/apisEmploy/*/*,/TBtest/*,/getUser/tokenuserinfo,/getUser/loginIduserinfo,/casSsoLogin/login,/ssoerror.jsp,/dockingController/deleteById,/resources/**,/propconfig/**\\n\\n#context\r\n    url\\nbpm.context.url = http://bpm:8080/bpm\\nbpm_process_canuse_category=new node1\\npaas.context.url\r\n    = http://172.16.3.60:8888/paas\\nbdos.context.url = http://bdos:8080/bdos\\nbdos.websocket.context.url\r\n    = \\nbigdata.context.url = http://172.16.40.1:20001\\nblogic.context.url=http://blogic:8080/blogic\\n\\nspring.datasource.enable-multi-tenant=false\\nspring.datasource.type=org.apache.tomcat.jdbc.pool.DataSource\\nspring.datasource.driver-class-name=com.mysql.jdbc.Driver\\n\\n#\r\n    spring.datasource.driverClassName=com.mysql.jdbc.Driver\\n# spring.datasource.url=\r\n    jdbc:mysql://172.16.3.25:3306/xbconsole?characterEncoding=utf-8&autoReconnect=true\\n#\r\n    spring.datasource.username=root\\n# spring.datasource.password=ga4Ql1JT\\nspring.datasource.driverClassName=com.mysql.jdbc.Driver\\nspring.datasource.url=\r\n    jdbc:mysql://172.16.3.30:3306/bconsole?characterEncoding=utf-8&autoReconnect=true\\nspring.datasource.username=root\\nspring.datasource.password=123456\\n\r\n    \\  \\n\\nspring.datasource.initialSize=5\\nspring.datasource.minIdle=5\\nspring.datasource.maxActive=20\\nspring.datasource.maxWait=60000\\nspring.datasource.timeBetweenEvictionRunsMillis=60000\\nspring.datasource.minEvictableIdleTimeMillis=300000\\nspring.datasource.validationQuery=SELECT\r\n    1 FROM DUAL\\nspring.datasource.testWhileIdle=true\\nspring.datasource.testOnBorrow=false\\nspring.datasource.testOnReturn=false\\nspring.datasource.poolPreparedStatements=true\\nspring.datasource.maxPoolPreparedStatementPerConnectionSize=20\\nspring.datasource.filters=stat,wall,log4j\\n\\nlogging.level.mapper=error\\nmybatis.config=classpath:mybatis-config.xml\\n\\n#定时任务配置--无需修改\\nquartz.open-cluster=false\\n\r\n    # 集群配置文件路径\\nquartz.config-location= /quartz.properties\\n # 集群数据库，使用当前数据库可以设置为空或者default\\nquartz.data-source=default\\n\\n#config\r\n    root logger\\nlog4j.rootLogger = ERROR,system.out\\nlog4j.appender.system.out=org.apache.log4j.ConsoleAppender\\nlog4j.appender.system.out.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.system.out.layout.ConversionPattern=[Log]\r\n    %5p[%F:%L]:%m%n\\n\\n#config this Project.file logger\\nlog4j.logger.thisProject.file=ERROR,thisProject.file.out\\nlog4j.appender.thisProject.file.out=org.apache.log4j.DailyRollingFileAppender\\nlog4j.appender.thisProject.file.out.File=logContentFile.log\\nlog4j.appender.thisProject.file.out.layout=org.apache.log4j.PatternLayout\\n\\n#push\r\n    open(true / false)\\napiPush.open=false\\n#url address\\ndirectionalityurl = api-manager/\\n\\n#url\r\n    port http\\nurlToken.http = 8280\\n#url port https\\nurlToken.https = 8243\\n#url\r\n    port api http(important)\\nurlApi.http = 9763\\n#url port api https\\nurlApi.https\r\n    = 9443\\n#server url\\nmine.url = http://xIntegration:8080/xIntegration\\n\\n\\n\\n#\r\n    限流策略 1 单机版  2 分布式版\\nlogAndFlowControl.limit_policy=1\\n# 缓存刷新策略（涉及黑白名单与限流名单的加载）\r\n    1 去infomation_schema查找  2.定时全部刷新 3 初始化后被通知调用(单机版)\\nlogAndFlowControl.cache_policy=3\\n#\r\n    分布式限流所需redis配置\\nlogAndFlowControl.redis_ip=127.0.0.1\\nlogAndFlowControl.redis_port=6379\\nlogAndFlowControl.redis_maxIdle=20\\nlogAndFlowControl.redis_maxTotal=100\\nlogAndFlowControl.schemaName=esb\\n\\n#url\\nservflow.url\r\n    = http://servflow:8080/servflow\\n\\nmultipart.enabled=true\\nmultipart.max-file-size=5120Mb\\nmultipart.max-request-size=10240Mb\\n\\nspring.http.multipart.maxFileSize=5120Mb\\nspring.http.multipart.maxRequestSize=10240Mb\\n\\n#ftp\r\n    config\\nftp.xbconsole.enabled=true\\nftp.xbconsole.host=172.16.3.54\\nftp.xbconsole.port=21021\\nftp.xbconsole.username=bdosimg\\nftp.xbconsole.password=bonc.123\\nftp.xbconsole.encoding=UTF-8\\n\"\r\n  bonc-security-base.properties: |-\r\n    appCode = xIn\r\n    apiType=REST\r\n    securityServiceURL=http://security:8080/security\r\n    sqltranforms=com.bonc.security.transform.TenantSQLTransform,com.bonc.security.transform.PrivilegeSQLTransform\r\n  logback.xml: \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<configuration>\\n    <!--定义日志文件的存储地址\r\n    勿在 LogBack 的配置中使用相对路径-->  \\n   <!--  <property name=\\\"LOG_HOME\\\" value=\\\"/usr/local/logback/xIntegration\\\"/>\r\n    -->  \\n    <property name=\\\"LOG_LEVEL\\\" value=\\\"ERROR\\\" /> \\n    <property name=\\\"LOG_HOME\\\"\r\n    value=\\\"logs\\\" /> \\n    <!-- 控制台输出 -->   \\n    <appender name=\\\"STDOUT\\\" class=\\\"ch.qos.logback.core.ConsoleAppender\\\">\\n\r\n    \\       <encoder class=\\\"ch.qos.logback.classic.encoder.PatternLayoutEncoder\\\">\r\n    \\n             <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->\r\n    \\n            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50}\r\n    - %msg%n</pattern>   \\n        </encoder> \\n    </appender>\\n    <!-- 按照每天生成日志文件\r\n    -->   \\n    <appender name=\\\"FILE\\\"  class=\\\"ch.qos.logback.core.rolling.RollingFileAppender\\\">\r\n    \\  \\n        <rollingPolicy class=\\\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\\\">\\n\r\n    \\           <!--日志文件输出的文件名-->\\n            <FileNamePattern>${LOG_HOME}/bcos.%d{yyyy-MM-dd}.log</FileNamePattern>\r\n    \\n            <!--日志文件保留天数-->\\n            <MaxHistory>30</MaxHistory>\\n        </rollingPolicy>\r\n    \\  \\n        <encoder class=\\\"ch.qos.logback.classic.encoder.PatternLayoutEncoder\\\">\r\n    \\n            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->\r\n    \\n            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50}\r\n    - %msg%n</pattern>   \\n        </encoder> \\n        <!--日志文件最大的大小-->\\n       <triggeringPolicy\r\n    class=\\\"ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy\\\">\\n         <MaxFileSize>10MB</MaxFileSize>\\n\r\n    \\      </triggeringPolicy>\\n    </appender> \\n  \\n    <!--myibatis log configure\r\n    -->\\n  <logger name=\\\"com.apache.ibatis\\\" level=\\\"ERROR\\\" />\\n  <logger name=\\\"java.sql.Connection\\\"\r\n    level=\\\"ERROR\\\" />\\n  <logger name=\\\"java.sql.Statement\\\" level=\\\"ERROR\\\" />\\n\r\n    \\ <logger name=\\\"java.sql.PreparedStatement\\\" level=\\\"ERROR\\\" />\\n\\n    <!-- 日志输出级别\r\n    -->\\n    <root level=\\\"${LOG_LEVEL}\\\">\\n        <appender-ref ref=\\\"STDOUT\\\" />\\n\r\n    \\       <appender-ref ref=\\\"FILE\\\" />\\n    </root> \\n</configuration>\"}', '2019-05-24 10:39:06', 'bcos', '3', '91bfde4111ca4012b9118eef1d4d7540', 'bconsole', 'bcos', NULL);
INSERT INTO `bdos`.`bdos_config_template` (`id`, `config_data`, `create_time`, `created_by`, `file_number`, `project_id`, `template_name`, `tenant_name`, `update_time`) VALUES ('4028832f6abe5156016ac3c90a1c00ea', '{cfg.db.deploy.properties: |2+\r\n\r\n    database.encryptType=0\r\n    database.type=mysql\r\n    database.driver=com.mysql.jdbc.Driver\r\n    database.url=jdbc:mysql://172.16.3.30:3306/bpm?characterEncoding=utf-8&autoReconnect=true\r\n    database.username=root\r\n    database.password=123456\r\n\r\n\r\n    security_database.driver=com.mysql.jdbc.Driver\r\n    security_database.url=jdbc:mysql://172.16.3.30:3306/portal?characterEncoding=utf-8&autoReconnect=true\r\n    security_database.username=root\r\n    security_database.password=123456\r\n\r\n\r\n    database.acquireIncrement=3\r\n    database.initialPoolSize=3\r\n    database.minPoolSize=3\r\n    database.maxPoolSize=100\r\n    database.maxIdleTime=120\r\n    #deploy workflow to portal-menu\r\n    integration.portal.menu=true\r\n\r\n    #hibernate.dialect=org.hibernate.dialect.Oracle10gDialect\r\n    hibernate.dialect=org.hibernate.dialect.MySQL5Dialect\r\n    hibernate.hbm2ddl.auto=update\r\n    hibernate.show_sql=false\r\n    hibernate.default_schema=bpm\r\n    hibernate.jdbc.batch_size=20\r\n}', '2019-05-17 11:14:53', 'bcos', '1', '91bfde4111ca4012b9118eef1d4d7540', 'bpm-cfg', 'bcos', NULL);
INSERT INTO `bdos`.`bdos_config_template` (`id`, `config_data`, `create_time`, `created_by`, `file_number`, `project_id`, `template_name`, `tenant_name`, `update_time`) VALUES ('4028832f6abe5156016ac3c90a1c00eb', '{cas.properties: \"server.prefix=http://127.0.0.1:8080/cas\\n\\ncas.securityContext.serviceProperties.service=${server.prefix}/services/j_acegi_cas_security_check\\n#\r\n    Names of roles allowed to access the CAS service manager\\ncas.securityContext.serviceProperties.adminRoles=ROLE_ADMIN\\ncas.securityContext.casProcessingFilterEntryPoint.loginUrl=${server.prefix}/login\\ncas.securityContext.ticketValidator.casServerUrlPrefix=${server.prefix}\\n\\n#modify\r\n    2012-1-31\\n#cas.themeResolver.defaultThemeName=cas-theme-default\\n#cas.viewResolver.basename=default_views\\ncas.themeResolver.defaultThemeName=cas-theme-bonc\\ncas.viewResolver.basename=bonc_views\\n\\nhost.name=cas\\n\\ncas.default.portal=\\ncas.custom.portal=http://portal:8080/portal/\\ncas.custom.skipUrl=/bconsole,/bconsole/,/bconsole/v1/mall/.*\\n\\ndatabase.hibernate.dialect=org.hibernate.dialect.MySQLDialect\\n\\n#add\r\n    by 2011.10.31\\ndb.authentication.sqlWithSHA1=select upper(password) from userinfo\r\n    \\ where login_id=?\\ndb.authentication.sqlWithMD5=select  upper(password) from\r\n    userinfo  where login_id=?\\ndb.authentication.sql=select  password from userinfo\r\n    \\ where login_id=?\\ndb.oauth.qqsql=select qqopenid from userinfo  where qqopenid=?\\ndb.oauth.qqusernameSql=select\r\n    login_id from userinfo  where qqopenid=?\\ndb.oauth.wxsql=select wxopenid from\r\n    userinfo  where wxopenid=?\\ndb.oauth.wxusernameSql=select login_id from userinfo\r\n    \\ where wxopenid=?\\ndb.authentication.smsValidateSql=SELECT MOBILE FROM userinfo\r\n    where LOGIN_ID=\\\"?\\\"\\ndb.unionId.getUnionId=select unionid from userinfo where\r\n    login_id=?\\ndb.unionId.setUnionId=update userinfo set unionid=? where login_id=?\\ndb.authentication.authSql=SELECT\r\n    IS_NORAML FROM userinfo where LOGIN_ID=?\\ndb.authentication.applySql=SELECT IS_APPLY\r\n    \\ FROM userinfo where LOGIN_ID=?\\n\\n\\ndb.driverClassName=com.bonc.jdbc.MysqlDriver\\ndb.url=jdbc:bonc:mysql://172.16.3.30:3306/portal?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=UTF8\\ndb.username=root\\ndb.password=123456\\n\\n\\nc3p0.max_size=20\\nc3p0.min_size=5\\nc3p0.initial_pool_size=10\\nc3p0.max_idle_time=60\\nc3p0.acquire_increment=5\\n\\n##########\r\n    ticket \\\\u4fdd\\\\u5b58\\\\u5728redis\\\\u4e2d\\\\u65f6\\\\u9700\\\\u8981\\\\u7684\\\\u914d\\\\u7f6e\\n\\nredis_database_num=0\\nhosts=127.0.0.1\\nport=6379\\nmax_active=100\\nmax_idle=10\\nmax_wait=5000\\nst_time=3600000\\ntgt_time=7200000\\n\\n\\n#########\r\n    \\ \\\\u767b\\\\u5f55\\\\u65f6\\\\u624b\\\\u673a\\\\u77ed\\\\u4fe1\\\\u9a8c\\\\u8bc1\\\\u7801\\\\u914d\\\\u7f6e\\nsmsValidate_service=http://202.101.89.186:9090/WebServiceApp/ws/integralService?wsdl\\nsmsValidate_time=1\\n\\n#\\\\u662F\\\\u5426\\\\u5F00\\\\u542F\\\\u4E2A\\\\u6027\\\\u5316\\\\u77ED\\\\u4FE1\\\\u9A8C\\\\u8BC1\\ncas.enableCustomerDefinedRegular=false\\ncas.extraValidateLoginErrorTimes=2\\n\\n#Docker\\\\u73AF\\\\u5883\\\\u5907\\\\u4EFD\\\\u4E3B\\\\u9898\\\\u6587\\\\u4EF6\\nbackupOfThemefile=\\n\\n#\\\\u81EA\\\\u5B9A\\\\u4E49\\\\u77ED\\\\u4FE1\\\\u89C4\\\\u5219\\\\u9A8C\\\\u8BC1\\\\u670D\\\\u52A1\\\\u5730\\\\u5740\\ncustomerSmsRuleService=http://172.16.64.232:8769/authenticationrules/matchRule/\\ntimeScope=30\\n\\ncas.qqoauth.appid=101462107\\ncas.qqoauth.appkey=53c828efb566ea43acf56379634b5adc\\n\\ncas.wxoauth.appid=wxbeec6a015d06b852\\ncas.wxoauth.appkey=f78155162956613be7ab29498e453933\\n\\ncas.oauth.redirect_uri=https://platform.cloudiip.com/cas/login\\n\\n\\n\\n#\\\\u8FDE\\\\u7EED\\\\u767B\\\\u5F55\\\\u5931\\\\u8D25\\\\uFF0C\\\\u51BB\\\\u7ED3\\\\u8D26\\\\u53F7\\ncas.allowFrozenAccount=false\\ncas.loginErrorTimes=5\\ncas.loginErrorDuration=5\\ncas.freezenAccountURL=http://security:8080/security/rest/account/block\r\n    \\             \\n\\n#\\\\u9ED8\\\\u8BA4\\\\u767B\\\\u5F55\\\\u754C\\\\u9762\\\\u5351\\\\u804C\\\\u4FE1\\\\u606F\\ncas.theme=bonc\\ncas.title=\\\\u5DE5\\\\u4E1A\\\\u4E92\\\\u8054\\\\u7F51\\\\u5F00\\\\u53D1\\\\u5E73\\\\u53F0\\ncas.logo=logo.png\\ncas.enableAuthCode=false\\ncas.enableQuestionValidate=false\\ncas.enableFindPassword=true\\ncas.enableRememberPassword=false\\ncas.enableClientEncryption=false\\ncas.enableSmsAuthCode=false\\ncas.enableMutitimesLogin=false\\ncas.forgetPasswordURL=/security/pwdinfo!forgetPwd.action\\ncas.registerURL=/security/reg!reg.action\\n\\ncas.homeUrl=/bconsole\\n\"}', '2019-05-17 11:14:53', 'bcos', '1', '91bfde4111ca4012b9118eef1d4d7540', 'cas-properties', 'bcos', NULL);
INSERT INTO `bdos`.`bdos_config_template` (`id`, `config_data`, `create_time`, `created_by`, `file_number`, `project_id`, `template_name`, `tenant_name`, `update_time`) VALUES ('4028832f6abe5156016ac3c90a1c00ed', '{\"cfg.db.deploy.properties\":\" |-\r\n    #######################datasource config################################\r\n    #for mysql\r\n    database.type=mysql\r\n    database.driver=com.bonc.jdbc.MysqlDriver\r\n    database.url=jdbc:bonc:mysql://172.16.3.30:3306/portal?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=UTF8\r\n    database.username=root\r\n    database.password=123456\r\n\r\n\r\n    database.initialPoolSize=3\r\n    database.acquireIncrement=3\r\n    database.minPoolSize=3\r\n    database.maxPoolSize=20\r\n    database.maxIdleTime=120\r\n    database.encryptType=0\r\n\r\n    #######################hibernate config################################\r\n\r\n    hibernate.dialect=org.hibernate.dialect.MySQL5Dialect\r\n    hibernate.show_sql=true\r\n    hibernate.hbm2ddl.auto=update\r\n    hibernate.jdbc.batch_size=20\r\n    hibernate.default_schema=portal\"}', '2019-05-17 11:14:53', 'bcos', '1', '91bfde4111ca4012b9118eef1d4d7540', 'portal-cfg', 'bcos', NULL);
INSERT INTO `bdos`.`bdos_config_template` (`id`, `config_data`, `create_time`, `created_by`, `file_number`, `project_id`, `template_name`, `tenant_name`, `update_time`) VALUES ('4028832f6abe5156016ac3c90a1c00ee', '', '2019-05-17 11:14:53', 'bcos', '1', '91bfde4111ca4012b9118eef1d4d7540', 'security-cfg', 'bcos', NULL);
INSERT INTO `bdos`.`bdos_config_template` (`id`, `config_data`, `create_time`, `created_by`, `file_number`, `project_id`, `template_name`, `tenant_name`, `update_time`) VALUES ('4028832f6abe5156016ac3c90a1c00ef', '', '2019-05-17 11:14:53', 'bcos', '1', '91bfde4111ca4012b9118eef1d4d7540', 'security-sec', 'bcos', NULL);
