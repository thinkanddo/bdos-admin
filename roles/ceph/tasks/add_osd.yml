- name: 设置数据盘和日志盘信息
  set_fact:
    osd_data: "{{item_osd[0].devName}}"
    osd_journal: "{{item_osd[1].devName}}"
    osd_data_parent: "{{item_osd[0].devParent}}"
    osd_journal_parent: "{{item_osd[1].devParent}}"

# 这里获取分区号是因为分区在主设备后缀的可能不仅仅只有分区号,可能还有些其他东西,比如p1 p2

- name: 获取osd数据盘分区号
  parted: device={{osd_data_parent}} unit=GB
  register: osd_data_list

- name: 设置osd数据盘分区号变量
  set_fact: osd_data_num={{item.num}}
  when: osd_data|match(osd_data_parent~".*"~item.num)
  with_items: "{{osd_data_list.partitions}}"

- name: 获取osd日志盘分区号
  parted: device={{osd_journal_parent}} unit=GB
  register: osd_journal_list

- name: 设置osd日志盘分区号变量
  set_fact: osd_journal_num={{item.num}}
  when: osd_journal|match(osd_journal_parent~".*"~item.num)
  with_items: "{{osd_journal_list.partitions}}"

- name: 查看该磁盘是否安装了osd
  shell: |
    result=$(df -h | grep /var/lib/ceph/osd | grep -w {{osd_data}} | awk '{print $6}')
    if [[ $result != '' ]]; then
      echo ${result:0-1}
    fi
  register: old_osd_id

- name: 清理osd
  script: clean_osd.sh {{old_osd_id.stdout}}

- name: 设置osd的唯一标识
  shell: uuidgen
  register: osd_fsid

- name: 获取集群fsid
  shell: ceph-osd --cluster=ceph --show-config-value=fsid
  args:
    chdir: "{{ceph_work_dir}}/"
  register: ceph_fsid

- name: 格式化磁盘
  filesystem: fstype=xfs dev={{item}} force=yes
  with_items:
  - "{{osd_data}}"
  - "{{osd_journal}}"

- name: 给磁盘打标签
  shell: |
    sgdisk --change-name={{osd_data_num}}:"ceph data" --typecode={{osd_data_num}}:'4FBD7E29-9D25-41B8-AFD0-062C0CEFF05D' -- {{osd_data_parent}}
    sgdisk --change-name={{osd_journal_num}}:"ceph journal" --typecode={{osd_journal_num}}:'45B0969E-9B03-4F30-B4C6-B4B80CEFF106' -- {{osd_journal_parent}}

- name: 获取日志盘的uuid
  shell: ls -l /dev/disk/by-partuuid/ | grep -w {{osd_journal[5:]}} | awk '{print $9}'
  register: journal_uuid

- name: 创建临时工作目录
  file: path={{ceph_work_dir}}/tmp/mnt.UfbyTs state=directory owner=ceph group=ceph

- name: 临时挂载数据盘
  mount: name={{ceph_work_dir}}/tmp/mnt.UfbyTs src={{osd_data}} fstype=xfs state=mounted opts=noatime,inode64

- name: 初始化临时工作目录
  script: init_osd.sh {{ceph_work_dir}}/tmp/mnt.UfbyTs {{ceph_fsid.stdout}} {{osd_fsid.stdout}} {{journal_uuid.stdout}}

- name: 卸载临时挂载
  mount: name={{ceph_work_dir}}/tmp/mnt.UfbyTs  state=absent

- name: 删除临时工作目录
  file: path={{ceph_work_dir}}/tmp/mnt.UfbyTs state=absent

- name: 激活osd
  shell: |
    udevadm settle --timeout=600
    /usr/bin/flock -s {{osd_data[:-1]}} /sbin/partprobe {{osd_data[:-1]}}
    udevadm settle --timeout=600
    udevadm trigger --action=add --sysname-match {{osd_data[5:]}}

- name: 获取osd_id
  shell: |
    wait=0
    for((i=1;i<=60;i++))
    do
      result=$(df -h | grep /var/lib/ceph/osd | grep -w {{osd_data}} | awk '{print $6}')
      if [[ $result != '' ]]; then
        echo ${result##*-}
        exit 0
      fi
      sleep 5
    done
    exit 1
  register: osd_id

- name: 添加crushmap
  shell: |
    weight=$(df -m {{osd_data}} | grep -w {{osd_data[5:]}} | awk '{print $2}' | awk '{printf("%.3f\n",$0/1024/1024)}')
    ceph osd crush add-bucket $(hostname) host
    ceph osd crush move $(hostname) root=default
    ceph osd crush add osd.{{osd_id.stdout}} $weight host=$(hostname)

- name: 启动osd
  shell: |
    systemctl enable ceph-osd@{{osd_id.stdout}}
    systemctl start ceph-osd@{{osd_id.stdout}}
    systemctl enable ceph.target