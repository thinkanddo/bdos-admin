# 参数说明
#  tag:  git 的tag标签号码

- name: 清理打包目录
  file: path={{admin.target}} state=absent

## 制作admin 包信息
- name: 更新admin代码
  args:
    chdir: "{{work_dir}}/{{admin.package}}"
  shell: git pull

- name: 设置admin当前的hash
  args:
    chdir: "{{work_dir}}/{{admin.package}}"
  shell: git reflog | head -1 | awk '{ print $1}'
  register: admin_hash

- name: 回退admin版本tag
  args:
    chdir: "{{work_dir}}/{{admin.package}}"
  shell: git reset --hard {{bcos_tag}}
  when: bcos_tag != latest_tag

- name: 获取需要更新的信息
  include_vars: file={{work_dir}}/{{admin.package}}/version name=version

## 制作boots 包
- name: 更新boots 代码
  args:
    chdir: "{{boots.path}}"
  shell: git tag -l | xargs git tag -d && git pull && git reset --hard master

- name: 设置boots当前的hash
  args:
    chdir: "{{boots.path}}"
  shell: git reflog | head -1 | awk '{ print $1}'
  register: boots_hash

- name: 回退boots版本tag
  args:
    chdir: "{{boots.path}}"
  shell: git reset --hard {{version.boots}}
  when: bcos_tag != latest_tag

- name: 制作boots包
  args:
    chdir: "{{boots.path}}"
  shell: mvn clean package

- name: 转移boots 包
  args:
    chdir: "{{boots.path}}"
  shell: rm -rf {{boots.target}}/boots.jar ; mv {{boots.package}} {{boots.target}}

- name: 推送到tools 库
  shell: mkdir -p {{boots.repo}} && cp {{boots.target}}/boots.jar {{boots.repo}}

- name: 恢复boots 最新版本
  args:
    chdir: "{{boots.path}}"
  shell: git reset --hard {{boots_hash.stdout}}
  when: bcos_tag != latest_tag


- name: 创建打包目录
  file: path={{work_dir}}/{{package_dir}} state=directory

- name: 制作版本包(时间较长，耐心等待...)
  vars:
    execute_path: "--exclude={{admin.execute|join(' --exclude=')}}"
  args:
    chdir: "{{work_dir}}"
  shell:  tar -cf {{package_dir}}/{{package_name}} {{execute_path}} {{admin.package}}

- name: 获取安装包大小
  args:
    chdir: "{{work_dir}}/{{package_dir}}"
  shell:  du -sh {{package_name}} | awk '{print $1}'
  register: package_size

## 恢复安装包版本
- name: 恢复admin 最新版本
  args:
    chdir: "{{work_dir}}/{{admin.package}}"
  shell: git reset --hard {{admin_hash.stdout}}
  when: bcos_tag != latest_tag

- name: 安装包上传到ftp
  args:
    chdir: "{{work_dir}}/{{package_dir}}"
  shell: |
    ftp -n<<- EOF
    open {{ftp.ip}} {{ftp.port}}
    user {{ftp.username}} {{ftp.password}}
    cd BCOS
    mkdir V{{target_dir}}
    cd V{{target_dir}}
    mkdir 01-install-pack
    cd 01-install-pack
    put {{package_name}}
    close
    bye
    EOF;
