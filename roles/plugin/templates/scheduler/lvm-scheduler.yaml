kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: lvm-scheduler
rules:
  - apiGroups:
      - ""
    resources:
      - "*"
    verbs:
      - "*"
  - apiGroups:
      - apps
    resources:
      - "*"
    verbs:
      - "*"
  - apiGroups:
      - extensions
    resources:
      - "*"
    verbs:
      - "*"
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - "*"
    verbs:
      - "*"
  - apiGroups:
      - policy
    resources:
      - "*"
    verbs:
      - "*"
  - apiGroups:
      - storage.k8s.io
    resources:
      - "*"
    verbs:
      - "*"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: lvm-scheduler
  namespace: kube-system
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: lvm-scheduler
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: lvm-scheduler
subjects:
  - kind: ServiceAccount
    name: lvm-scheduler
    namespace: kube-system
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: lvm-scheduler
  namespace: kube-system
data:
  policy.cfg: |
    {
    "kind" : "Policy",
    "apiVersion" : "v1",
    "predicates" : [
        {"name" : "PodFitsHostPorts"},
        {"name" : "PodFitsResources"},
        {"name" : "NoDiskConflict"},
        {"name" : "MatchNodeSelector"},
        {"name" : "HostName"}
        ],
    "priorities" : [
        {"name" : "LeastRequestedPriority", "weight" : 1},
        {"name" : "BalancedResourceAllocation", "weight" : 1},
        {"name" : "ServiceSpreadingPriority", "weight" : 1},
        {"name" : "EqualPriority", "weight" : 1}
        ],
    "extenders" : [
        {
            "urlPrefix": "http://localhost/",
            "apiVersion": "v1beta1",
            "filterVerb": "LVMPredicate",
            "bindVerb": "",
            "prioritizeVerb": "LVMPrioritize",
            "weight": 1,
            "enableHttps": false,
            "nodeCacheCapable": false
        }
        ],
    "hardPodAffinitySymmetricWeight" : 10
    }
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: lvm-scheduler
  namespace: kube-system
  labels:
    app: lvm-scheduler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: lvm-scheduler
  template:
    metadata:
      labels:
        app: lvm-scheduler
    spec:
      serviceAccountName: lvm-scheduler
      containers:
        - name: scheduler
          image: {{harbor.dns}}:{{harbor.port}}/{{images.k8s.scheduler_hyperkube}}
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - |
              /hyperkube kube-scheduler \
                --address 0.0.0.0 \
                --scheduler-name lvm-scheduler \
                --policy-configmap-namespace kube-system \
                --policy-configmap lvm-scheduler \
                --lock-object-namespace kube-system \
                --lock-object-name lvm-scheduler \
                -v=4
        - name: extender
          image: {{harbor.dns}}:{{harbor.port}}/{{images.k8s.scheduler_lvm}}
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /health
              port: 80
          readinessProbe:
            httpGet:
              path: /health
              port: 80
          ports:
            - containerPort: 80